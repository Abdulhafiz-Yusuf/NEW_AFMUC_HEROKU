[{"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/index.js":"1","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/App.js":"2","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/classes/AllClassSection.js":"3","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/NavBar.js":"4","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/admin/LogIn.js":"5","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/classes/AddClassSectionForm.js":"6","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/classes/addClassForm.js":"7","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/admin/ChangePwd.js":"8","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/students/ManageStudent.js":"9","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/classes/ClassRoom.js":"10","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/result/PrintResult.js":"11","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/classes/GotoClass.js":"12","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/subjects/ManageSubject.js":"13","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/classes/AllClasses.js":"14","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/result/ResultsGenerator.js":"15","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/subjects/SubjectTable.js":"16","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/result/ResultClassBased.js":"17","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/classes/ScoreSheetTables.js":"18","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/cards/AddingCard.js":"19","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/services/services.js":"20","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/cards/CardList.js":"21","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/cards/AddingMoreCard.js":"22","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/cards/ManageCard.js":"23","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/db.js":"24","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/result/Results.js":"25","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/reusables/Loading.js":"26","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/cards/Card.js":"27","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/result/ResultTables.js":"28","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/result/ResultData.js":"29","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/AppStore/globalStore.js":"30","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/AppStore/rootReducer.js":"31","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/AppStore/types.js":"32","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/admin/SignUp.js":"33","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/AppStore/actions/UserActions.js":"34","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/services/firebase.js":"35","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/services/firebase/FirebaseConfig.js":"36","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/LoadScreen.js":"37","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/common/LoadScreen.js":"38","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/AppStore/actions/ResultActions.js":"39"},{"size":411,"mtime":1626346666443,"results":"40","hashOfConfig":"41"},{"size":4369,"mtime":1637438711424,"results":"42","hashOfConfig":"41"},{"size":2324,"mtime":1636816655912,"results":"43","hashOfConfig":"41"},{"size":3973,"mtime":1637445496998,"results":"44","hashOfConfig":"41"},{"size":3381,"mtime":1636303698344,"results":"45","hashOfConfig":"41"},{"size":5692,"mtime":1637424234325,"results":"46","hashOfConfig":"41"},{"size":6676,"mtime":1637430327309,"results":"47","hashOfConfig":"41"},{"size":3069,"mtime":1621805198348,"results":"48","hashOfConfig":"41"},{"size":6545,"mtime":1637439863774,"results":"49","hashOfConfig":"41"},{"size":3994,"mtime":1637443787780,"results":"50","hashOfConfig":"41"},{"size":1139,"mtime":1630165814606,"results":"51","hashOfConfig":"41"},{"size":2799,"mtime":1637444138437,"results":"52","hashOfConfig":"41"},{"size":3572,"mtime":1637440620225,"results":"53","hashOfConfig":"41"},{"size":2372,"mtime":1637427716569,"results":"54","hashOfConfig":"41"},{"size":5020,"mtime":1621814498506,"results":"55","hashOfConfig":"41"},{"size":2315,"mtime":1637439834381,"results":"56","hashOfConfig":"41"},{"size":202,"mtime":1621682335134,"results":"57","hashOfConfig":"41"},{"size":5505,"mtime":1637443555350,"results":"58","hashOfConfig":"41"},{"size":3167,"mtime":1620828456044,"results":"59","hashOfConfig":"41"},{"size":17379,"mtime":1637442548597,"results":"60","hashOfConfig":"41"},{"size":1038,"mtime":1620828456048,"results":"61","hashOfConfig":"41"},{"size":2167,"mtime":1636818849262,"results":"62","hashOfConfig":"41"},{"size":2208,"mtime":1637441698425,"results":"63","hashOfConfig":"41"},{"size":324,"mtime":1637424016502,"results":"64","hashOfConfig":"41"},{"size":6030,"mtime":1621814766469,"results":"65","hashOfConfig":"41"},{"size":200,"mtime":1620828456192,"results":"66","hashOfConfig":"41"},{"size":2178,"mtime":1637426038272,"results":"67","hashOfConfig":"41"},{"size":13004,"mtime":1621805322176,"results":"68","hashOfConfig":"41"},{"size":1171,"mtime":1620828456116,"results":"69","hashOfConfig":"41"},{"size":525,"mtime":1636298607201,"results":"70","hashOfConfig":"41"},{"size":648,"mtime":1636301553786,"results":"71","hashOfConfig":"41"},{"size":308,"mtime":1626345650099,"results":"72","hashOfConfig":"41"},{"size":3691,"mtime":1636303692488,"results":"73","hashOfConfig":"41"},{"size":3613,"mtime":1637445580580,"results":"74","hashOfConfig":"41"},{"size":886,"mtime":1626347904062,"results":"75","hashOfConfig":"41"},{"size":1064,"mtime":1636295810060,"results":"76","hashOfConfig":"41"},{"size":548,"mtime":1626357933309,"results":"77","hashOfConfig":"41"},{"size":502,"mtime":1636309230131,"results":"78","hashOfConfig":"41"},{"size":10199,"mtime":1637445303589,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"1uewlyt",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"82"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/index.js",[],["168","169"],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/App.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/classes/AllClassSection.js",["170","171"],"import React, { useEffect, useState } from 'react'\n\nimport AddingMoreCard from '../cards/AddingMoreCard';\n\nimport CardList from '../cards/CardList'\nimport AddingCard from '../cards/AddingCard'\n\nimport { dbServices } from '../../services/services';\nimport { fetchAllSections } from '../../AppStore/actions/ResultActions';\n\nfunction AllClassSection({ user }) {\n    const uid = user.uid\n    /**\n     * 1.   useEffect = fetch all class category and keep in useState = ClassSection \n     * 2.   if ClassSection.length === 0 ? display addClassSection component\n     * 3.   if ClassSection.length !== 0 ? display ClassSectionList components\n     * 4.   if any card in ClassSectionList component is clicked? window.location = '/allClass' with props of ClassSectionId\n     *  */\n\n    const [ClassSection, setClassSection] = useState([])\n\n    useEffect(() => {\n        //* 1.   useEffect = fetch all class category\n        fetchAllSections(setClassSection, uid)\n    }, [])\n    return (\n        <div>\n\n\n            <div className='d-flex justify-content-center'>\n                {\n                    ClassSection.length === 0 ?\n                        <div>\n                            <h4 className='text-success text-center mb-3 font-weight-bold'>\n                                <em>\n                                    SORRY YOU HAVE NO SECTION AVAILABLE. <br />PLEASE CLICK THE BUTTON BELOW TO ADD SECTION\n                                </em>\n                            </h4>\n                            <AddingCard addtype='section' />\n                        </div>\n                        :\n                        // ClassSection.length === 0 ?\n                        //     <Loading /> :\n                        ClassSection.length !== 0 &&\n                        <div className='d-flex flex-column flex-wrap'>\n                            <h4 className='justify-self-center text-center text-danger mt-4 font-weight-bold' >AVAILABLE SECTIONS</h4>\n\n                            <div className='d-flex flex-row flex-wrap'>\n                                <CardList ClassSection={ClassSection} />\n                                <AddingMoreCard addtype='section' />\n                            </div>\n                        </div>\n\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default AllClassSection\n","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/NavBar.js",["172"],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/admin/LogIn.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/classes/AddClassSectionForm.js",["173","174","175","176"],"import React, { useState, useEffect, useContext } from 'react';\nimport { Table, Card, Form, Label, Input, Button, FormGroup } from 'reactstrap';\nimport { globalStore } from '../../AppStore/globalStore';\nimport { useHistory } from 'react-router-dom';\nimport { dbServices } from '../../services/services';\nimport { fetchAllSections, saveAllSection } from '../../AppStore/actions/ResultActions';\n\n\nfunction AddclassCategoryForm({ user }) {\n\n    const history = useHistory();\n\n    const [ClassSection, setClassSection] = useState([])\n    const [Section, setSection] = React.useState({ cat_name: '', hod_name: '', })\n\n    useEffect(() => {\n        //fetchAllSection\n        fetchAllSections(setClassSection, ClassSection, user)\n    }, [])\n\n\n    const changeHandler = (e) => {\n        const value = e.target.value;\n        const upperCaseValue = value.toLocaleUpperCase()\n        setSection({\n            ...Section,\n            [e.target.name]: upperCaseValue\n        })\n\n    }\n    const AddSectionHandler = () => {\n        if (Section.cat_name === '' | Section.hod_name === '') {\n            alert(`\"Section Name\" or \"Head of Section\" cannot be empty `)\n        }\n\n        if (ClassSection.length === 0 & !(Section.cat_name === '' | !Section.hod_name === '')) {\n            console.log(Section)\n            setClassSection(ClassSection.concat(Section))\n        }\n        if (ClassSection.length !== 0) {\n            let checkConflictArray1 = ClassSection.filter(section => section.cat_name === Section.cat_name)\n            if (checkConflictArray1.length === 0) {\n                setClassSection(ClassSection.concat(Section))\n            }\n            else {\n                console.log({ checkConflictArray1 })\n                alert(`${Section.cat_name} section already added`)\n            }\n        }\n    }\n\n\n    const DeleteHandler = (e) => {\n        const currentIndex = e.target.id\n\n        let newAllSection = [...ClassSection];\n        newAllSection.splice(currentIndex, 1)\n        setClassSection(newAllSection)\n\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if (ClassSection.length === 0) {\n            alert(`Atleast one section must be must added`)\n        }\n\n        else {\n            //save all sections to DB\n            saveAllSection(history, ClassSection, user)\n\n        }\n\n\n\n\n    }\n\n    return (\n        <div className='d-flex flex-row' >\n\n            <div className='container d-flex justify-content-center align-items-center flex-column '>\n                <h4 className='justify-self-center text-center text-danger mt-4 font-weight-bold' >Register Section(s) Below</h4>\n                <Card className='container shadow-lg p-3 mb-5 d-flex'>\n                    <Form className='d-flex   flex-column '>\n                        <FormGroup className='d-flex flex-row mr-0 justify-content-start'>\n                            <Label for=\"username\" className='font-weight-bold w-25 text-success'>Section Name:</Label>\n                            <Input type=\"text\" name=\"cat_name\" value={Section.cat_name} onChange={changeHandler} placeholder=\"e.g: Nursery, Basic, JSS, SSS\" />\n                        </FormGroup >\n                        <FormGroup className='d-flex flex-row ' >\n                            <Label for=\"username\" className='font-weight-bold w-25 text-success'>Head of Section:</Label>\n                            <Input type=\"text\" name=\"hod_name\" value={Section.hod_name} onChange={changeHandler} placeholder=\"e.g Ustaz Zulqarnain\" />\n                        </FormGroup>\n                    </Form>\n                    <div className='d-flex align-self-center justify-content-lg-center '>\n                        <Button className='text-light font-weight-bold'\n                            color='success'\n                            onClick={AddSectionHandler}>Add Section</Button>\n                    </div>\n                </Card>\n                <Table className='text-success' bordered hover striped>\n                    <thead>\n                        <tr>\n\n                            <th>Section Name</th>\n                            <th>HOD Name</th>\n                            <th>Number of Classes Registered</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            ClassSection.length !== 0 &&\n                            ClassSection.map((section, index) => {\n                                return (\n                                    < tr key={index}>\n                                        <td>{section.cat_name}</td>\n                                        <td>{section.hod_name}</td>\n                                        <td>0</td>\n                                        <td >\n                                            <Button\n                                                id={index}\n                                                onClick={DeleteHandler}\n                                                className='ml-2 text-light bg-success font-weight-bold'>Delete</Button>\n\n                                        </td>\n                                    </tr>\n                                )\n                            })\n\n\n\n\n                        }\n                    </tbody>\n                </Table>\n\n\n\n                <div className='d-flex align-self-center justify-content-lg-center '>\n                    <Button className='text-light font-weight-bold'\n                        color='success'\n                        onClick={onSubmit}>Submit</Button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AddclassCategoryForm\n","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/classes/addClassForm.js",["177"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Table, Card, Form, Label, Input, Button, FormGroup } from 'reactstrap';\nimport { fetchAllClasses, saveAllClasses } from '../../AppStore/actions/ResultActions';\n\n\n\nfunction AddclassClassesForm(props) {\n    const history = useHistory()\n    const sectionName = props.match.params.sectionname.toLocaleLowerCase()\n\n    const uid = props.user.uid\n\n    const [Classes, setClasses] = useState([])\n    const [myClass, setmyClass] = useState({ class_name: '', teacher_name: '', })\n\n    useEffect(() => {\n        //fetchAllClassess\n        fetchAllClasses(sectionName, setClasses, uid)\n    }, [])\n\n    const changeHandler = (e) => {\n        const value = e.target.value;\n        const upperCaseValue = value.toLocaleUpperCase()\n        setmyClass({\n            ...myClass,\n            [e.target.name]: upperCaseValue\n        })\n\n    }\n    const AddmyClassHandler = () => {\n        if (myClass.class_name === '' | myClass.teacher_name === '') {\n            alert(`\"Class Name\" or \"Class Teacher's Name\" cannot be empty `)\n        }\n        else {\n\n            let checkConflictArray = Classes.filter(Class => Class.class_name === myClass.class_name)\n\n            if (checkConflictArray.length === 0) {\n                setClasses(Classes.concat(myClass))\n            }\n            else {\n                console.log({ checkConflictArray })\n                alert(`${myClass.class_name} class already added`)\n            }\n        }\n    }\n    // const EditHandler = (e) => {\n    //     const currentIndex = e.target.id\n\n    //     let tempStateData = [...Classes] //Create a dummy array variable to hold Classes \n    //     setmyClass(tempStateData[currentIndex])\n    //     db.get(sectionName)\n    //         .then(doc => {\n    //             db.put({\n    //                 _id: sectionName,\n    //                 _rev: doc._rev,\n    //                 Classes: Classes,\n    //                 no_of_classes: 0\n    //             }).then(result => {\n\n    //                 // setClasses(tempStateData)\n    //                 //settextChange(!textChange) //this is use to update state(causes change to DOM) so a re-render occur\n    //                 //setClasses(Classes.concat(myClass))\n    //             })\n    //         })\n    // }\n    const DeleteHandler = (e) => {\n        const currentIndex = e.target.id\n        let newClasses = [...Classes];\n        newClasses.splice(currentIndex, 1)\n        setClasses(newClasses)\n\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        if (Classes.length === 0) {\n            alert(`Atleast one myClass must be must added`)\n        }\n        else {\n            //saveClasses to DB\n            saveAllClasses(history, sectionName, Classes, uid)\n        }\n    }\n\n    return (\n        <div className='d-flex flex-row' >\n\n            <div className='container d-flex justify-content-center align-items-center flex-column '>\n\n                <h4 className='justify-self-center text-center text-success mt-4 font-weight-bold' > {sectionName.toLocaleUpperCase()} SECTION</h4>\n\n                <h4 className='justify-self-center text-center text-danger mt-4 font-weight-bold' >Register Class(es)</h4>\n                <Card className='container shadow-lg p-3 mb-5 d-flex'>\n                    <Form className='d-flex   flex-column '>\n                        <FormGroup className='d-flex flex-row mr-0 justify-content-start'>\n                            <Label for=\"username\" className='font-weight-bold w-25 text-success'>Class Name:</Label>\n                            <Input type=\"text\" name=\"class_name\" value={myClass.class_name} onChange={changeHandler} placeholder=\"e.g: Nursery 1, Basic 2, JSS 3, SSS 1 \" />\n                        </FormGroup >\n                        <FormGroup className='d-flex flex-row ' >\n                            <Label for=\"username\" className='font-weight-bold w-25 text-success'>Class Teacher Name:</Label>\n                            <Input type=\"text\" name=\"teacher_name\" value={myClass.teacher_name} onChange={changeHandler} placeholder=\"e.g Ustaz Zulqarnain\" />\n                        </FormGroup>\n                    </Form>\n                    <div className='d-flex align-self-center justify-content-lg-center '>\n                        <Button className='text-light font-weight-bold'\n                            color='success'\n                            onClick={AddmyClassHandler}>Add Class</Button>\n                    </div>\n                </Card>\n\n\n                <Table className='text-success' bordered hover striped>\n                    <thead>\n                        <tr>\n\n                            <th>Class Name</th>\n                            <th>Class Teacher Name</th>\n                            <th>Number of Subjects Registered</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {Classes.map((myClass, index) => {\n                            return (\n                                < tr key={index}>\n                                    <td>{myClass.class_name}</td>\n                                    <td>{myClass.teacher_name}</td>\n                                    <td>0</td>\n                                    <td >\n                                        {/* <Button className='ml-2 text-light bg-success font-weight-bold'\n                                            id={index}\n                                            onClick={EditHandler}\n                                        >\n                                            Edit\n                                        </Button> */}\n                                        <Button className='ml-2 text-light bg-success font-weight-bold'\n                                            id={index}\n                                            onClick={DeleteHandler}\n                                        >\n                                            Delete\n                                        </Button>\n\n\n                                    </td>\n                                </tr>\n                            )\n                        })\n\n                        }\n                    </tbody>\n                </Table>\n                <div className='d-flex align-self-center justify-content-lg-center '>\n                    <Button className='text-light font-weight-bold'\n                        color='success'\n                        onClick={onSubmit}>Submit</Button>\n                </div>\n            </div>\n\n        </div>\n\n\n\n    )\n}\n\nexport default AddclassClassesForm\n","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/admin/ChangePwd.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/students/ManageStudent.js",["178"],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/classes/ClassRoom.js",["179","180"],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/result/PrintResult.js",["181"],"import React, { useRef } from 'react'\n//import Results from './Results';\nimport ResultClassBased from './ResultClassBased'\nimport { useReactToPrint } from 'react-to-print';\nimport { Button } from 'reactstrap';\n\nfunction PrintResult() {\n    const [buttonDisplay, setbtnDisplay] = React.useState({ display: 'flex' })\n\n    const componentRef = useRef();\n\n    const handlePrint = useReactToPrint({\n        content: () => componentRef.current,\n    });\n\n    const backHandler = () => {\n\n        window.location = '/resultsgenerator'\n    }\n\n    return (\n        <div>\n            < div className='mb-5 mt-5 align-self-center justify-content-lg-center' style={buttonDisplay}>\n                <Button className='mr-4 text-light font-weight-bold'\n                    color='success'\n                    onClick={backHandler}>BACK</Button>\n                <Button className='text-light font-weight-bold'\n                    color='success'\n                    onClick={handlePrint}>PRINT</Button>\n            </div >\n            <ResultClassBased ref={componentRef} style={{ buttonDisplay }} />\n        </div>\n\n    );\n};\n\n\n\nexport default PrintResult","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/classes/GotoClass.js",["182","183"],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/subjects/ManageSubject.js",["184"],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/classes/AllClasses.js",["185"],"import React, { useEffect, useState } from 'react'\n// import db from '../../db'\n\n\nimport CardList from '../cards/CardList'\nimport AddingCard from '../cards/AddingCard'\nimport AddingMoreCard from '../cards/AddingMoreCard';\nimport { fetchAllClasses } from '../../AppStore/actions/ResultActions';\n\n\n\nfunction AllClasses(props) {\n    /**\n     * 1.   useEffect = fetch all class category and keep in useState = Classes \n     * 2.   if Classes.length === 0 ? display addClasses component\n     * 3.   if Classes.length !== 0 ? display ClassesList components\n     * 4.   if any card in ClassesList component is clicked? window.location = '/allClass' with props of ClassesId\n     *  */\n\n    const [Classes, setClasses] = useState([])\n    console.log(props)\n    let sectionName = props.match.params.sectionname\n\n    const uid = props.user.uid\n    //* 1.   useEffect = fetch all class category\n    useEffect(() => {\n        //fetch All classes\n        fetchAllClasses(sectionName, setClasses, uid)\n    }, [])\n    return (\n        <div>\n\n            <div className='container d-flex justify-content-center align-items-center flex-column '>\n\n                <h4 className='justify-self-center text-center text-danger mt-4 font-weight-bold' >{sectionName.toLocaleUpperCase()} SECTION</h4>\n                {\n                    Classes.length === 0 ?\n                        <div>\n                            <h4 className='text-success text-center mb-3 font-weight-bold'>\n                                <em>\n                                    SORRY YOU HAVE NO CLASSES AVAILABLE IN THIS SECTION. <br />PLEASE CLICK THE BUTTON BELOW TO ADD CLASS TO THIS SECTION\n                                </em>\n                            </h4>\n                            <AddingCard sectionName={sectionName} addtype='class' />\n                        </div>\n                        :\n                        // Classes.length === 0 ?\n                        //     <Loading />\n                        //     :\n                        Classes.length !== 0 &&\n                        <div className='d-flex flex-row flex-wrap'>\n                            <CardList Classes={Classes} />\n                            <AddingMoreCard sectionName={sectionName} addtype='class' />\n                        </div>\n\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default AllClasses\n","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/result/ResultsGenerator.js",["186"],"import React, { useEffect, useState } from 'react'\nimport { Card, Form, FormGroup, Label, Input, Button } from 'reactstrap';\n\n\n//DATEPICKER AND ITS CSS\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport { dbServices } from '../../services/services';\n\n\nfunction ResultsGenerator() {\n\n    const [ResultGenData, setResultGenData] = useState({\n        section: [],\n        selectedSection: '',\n        class: [],\n        noOfClasses: 0,\n        term: 'FIRST TERM',\n        selectedClass: '',\n        session: '',\n        nextTermBeing: new Date()\n    })\n\n    useEffect(() => {\n        let tempClassValue = []\n        dbServices.getResultGeneratorData(ResultGenData, setResultGenData, tempClassValue)\n    }, [])\n\n    const handleChange = (e) => {\n        const value = e.target.value;\n\n        setResultGenData({\n            ...ResultGenData,\n            [e.target.name]: value\n        })\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        const Data = {\n            term: ResultGenData.term,\n            selectedSection: ResultGenData.selectedSection,\n            selectedClass: ResultGenData.selectedClass,\n            nextTermBeing: ResultGenData.nextTermBeing.toDateString()\n        }\n        if (ResultGenData.session === '') {\n            alert(\"'Session' cannot be empty\")\n        }\n        else {\n            //save resultData\n            console.log(Data)\n            dbServices.saveresultData(Data)\n        }\n    }\n\n\n    return (\n        <div>\n\n            <div className='d-flex justify-content-center align-items-center flex-column'>\n\n                <Card className='container border w-50 shadow-lg p-3 d-flex align-items-center'>\n                    <h4 className='text-danger mb-5 text-center font-weight-bold' >                    RESULT GENERATOR</h4>                <Form >\n                        <FormGroup className='d-flex w-100' >\n                            <Label for=\"Class\" className='text-success font-weight-bold pr-3'>Session:</Label>\n                            <Input type=\"select\" name=\"selectedSection\" value={ResultGenData.selectedSection} onChange={handleChange} >\n                                {ResultGenData.section.length > 0 &&\n                                    ResultGenData.section.map((item, index) =>\n                                        < option key={index} > {item.cat_name}</option>\n                                    )\n                                }\n                            </Input>\n                        </FormGroup>\n\n\n\n                        <FormGroup className='d-flex w-100' >\n                            <Label for=\"Class\" className='text-success font-weight-bold pr-3'>Class:</Label>\n                            <Input type=\"select\" name=\"selectedClass\" value={ResultGenData.selectedClass} onChange={handleChange} >\n                                {\n                                    ResultGenData.class.map((item, index) =>\n                                        < option key={index} > {item.class_name}</option>\n                                    )\n                                }\n                            </Input>\n                        </FormGroup>\n                        <FormGroup className='d-flex w-100'>\n                            <Label for=\"Class\" className='text-success font-weight-bold pr-3'>Term</Label>\n                            <Input type=\"select\" name=\"term\" value={ResultGenData.term} onChange={handleChange} >\n                                <option >FIRST TERM</option>\n                                <option >SECOND TERM</option>\n                                <option >THIRD TERM</option>\n                            </Input>\n                        </FormGroup>\n                        <FormGroup className='d-flex w-100' >\n                            <Label for=\"Session\" className='text-success font-weight-bold pr-3'>Session</Label>\n                            <Input type=\"text\" name=\"session\" value={ResultGenData.session} onChange={handleChange} placeholder=\"e.g 2021/2022\" />\n                        </FormGroup  >\n                        <div className='d-flex w-100 mb-3'>\n                            <Label for=\"Next Term Resumption Date\" className='text-success font-weight-bold pr-3'>Next Term Begin on</Label>\n                            <DatePicker selected={ResultGenData.nextTermBeing} calendarClassName=\"rasta-stripes\" onChange={date => { setResultGenData({ ...ResultGenData, nextTermBeing: date }); }} />\n                        </div>\n                    </Form >\n                    <div className='d-flex justify-content-lg-center '>\n                        {/* using this button to test CONTEXT API */}\n                        <Button className='text-light font-weight-bold pr-3'\n                            color='success'\n                            onClick={onSubmit}>Submit</Button>\n                    </div>\n                </Card >\n            </div>\n        </div >\n    )\n}\n\nexport default ResultsGenerator\n","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/subjects/SubjectTable.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/result/ResultClassBased.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/classes/ScoreSheetTables.js",["187","188","189"],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/cards/AddingCard.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/services/services.js",["190"],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/cards/CardList.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/cards/AddingMoreCard.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/cards/ManageCard.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/db.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/result/Results.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/reusables/Loading.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/cards/Card.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/result/ResultTables.js",["191"],"import React from 'react'\n\n\nexport const Table = {\n    pysochomotorTale: (pysochomotor) => {\n        return (\n            <table id='doubleTable' className='text-success border' >\n                <thead>\n                    <tr>\n                        <th colSpan=\"6\" className='text-center'>1. PSYCHOMOTOR </th>\n                    </tr>\n                    <tr>\n                        <th className='text-center'></th>\n                        <th className='text-center'>5</th>\n                        <th className='text-center'>4</th>\n                        <th className='text-center'>3</th>\n                        <th className='text-center'>2</th>\n                        <th className='text-center'>1</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        pysochomotor.length !== 0 &&\n                        pysochomotor.map((item, index) => {\n                            return (\n                                < tr key={index}>\n                                    <td style={{ width: '250px' }}>{item}</td>\n                                    <td ></td>\n                                    <td ></td>\n                                    <td ></td>\n                                    <td ></td>\n                                    <td ></td>\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table >\n        )\n    },\n    affectiveDomainTable: (pysochomotor) => {\n        return (\n            <table id='doubleTable' className=' text-success border' >\n                < thead >\n                    <tr>\n                        <th colSpan=\"6\" className='text-center'> 2. AFFECTIVE DOMAIN </th>\n                    </tr>\n                    <tr>\n                        <th className='text-center'></th>\n                        <th className='text-center'>5</th>\n                        <th className='text-center'>4</th>\n                        <th className='text-center'>3</th>\n                        <th className='text-center'>2</th>\n                        <th className='text-center'>1</th>\n                    </tr>\n                </thead >\n                <tbody className='w-100'>\n                    {\n                        pysochomotor.length !== 0 &&\n                        pysochomotor.map((item, index) => {\n                            return (\n                                < tr key={index}>\n                                    <td style={{ width: '250px' }} >{item}</td>\n                                    <td ></td>\n                                    <td ></td>\n                                    <td ></td>\n                                    <td ></td>\n                                    <td ></td>\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table >\n        )\n    },\n    attendanceTable: (attendeance) => {\n        return (\n            <table id='doubleTableminus' className='text-success border ' >\n                <thead>\n                    <tr>\n                        <th colSpan=\"2\" className='text-center'> 3. ATTENDANCE </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        attendeance.length !== 0 &&\n                        attendeance.map((item, index) => {\n                            return (\n                                < tr key={index}>\n                                    <td id='doubleTD'>{item}</td>\n                                    <td id='doubleTD'></td>\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table >\n        )\n    },\n\n    physicalAndHealth: () => {\n        return (\n            <table id='doubleTablePlus' className='text-success border ' >\n                <thead>\n                    <tr>\n                        <th colSpan=\"4\" className='text-center'> 4. PHYSICAL DEVELOPMENT & HEALTH </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    < tr className='text-center'>\n                        <th colSpan=\"2\" id='doubleTD'>HEALTH</th>\n                        <th colSpan=\"2\" id='doubleTD'>WEIGHT</th>\n                    </tr>\n\n                    < tr className='text-center'>\n                        <td id='quarterTD'>Beginning of Term</td>\n                        <td id='quarterTD'>End of Term</td>\n\n                        <td id='quarterTD'>Beginning of Term</td>\n                        <td id='quarterTD'>End of Term</td>\n                    </tr>\n\n                    < tr className='text-right'>\n                        <td id='quarterTD'>m</td>\n                        <td id='quarterTD'>m</td>\n\n                        <td id='quarterTD'>kg</td>\n                        <td id='quarterTD'>kg</td>\n\n                    </tr>\n\n                </tbody>\n            </table >\n        )\n    },\n    keyToRating: (key) => {\n        return (\n            <table id='rating' className=' text-success border' >\n                < thead >\n                    <tr>\n                        <th colSpan=\"2\" className='text-center'> KEY TO RATING </th>\n                    </tr>\n                </thead >\n                <tbody className='w-100'>\n                    {\n                        key.length !== 0 &&\n                        key.map((item, index) => {\n                            return (\n                                < tr key={index}>\n                                    <td >{item}</td>\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table >\n        )\n    },\n\n    keyToGrading: (key) => {\n        return (\n            <table id='grading' className=' text-success border' >\n                < thead >\n                    <tr>\n                        <th colSpan=\"2\" className='text-center'> KEY TO GRADING</th>\n                    </tr>\n                </thead >\n                <tbody className='w-100'>\n                    {\n                        key.length !== 0 &&\n                        key.map((item, index) => {\n                            return (\n                                < tr key={index}>\n                                    <td >{item}</td>\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table >\n        )\n    },\n    performanceTable: (performanceTableLabel, subjects, id, scores, currentData) => {\n        var SumOfFinalPercentage = 0;\n        console.log(subjects.length)\n        return (\n\n            <div style={{ width: '99%' }} >\n                <table id='performanceTABLE' className='text-success text-center w-100 border' >\n                    <thead>\n                        <tr>\n                            <th colSpan={performanceTableLabel.length + 1} className='text-center'> 5. PERFORMANCE IN SUBJECTS (COGNITIVE) </th>\n                        </tr>\n                    </thead>\n\n                    <tbody >\n                        <tr>\n                            <td></td>\n                            {\n                                performanceTableLabel.map((label, labIndex) => {\n                                    return (\n                                        <td key={labIndex}>{label}</td>\n                                    )\n                                })\n                            }\n                        </tr>\n                        {\n                            subjects.length !== 0 &&\n                            subjects.map((subject, subIndex) => {\n                                if (!scores[subject.subjectName][id]) {\n                                    window.location = `/${currentData.selectedClass}/classroom/${subject.subjectName}`\n                                }\n                                else {\n                                    if (!(scores[subject.subjectName][id].hasOwnProperty(\"Test1\")) || !(scores[subject.subjectName][id].hasOwnProperty(\"Test2\")) || !(scores[subject.subjectName][id].hasOwnProperty(\"Exam\"))) {\n                                        alert(\"ERROR OCCURED! Please enter score for all students on every subject score sheet\")\n                                    }\n                                    else {\n                                        let IntparsedExam = parseInt(scores[subject.subjectName][id].Exam, 10) || 0\n                                        let IntparsedTest1 = parseInt(scores[subject.subjectName][id].Test1, 10) || 0\n                                        let IntparsedTest2 = parseInt(scores[subject.subjectName][id].Test2, 10) || 0\n                                        let termTotal = IntparsedTest1 + IntparsedTest2 + IntparsedExam\n                                        let IntparsedBForward = parseInt(scores[subject.subjectName][id].BForward, 10) || 0\n                                        let cumulativeTotal = termTotal + IntparsedBForward\n                                        let finalPercentage = cumulativeTotal / 2\n                                        SumOfFinalPercentage = SumOfFinalPercentage + finalPercentage\n                                        return (\n                                            <tr key={subIndex} >\n                                                <td className='text-left'>{subject.subjectName}</td>\n\n                                                {/* Test 1  */}\n                                                <td>{IntparsedTest1}</td>\n\n                                                {/* Test 2 */}\n                                                <td>{IntparsedTest2}</td>\n\n                                                {/* Exam  */}\n                                                <td>{IntparsedExam}</td>\n\n                                                {/* Term Total  */}\n                                                <td>{termTotal}\n                                                </td>\n\n                                                {/* Total B/Forward  */}\n                                                <td>{IntparsedBForward}\n\n                                                </td>\n                                                {/* Cummulative Total  */}\n                                                <td>{cumulativeTotal}\n                                                </td>\n\n                                                {/* Final %  */}\n                                                <td>{finalPercentage}\n                                                </td>\n\n                                                {/* Grade  */}\n                                                <td>{\n                                                    finalPercentage >= 75 ? (\"A\")\n                                                        :\n                                                        finalPercentage >= 60 & finalPercentage <= 74 ? \"B\"\n                                                            :\n                                                            finalPercentage >= 50 & finalPercentage <= 59 ? \"C\"\n                                                                :\n                                                                \"F\"}\n                                                </td>\n                                                <td></td>\n                                            </tr>\n\n                                        )\n                                    }//end of  else let ....\n\n                                }//End of else if (!(scores[subject.subjectName][id].hasOwnProperty(\"Test1\"))) .....\n                            })\n                        }\n\n\n\n\n\n                    </tbody>\n                </table >\n                <div className='d-flex justify-content-end w-100'>\n                    <div className='text-danger font-weight-bold border border-success text-center' style={{ width: '170px' }}>\n                        {/* NOTE: SumOfFinalPercentage/subjects.length(Number of Subject) gives average */}\n                        AVERAGE: {(SumOfFinalPercentage / subjects.length).toPrecision(4)}%\n                        </div>\n                </div>\n\n\n\n            </div >\n\n\n        )\n    }\n}\n\n    // < div className = 'mt-4 w-100 d-flex flex-row justify-content-between' >\n    //     {/* <Label className='font-weight-bold w-25 text-success'>No. of Distinction: {Distinction}</Label> */ }\n    //     < Label className = 'font-weight-bold w-25 text-success' > No.of Credits: {}</Label>\n    //                 <Label className='font-weight-bold w-25 text-success'>No. of Passes:{ }</Label>\n    //                 <Label className='font-weight-bold w-25 text-success'>No. of Failed:{ }</Label>\n    //             </div >","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/result/ResultData.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/AppStore/globalStore.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/AppStore/rootReducer.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/AppStore/types.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/admin/SignUp.js",["192","193","194","195","196","197"],"import React, { useContext, useEffect, useState } from 'react';\nimport { Card, Form, FormGroup, Label, Input, Button } from 'reactstrap';\nimport { globalStore } from '../../AppStore/globalStore';\nimport { dbServices } from '../../services/services';\nimport { singUp } from '../../AppStore/actions/UserActions'\nimport { Link, useHistory } from 'react-router-dom'\n\nfunction SignUp() {\n    const { state, dispatch } = useContext(globalStore)\n\n    const history = useHistory()\n    const [profile, setProfile] = React.useState({\n        username: '',\n        fullName: '',\n        email: '',\n        password: '',\n        section: '',\n        password: '',\n        confirmPassword: ''\n    })\n    const [Error, setError] = useState()\n    const [Loading, setLoading] = useState()\n\n\n\n    const handleChange = (e) => {\n        const value = e.target.value;\n        setProfile({\n            ...profile,\n            [e.target.name]: value\n        })\n\n\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        if (profile.username === '' || profile.email === '' || profile.password === '' || profile.confirmPassword === '') {\n            alert('username or password cannot be empty')\n        }\n\n        if (profile.password !== profile.confirmPassword) {\n            alert('Password does not match')\n        }\n\n\n        else {\n            //authenticate Admin\n            // dbServices.authenticateAdmin(profile)\n\n\n            //Register User\n            singUp(history, dispatch, profile.username, profile.email, profile.password, profile.section, setError, setLoading)\n        }\n    }\n    return (\n        <div className='d-flex justify-content-center align-items-center flex-column'>\n            <div style={{ marginTop: '-100px' }}></div>\n            <Card className='container w-25 shadow-lg pt-3 d-flex flex-column align-items-center'>\n                <h4 className='text-success font-weight-bold'>Register</h4>\n                <Form >\n                    <FormGroup >\n                        <Label for=\"username\" className='text-success font-weight-bold'>Username</Label>\n                        <Input type=\"text\" name=\"username\" value={profile.username} onChange={handleChange} placeholder=\"username\" />\n                    </FormGroup>\n                    <FormGroup >\n                        <Label for=\"username\" className='text-success font-weight-bold'>Email Address</Label>\n                        <Input type=\"email\" name=\"email\" value={profile.email} onChange={handleChange} placeholder=\"example@gmail.com\" />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"password\" className='text-success font-weight-bold'>Password</Label>\n                        <Input type=\"password\" name=\"password\" value={profile.password} onChange={handleChange} placeholder=\"xxxxxxx\" />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"password\" className='text-success font-weight-bold'>Confirm password</Label>\n                        <Input type=\"password\" name=\"confirmPassword\" value={profile.confirmPassword} onChange={handleChange} placeholder=\"xxxxxxx\" />\n                    </FormGroup>\n                </Form>\n                <div className='d-flex justify-content-lg-center '>\n                    <Button className='text-light font-weight-bold'\n                        color='success'\n                        onClick={onSubmit}>Register</Button>\n                </div>\n\n\n                <h6 className='mt-3 mb-3'>Already have an account?\n                    <Link to='/'>  Login</Link>\n                </h6>\n\n            </Card >\n        </div>\n    )\n}\n\nexport default SignUp\n","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/AppStore/actions/UserActions.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/services/firebase.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/services/firebase/FirebaseConfig.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/LoadScreen.js",[],["198","199"],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/components/common/LoadScreen.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/NEW_AFMUC_HEROKU/client/src/AppStore/actions/ResultActions.js",["200","201"],{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","severity":1,"message":"207","line":8,"column":10,"nodeType":"208","messageId":"209","endLine":8,"endColumn":20},{"ruleId":"210","severity":1,"message":"211","line":25,"column":8,"nodeType":"212","endLine":25,"endColumn":10,"suggestions":"213"},{"ruleId":"210","severity":1,"message":"214","line":21,"column":8,"nodeType":"212","endLine":21,"endColumn":10,"suggestions":"215"},{"ruleId":"206","severity":1,"message":"216","line":1,"column":38,"nodeType":"208","messageId":"209","endLine":1,"endColumn":48},{"ruleId":"206","severity":1,"message":"217","line":3,"column":10,"nodeType":"208","messageId":"209","endLine":3,"endColumn":21},{"ruleId":"206","severity":1,"message":"207","line":5,"column":10,"nodeType":"208","messageId":"209","endLine":5,"endColumn":20},{"ruleId":"210","severity":1,"message":"218","line":19,"column":8,"nodeType":"212","endLine":19,"endColumn":10,"suggestions":"219"},{"ruleId":"210","severity":1,"message":"220","line":20,"column":8,"nodeType":"212","endLine":20,"endColumn":10,"suggestions":"221"},{"ruleId":"210","severity":1,"message":"222","line":23,"column":8,"nodeType":"212","endLine":23,"endColumn":10,"suggestions":"223"},{"ruleId":"206","severity":1,"message":"224","line":6,"column":10,"nodeType":"208","messageId":"209","endLine":6,"endColumn":20},{"ruleId":"210","severity":1,"message":"225","line":28,"column":8,"nodeType":"212","endLine":28,"endColumn":10,"suggestions":"226"},{"ruleId":"206","severity":1,"message":"227","line":8,"column":27,"nodeType":"208","messageId":"209","endLine":8,"endColumn":40},{"ruleId":"206","severity":1,"message":"207","line":7,"column":10,"nodeType":"208","messageId":"209","endLine":7,"endColumn":20},{"ruleId":"210","severity":1,"message":"228","line":25,"column":8,"nodeType":"212","endLine":25,"endColumn":10,"suggestions":"229"},{"ruleId":"210","severity":1,"message":"230","line":20,"column":8,"nodeType":"212","endLine":20,"endColumn":10,"suggestions":"231"},{"ruleId":"210","severity":1,"message":"220","line":29,"column":8,"nodeType":"212","endLine":29,"endColumn":10,"suggestions":"232"},{"ruleId":"210","severity":1,"message":"233","line":28,"column":8,"nodeType":"212","endLine":28,"endColumn":10,"suggestions":"234"},{"ruleId":"206","severity":1,"message":"207","line":4,"column":10,"nodeType":"208","messageId":"209","endLine":4,"endColumn":20},{"ruleId":"210","severity":1,"message":"222","line":16,"column":8,"nodeType":"212","endLine":16,"endColumn":24,"suggestions":"235"},{"ruleId":"236","severity":1,"message":"237","line":47,"column":74,"nodeType":"238","messageId":"239","endLine":47,"endColumn":75},{"ruleId":"240","severity":1,"message":"241","line":229,"column":25,"nodeType":"242","messageId":"243","endLine":229,"endColumn":26,"fix":"244"},{"ruleId":"245","severity":1,"message":"246","line":210,"column":62,"nodeType":"247","messageId":"248","endLine":210,"endColumn":64},{"ruleId":"206","severity":1,"message":"249","line":1,"column":29,"nodeType":"208","messageId":"209","endLine":1,"endColumn":38},{"ruleId":"206","severity":1,"message":"207","line":4,"column":10,"nodeType":"208","messageId":"209","endLine":4,"endColumn":20},{"ruleId":"206","severity":1,"message":"250","line":9,"column":13,"nodeType":"208","messageId":"209","endLine":9,"endColumn":18},{"ruleId":"251","severity":1,"message":"252","line":18,"column":9,"nodeType":"253","messageId":"254","endLine":18,"endColumn":17},{"ruleId":"206","severity":1,"message":"255","line":21,"column":12,"nodeType":"208","messageId":"209","endLine":21,"endColumn":17},{"ruleId":"206","severity":1,"message":"256","line":22,"column":12,"nodeType":"208","messageId":"209","endLine":22,"endColumn":19},{"ruleId":"202","replacedBy":"257"},{"ruleId":"204","replacedBy":"258"},{"ruleId":"206","severity":1,"message":"259","line":7,"column":7,"nodeType":"208","messageId":"209","endLine":7,"endColumn":20},{"ruleId":"206","severity":1,"message":"260","line":9,"column":7,"nodeType":"208","messageId":"209","endLine":9,"endColumn":19},"no-native-reassign",["261"],"no-negated-in-lhs",["262"],"no-unused-vars","'dbServices' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'uid'. Either include it or remove the dependency array.","ArrayExpression",["263"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["264"],"'useContext' is defined but never used.","'globalStore' is defined but never used.","React Hook useEffect has missing dependencies: 'ClassSection' and 'user'. Either include them or remove the dependency array.",["265"],"React Hook useEffect has missing dependencies: 'sectionName' and 'uid'. Either include them or remove the dependency array.",["266"],"React Hook useEffect has missing dependencies: 'ClassName' and 'uid'. Either include them or remove the dependency array.",["267"],"'useHistory' is defined but never used.","React Hook useEffect has missing dependencies: 'ClassName', 'allSubjects', 'subjectName', and 'uid'. Either include them or remove the dependency array.",["268"],"'setbtnDisplay' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'ResultGenData' and 'uid'. Either include them or remove the dependency array.",["269"],"React Hook useEffect has missing dependencies: 'className' and 'uid'. Either include them or remove the dependency array.",["270"],["271"],"React Hook useEffect has a missing dependency: 'ResultGenData'. Either include it or remove the dependency array.",["272"],["273"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"274","text":"275"},"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useEffect' is defined but never used.","'state' is assigned a value but never used.","no-dupe-keys","Duplicate key 'password'.","ObjectExpression","unexpected","'Error' is assigned a value but never used.","'Loading' is assigned a value but never used.",["261"],["262"],"'ResultDataRef' is assigned a value but never used.","'orderDataRef' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"282","fix":"292"},{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},[9254,9268],"\n            .","Update the dependencies array to be: [uid]",{"range":"297","text":"298"},"Update the dependencies array to be: [history]",{"range":"299","text":"300"},"Update the dependencies array to be: [ClassSection, user]",{"range":"301","text":"302"},"Update the dependencies array to be: [sectionName, uid]",{"range":"303","text":"304"},"Update the dependencies array to be: [ClassName, uid]",{"range":"305","text":"306"},"Update the dependencies array to be: [ClassName, allSubjects, subjectName, uid]",{"range":"307","text":"308"},"Update the dependencies array to be: [ResultGenData, uid]",{"range":"309","text":"310"},"Update the dependencies array to be: [className, uid]",{"range":"311","text":"312"},{"range":"313","text":"304"},"Update the dependencies array to be: [ResultGenData]",{"range":"314","text":"315"},"Update the dependencies array to be: [ClassName, currentSubject, uid]",{"range":"316","text":"317"},[959,961],"[uid]",[801,803],"[history]",[730,732],"[ClassSection, user]",[690,692],"[sectionName, uid]",[927,929],"[ClassName, uid]",[1059,1061],"[ClassName, allSubjects, subjectName, uid]",[649,651],"[ResultGenData, uid]",[737,739],"[className, uid]",[994,996],[756,758],"[ResultGenData]",[598,614],"[ClassName, currentSubject, uid]"]