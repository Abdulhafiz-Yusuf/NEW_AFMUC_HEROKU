[{"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/index.js":"1","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/App.js":"2","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/LandingPage.js":"3","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/MedCenterPage.js":"4","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/BloodDetailPage.js":"5","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/Footer.js":"6","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/SearchDonor.js":"7","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/NavBar.js":"8","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/Dashboard/UserDashBoard.js":"9","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/components/Loading.js":"10","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/Dashboard/BookingPage.js":"11","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/Dashboard/Profile.js":"12","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/Dashboard/RegCompletion.js":"13","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/Dashboard/DashBoardMenu.js":"14","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/Dashboard/PaymentPage.js":"15","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/components/CardList.js":"16","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/components/Auth0LoginButton.js":"17","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/components/SearchBar.js":"18","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/components/Auth0LogoutButton.js":"19","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/appStore/_actions/BloodBankAction.js":"20","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/appStore/_actions/userAction.js":"21","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/components/Card.js":"22","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/appStore/_actions/types.js":"23","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/data.js":"24","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/appStore/Store.js":"25","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/appStore/_reducers/index.js":"26","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/appStore/_reducers/BloodBankReducer.js":"27","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/appStore/_reducers/userReducer.js":"28","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/index.js":"29","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/App.js":"30","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/data.js":"31","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/admin/LogIn.js":"32","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/admin/ChangePwd.js":"33","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/classes/AllClassSection.js":"34","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/classes/AllClasses.js":"35","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/classes/ClassRoom.js":"36","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/classes/AddClassSectionForm.js":"37","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/classes/addClassForm.js":"38","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/classes/GotoClass.js":"39","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/students/ManageStudent.js":"40","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/subjects/ManageSubject.js":"41","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/result/ResultsGenerator.js":"42","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/result/Results.js":"43","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/classes/ScoreSheetTables.js":"44","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/subjects/SubjectTable.js":"45","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/Header.js":"46","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/cards/CardList.js":"47","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/services/services.js":"48","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/cards/AddingMoreCard.js":"49","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/cards/AddingCard.js":"50","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/cards/ManageCard.js":"51","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/SideBar/SideBar.js":"52","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/reusables/Loading.js":"53","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/result/BackPrintBtn.js":"54","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/result/ResultData.js":"55","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/result/ResultTables.js":"56","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/cards/Card.js":"57","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/db.js":"58"},{"size":692,"mtime":1615472815476,"results":"59","hashOfConfig":"60"},{"size":1505,"mtime":1615472763091,"results":"61","hashOfConfig":"60"},{"size":2848,"mtime":1615540155025,"results":"62","hashOfConfig":"60"},{"size":257,"mtime":1615472745334,"results":"63","hashOfConfig":"60"},{"size":4506,"mtime":1615472744878,"results":"64","hashOfConfig":"60"},{"size":393,"mtime":1615472745310,"results":"65","hashOfConfig":"60"},{"size":3509,"mtime":1615472745382,"results":"66","hashOfConfig":"60"},{"size":2673,"mtime":1615472745358,"results":"67","hashOfConfig":"60"},{"size":3940,"mtime":1615472745250,"results":"68","hashOfConfig":"60"},{"size":361,"mtime":1615472744694,"results":"69","hashOfConfig":"60"},{"size":2449,"mtime":1615472744942,"results":"70","hashOfConfig":"60"},{"size":2463,"mtime":1615472745190,"results":"71","hashOfConfig":"60"},{"size":5008,"mtime":1615472745202,"results":"72","hashOfConfig":"60"},{"size":1310,"mtime":1615472745102,"results":"73","hashOfConfig":"60"},{"size":307,"mtime":1615472745166,"results":"74","hashOfConfig":"60"},{"size":285,"mtime":1615472744670,"results":"75","hashOfConfig":"60"},{"size":668,"mtime":1615473213424,"results":"76","hashOfConfig":"60"},{"size":4012,"mtime":1615472744730,"results":"77","hashOfConfig":"60"},{"size":499,"mtime":1615472744574,"results":"78","hashOfConfig":"60"},{"size":2388,"mtime":1615477812568,"results":"79","hashOfConfig":"60"},{"size":3156,"mtime":1615472744014,"results":"80","hashOfConfig":"60"},{"size":974,"mtime":1615472744598,"results":"81","hashOfConfig":"60"},{"size":748,"mtime":1615472743994,"results":"82","hashOfConfig":"60"},{"size":16893,"mtime":1615472806028,"results":"83","hashOfConfig":"60"},{"size":437,"mtime":1615472743898,"results":"84","hashOfConfig":"60"},{"size":238,"mtime":1615472744066,"results":"85","hashOfConfig":"60"},{"size":746,"mtime":1615472744054,"results":"86","hashOfConfig":"60"},{"size":1141,"mtime":1615472744086,"results":"87","hashOfConfig":"60"},{"size":821,"mtime":1620828153614,"results":"88","hashOfConfig":"89"},{"size":2240,"mtime":1620828921916,"results":"90","hashOfConfig":"89"},{"size":16893,"mtime":1620814281939,"results":"91","hashOfConfig":"89"},{"size":2520,"mtime":1620828456040,"results":"92","hashOfConfig":"89"},{"size":3224,"mtime":1620828456040,"results":"93","hashOfConfig":"89"},{"size":2396,"mtime":1620828456052,"results":"94","hashOfConfig":"89"},{"size":2477,"mtime":1620828456052,"results":"95","hashOfConfig":"89"},{"size":4032,"mtime":1620828456056,"results":"96","hashOfConfig":"89"},{"size":5686,"mtime":1620828456052,"results":"97","hashOfConfig":"89"},{"size":6817,"mtime":1620828456056,"results":"98","hashOfConfig":"89"},{"size":2694,"mtime":1620828456056,"results":"99","hashOfConfig":"89"},{"size":6559,"mtime":1620828456196,"results":"100","hashOfConfig":"89"},{"size":3660,"mtime":1620828456204,"results":"101","hashOfConfig":"89"},{"size":4212,"mtime":1620828456120,"results":"102","hashOfConfig":"89"},{"size":5746,"mtime":1620828456120,"results":"103","hashOfConfig":"89"},{"size":5425,"mtime":1620828456056,"results":"104","hashOfConfig":"89"},{"size":2275,"mtime":1620828456208,"results":"105","hashOfConfig":"89"},{"size":569,"mtime":1620828455912,"results":"106","hashOfConfig":"89"},{"size":1038,"mtime":1620828456048,"results":"107","hashOfConfig":"89"},{"size":16533,"mtime":1620828456376,"results":"108","hashOfConfig":"89"},{"size":2167,"mtime":1620828456048,"results":"109","hashOfConfig":"89"},{"size":3167,"mtime":1620828456044,"results":"110","hashOfConfig":"89"},{"size":2047,"mtime":1620828456052,"results":"111","hashOfConfig":"89"},{"size":3903,"mtime":1620828455996,"results":"112","hashOfConfig":"89"},{"size":200,"mtime":1620828456192,"results":"113","hashOfConfig":"89"},{"size":1271,"mtime":1620828907172,"results":"114","hashOfConfig":"89"},{"size":1171,"mtime":1620828456116,"results":"115","hashOfConfig":"89"},{"size":13004,"mtime":1620828886368,"results":"116","hashOfConfig":"89"},{"size":2185,"mtime":1620828456048,"results":"117","hashOfConfig":"89"},{"size":324,"mtime":1620828499098,"results":"118","hashOfConfig":"89"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},"17yvwg",{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"121"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"121"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"121"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pgtk6u",{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"187"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"187"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"187"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"187"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"187"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"187"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"187"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"187"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"187"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"187"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/index.js",[],["251","252"],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/App.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/LandingPage.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/MedCenterPage.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/BloodDetailPage.js",["253"],"import React, { useEffect } from 'react';\nimport { Table, Card, Button } from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addBooking, fetchBloodbyId } from '../appStore/_actions/BloodBankAction';\nimport { viewPageAction } from '../appStore/_actions/userAction';\n//import { useAuth0 } from \"@auth0/auth0-react\";\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom'\nimport Loading from '../components/Loading';\nexport default function BloodDetailPage(props) {\n    /*\nTASK\n    ====\n    1.  Use useEffect to fetch bcDetail with id equal to id in props.match.params.bgId \n    2.  Use bcDetail.bg to fetch bcDetailPage Data where bg === req.body.bcDetail.bg\n    3.  Display bcDetailPage Data in tables\n    */\n\n    let history = useHistory();\n    const dispatch = useDispatch()\n    const bgId = props.match.params.bgId;\n    // const stateUser = useSelector(state => state.UserReducer.user);\n    // const booking = useSelector(state => state.BloodBankReducer.booking);\n\n    //const { user, loginWithRedirect } = useAuth0;\n    const [user, setUser] = useState({\n        users_id: 1,\n        email: 'talk2abdulhafiz@gmail.com'\n    })\n    useEffect(() => {\n        dispatch(fetchBloodbyId(bgId))\n    }, [dispatch, bgId])\n\n    const bcDetail = useSelector(state => state.BloodBankReducer.bcDetail);\n    const bgDetail = useSelector(state => state.BloodBankReducer.bgDetail);\n\n\n    const bookingHandler = (e) => {\n        const id = e.target.id;\n        console.log({ bcDetail: bcDetail[id], user: user, bgDetail: bgDetail[id] })\n        if (user) {\n            dispatch(addBooking(user.users_id, bcDetail[id], bgDetail[id]))\n                .then(response => {\n                    if (response.payload) {\n                        dispatch(viewPageAction('booking'))\n                        history.push('/testPage')\n                        alert('Booked Successfully')\n\n                    }\n                }\n                )\n        }\n        else {\n            //      loginWithRedirect()\n        }\n    }\n    return (\n        <div className=' container mt-5 mb-5' >\n            <div style={{ height: '100px' }}></div>\n\n            {bgDetail.length === 0 & bcDetail.length === 0 ?\n                <Loading />\n                :\n                bgDetail.length > 0 & bcDetail.length === 0 ?\n                    <h2 className='text-danger text-center mb-3 font-weight-bold'>\n                        Sorry!! No  Available {bgDetail[0].bg}<sup>{bgDetail[0].rhd}</sup> Blood Group....</h2>\n                    :\n                    < Card className='text-danger d-flex justify-content-center align-items-center' >\n                        <h2 className='text-danger text-center mb-3 font-weight-bold'> </h2>\n\n                        <h1 className='text-center font-weight-bolder text-danger' >Available {bgDetail[0].bg}<sup>{bgDetail[0].rhd}</sup> Blood Group</h1>\n\n                        <Table className='text-danger' bordered hover striped>\n                            <thead>\n                                <tr>\n\n                                    <th>Center Name</th>\n                                    <th>Location</th>\n                                    <th>Qantity</th>\n                                    <th>Payment Status</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {bcDetail.map((bg, index) => {\n                                    return (\n                                        < tr key={index}>\n                                            <td>{bg.centername}</td>\n                                            <td>{bg.loclga} L.G.A,<br />{bg.locstate} State</td>\n                                            <td>{bg.qty}</td>\n                                            <td >\n                                                <Button\n                                                    id={index}\n                                                    onClick={bookingHandler}\n                                                    className='ml-2 text-light bg-danger font-weight-bold'>Book Now</Button>\n\n                                            </td>\n                                        </tr>\n                                    )\n                                })\n\n                                }\n                            </tbody>\n                        </Table>\n                    </Card >\n            }\n        </div >\n    )\n}\n","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/Footer.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/SearchDonor.js",["254","255"],"import React, { useState } from 'react';\nimport { Table, Card, } from 'reactstrap';\nimport { useDispatch, useSelector } from \"react-redux\";\n//import { searchDonor, } from '../appStore/_actions/userAction';\nimport Loading from '../components/Loading';\nimport SearchBar from '../components/SearchBar';\n\n\n\n\n\nfunction SearchDonor() {\n\n\n    const bcDetail = useSelector(state => state.BloodBankReducer.bcDetail);\n\n    const bgDetail = useSelector(state => state.BloodBankReducer.bgDetail);\n\n    // const dispatch = useDispatch()\n\n    const searchHandler = (value, category) => {\n        console.log(value)\n\n        // const dataToSubmit = {\n        //     user_loc_state: searcText.loc_state,\n        //     loc_lga: searcText.loc_lga,\n        // }\n        // dispatch(completeRegistration(dataToSubmit))\n        // console.log(dataToSubmit)\n        // dispatch(searchDonor(dataToSubmit))\n        // .then(response => {\n        //     if (response.payload.success)\n        //         alert('Congratulations! You have successfully registered with 9jaBloodbank')\n        // })\n    }\n\n\n    return (\n        <div className=' container mt-5 mb-5'>\n            <div style={{ height: '100px' }}></div>\n\n\n            <SearchBar bGsearchHandler={filter => searchHandler(filter, 'bloodgroup')} locSearchHandler={filter => searchHandler(filter, 'location')} />\n\n\n            <div style={{ height: '50px' }}></div>\n            {\n                !bgDetail.length ?\n                    <Loading />\n                    :\n                    bgDetail &&\n                    <Card className='text-danger d-flex justify-content-center align-items-center' >\n                        <h2 className='text-danger text-center mb-3 font-weight-bold'> </h2>\n\n                        {/* <h1 className='text-center font-weight-bolder text-danger' >Available {bgDetail[0].bg}<sup>{bgDetail[0].rhd}</sup> Blood Group</h1> */}\n\n                        <Table className='text-danger' bordered hover striped>\n                            <thead>\n                                <tr className='text-center'>\n                                    <th >Donor Name</th>\n                                    <th>Location</th>\n                                    <th>Phone</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {bcDetail.map((bg, index) => {\n                                    return (\n                                        < tr key={index} className='text-center'>\n                                            <td>{bg.centername}</td>\n                                            <td>{bg.loclga} L.G.A,<br />{bg.locstate} State</td>\n                                            <td>{bg.qty}</td>\n                                            {/* <td >\n                                                <Button\n                                                    id={index}\n                                                    onClick={bookingHandler}\n                                                    className='ml-2 text-light bg-danger font-weight-bold'>Book Now</Button>\n\n                                            </td> */}\n                                        </tr>\n                                    )\n                                })\n\n                                }\n                            </tbody>\n                        </Table>\n                    </Card >\n            }\n        </div >\n    )\n}\n\nexport default SearchDonor\n","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/NavBar.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/Dashboard/UserDashBoard.js",["256"],"// src/views/profile.js\nimport React, { useEffect, useState } from \"react\";\n// import { useAuth0 } from \"@auth0/auth0-react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { checkifUserExist } from '../../appStore/_actions/userAction'\nimport RegCompletion from \"./RegCompletion\";\nimport Profile from \"./Profile\";\nimport BookingPage from \"./BookingPage\";\nimport PaymentPage from \"./PaymentPage\";\nimport DashBoardMenu from \"./DashBoardMenu\";\nimport Loading from '../../components/Loading.js'\nimport { readBooking } from \"../../appStore/_actions/BloodBankAction\";\n\n\n/*\n=========================\n  USERDASHBOARD PAGE\n=========================\n              Tasks\n             ========\n             1. After successful logIn/SignUp from Auth0 or Firebase this page is called\n             2. Use User Identity Info from Auth0 or Firebase to check if user already already exist in DB.\n                if User Exist in DB:\n                {\n                    Fetch Full User info from DB and DisplayUserProfile User Profile Page.\n                    HINTS:\n                    1.  use dispatch(checkifUserExist(user)) to check if user Exist in DB\n                        &&  if(Exist):\n                            Fectch full User info from DB\n                    2.  Else use 'UserExist' value in redux to displayUserProfile Registration Completion page\n                }\n                else:\n                    DisplayUserProfile Registration Completion Page to collect full user profile.\n                      */\nexport default function UserDashBoard() {\n\n    const stateViewPage = useSelector(state => state.UserReducer.ViewPage);\n    const stateUser = useSelector(state => state.UserReducer.user);\n    const stateUserExist = useSelector(state => state.UserReducer.UserExist);\n\n    const [user, setUser] = useState({ users_Id: 1, email: 'talk2abdulhafiz@gmail.com', })\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (user) {\n            dispatch(checkifUserExist(user))\n                .then(response => {\n                    if (response.payload.userExist) {\n                        dispatch(readBooking(user))\n                            .then(booking => console.log(response.payload))\n                    }\n\n                })\n        }\n    }, [dispatch, user])\n\n\n    const displayUserProfile = () => {\n        return (< div >\n            <h2 className='text-danger text-center mb-3 font-weight-bold'> <span className='text-uppercase' >\n                {stateUser[0].username}</span> Welcome to 9jaBloodBank\n                            </h2>\n\n            <div className='d-flex border border-danger'>\n                <DashBoardMenu user={stateUser[0]} />\n                <div className='d-flex justify-content-center border border-danger flex-grow-1'>\n\n\n                    {/* <DashBoardView user_id={stateUser[0].users_id} user={stateUser[0]} bg={stateUser[0]} /> */}\n                    {stateViewPage === 'booking' ?\n                        // user & userExist\n                        <BookingPage user_id={stateUser[0].users_id} />\n                        :\n                        stateViewPage === 'payment'\n                            ?\n                            <PaymentPage user={stateUser[0]} />\n                            :\n                            <Profile user={stateUser[0]} bg={stateUser[0]} />\n                    }\n                </div >\n            </div>\n        </div >\n        )\n    }\n\n\n\n\n    return (\n        <div className='mt-5 container'>\n            <div style={{ height: '100px' }}></div>\n            {\n                !stateUserExist & stateUser ?\n                    < RegCompletion user={stateUser[0]} />\n                    :\n                    !stateUser ?\n\n                        <Loading />\n                        :\n                        stateUser.length > 0 &&\n                        displayUserProfile()\n\n\n            }\n\n        </div>\n    )\n}\n\n\n","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/components/Loading.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/Dashboard/BookingPage.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/Dashboard/Profile.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/Dashboard/RegCompletion.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/Dashboard/DashBoardMenu.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/Dashboard/PaymentPage.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/components/CardList.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/components/Auth0LoginButton.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/components/SearchBar.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/components/Auth0LogoutButton.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/appStore/_actions/BloodBankAction.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/appStore/_actions/userAction.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/components/Card.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/appStore/_actions/types.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/data.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/appStore/Store.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/appStore/_reducers/index.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/appStore/_reducers/BloodBankReducer.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/appStore/_reducers/userReducer.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/index.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/App.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/data.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/admin/LogIn.js",[],["257","258"],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/admin/ChangePwd.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/classes/AllClassSection.js",["259","260"],"import React, { useEffect, useState } from 'react'\n\nimport AddingMoreCard from '../cards/AddingMoreCard';\nimport Loading from '../reusables/Loading'\nimport CardList from '../cards/CardList'\nimport AddingCard from '../cards/AddingCard'\nimport SideBar from '../SideBar/SideBar';\nimport { dbServices } from '../../services/services';\n\nfunction AllClassSection() {\n    /**\n     * 1.   useEffect = fetch all class category and keep in useState = ClassSection \n     * 2.   if ClassSection.length === 0 ? display addClassSection component\n     * 3.   if ClassSection.length !== 0 ? display ClassSectionList components\n     * 4.   if any card in ClassSectionList component is clicked? window.location = '/allClass' with props of ClassSectionId\n     *  */\n\n    const [ClassSection, setClassSection] = useState([])\n\n    useEffect(() => {\n        //* 1.   useEffect = fetch all class category\n        dbServices.fetchAllSections(setClassSection, ClassSection)\n\n    }, [])\n    return (\n        <div>\n            <SideBar />\n            <div style={{ height: '100px' }}></div>\n            <div className='d-flex justify-content-center'>\n                {\n                    ClassSection.length === 0 ?\n                        <div>\n                            <h4 className='text-success text-center mb-3 font-weight-bold'>\n                                <em>\n                                    SORRY YOU HAVE NO SECTION AVAILABLE. <br />PLEASE CLICK THE BUTTON BELOW TO ADD SECTION\n                                </em>\n                            </h4>\n                            <AddingCard addtype='section' />\n                        </div>\n                        :\n                        // ClassSection.length === 0 ?\n                        //     <Loading /> :\n                        ClassSection.length !== 0 &&\n                        <div className='d-flex flex-column flex-wrap'>\n                            <h4 className='justify-self-center text-center text-danger mt-4 font-weight-bold' >AVAILABLE SECTIONS</h4>\n\n                            <div className='d-flex flex-row flex-wrap'>\n                                <CardList ClassSection={ClassSection} />\n                                <AddingMoreCard addtype='section' />\n                            </div>\n                        </div>\n\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default AllClassSection\n","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/classes/AllClasses.js",["261","262"],"import React, { useEffect, useState } from 'react'\n// import db from '../../db'\n\nimport Loading from '../reusables/Loading'\nimport CardList from '../cards/CardList'\nimport AddingCard from '../cards/AddingCard'\nimport AddingMoreCard from '../cards/AddingMoreCard';\nimport SideBar from '../SideBar/SideBar'\nimport Header from '../Header'\nimport { dbServices } from '../../services/services'\n\n\nfunction AllClasses(props) {\n    /**\n     * 1.   useEffect = fetch all class category and keep in useState = Classes \n     * 2.   if Classes.length === 0 ? display addClasses component\n     * 3.   if Classes.length !== 0 ? display ClassesList components\n     * 4.   if any card in ClassesList component is clicked? window.location = '/allClass' with props of ClassesId\n     *  */\n\n    const [Classes, setClasses] = useState([])\n    let sectionName = props.match.params.sectionname\n\n\n    //* 1.   useEffect = fetch all class category\n    useEffect(() => {\n        //fetch All classes\n        dbServices.fetchAllClasses(sectionName, setClasses, Classes)\n    }, [])\n    return (\n        <div>\n            <SideBar />\n            <div className='container d-flex justify-content-center align-items-center flex-column '>\n                <Header />\n                <h4 className='justify-self-center text-center text-danger mt-4 font-weight-bold' >{sectionName.toLocaleUpperCase()} SECTION</h4>\n                {\n                    Classes.length === 0 ?\n                        <div>\n                            <h4 className='text-success text-center mb-3 font-weight-bold'>\n                                <em>\n                                    SORRY YOU HAVE NO CLASSES AVAILABLE IN THIS SECTION. <br />PLEASE CLICK THE BUTTON BELOW TO ADD CLASS TO THIS SECTION\n                                </em>\n                            </h4>\n                            <AddingCard sectionName={sectionName} addtype='class' />\n                        </div>\n                        :\n                        // Classes.length === 0 ?\n                        //     <Loading />\n                        //     :\n                        Classes.length !== 0 &&\n                        <div className='d-flex flex-row flex-wrap'>\n                            <CardList Classes={Classes} />\n                            <AddingMoreCard sectionName={sectionName} addtype='class' />\n                        </div>\n\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default AllClasses\n","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/classes/ClassRoom.js",["263"],"import React, { useState, useEffect } from 'react'\nimport ManageCard from '../cards/ManageCard'\nimport { Label, Input } from 'reactstrap';\nimport SideBar from '../SideBar/SideBar';\nimport Header from '../Header';\nimport ScoreSheetTable from './ScoreSheetTables';\nimport { dbServices } from '../../services/services';\n\nfunction ClassRoom(props) {\n    const subjectName = props.match.params.subjectName\n\n    let ClassName = props.match.params.myClassName.toLocaleLowerCase()\n    const [students, setstudents] = useState([])\n    const [allSubjects, setAllSubject] = useState({ subjects: [], })\n\n    const [scoreDisplayData, setScore] = useState({})\n\n    useEffect(() => {\n\n        //fetch All subjects and scores for subject\n        dbServices.fetchStudentsAndSubjectsAnsScores(ClassName, setstudents, setAllSubject, setScore, allSubjects)\n\n        if (subjectName) {\n            alert('ERROR OCCURED!\\n \\nPlease ensure to enter ' + subjectName + ' score for each student')\n        }\n    }, [])\n\n    const subjectChangeHandler = (e) => {\n        const value = e.target.value;\n        const upperCaseValue = value.toLocaleUpperCase()\n        setAllSubject({\n            ...allSubjects,\n            currentSubject: upperCaseValue\n        })\n    }\n    return (\n        <div className='d-flex'>\n            <SideBar />\n            <div className='' style={{ width: '220px' }}></div>\n            <div className='container d-flex justify-content-center align-items-center flex-column '>\n                <Header />\n                <h4 className='text-success font-weight-bold' >\n                    {ClassName.toLocaleUpperCase()}</h4>\n\n                {/* Display the Manage Cards for Students and Subjects */}\n\n                <ManageCard currentClass={ClassName} NoOfSubjects={allSubjects.subjects.length}\n                    NoOfStudents={students.length} student='managestudents' subject='managesubjects' />\n\n                <div>\n                    {/* Dropdown options for Subjects */}\n                    {\n                        // Display this message if no Subject and Student Availabe for the Class\n                        allSubjects.subjects.length === 0 || students.length === 0 ?\n                            <h6 className='text-danger font-weight-bold' >\n                                <em>You have either no 'Subject' or 'Student' registered for this class.\n                                    <br />Please use  the buttons above to add Subjects and Students\n                                </em></h6>\n                            :\n                            // the subjects Option drop\n                            < div >\n                                <h4 className='text-success text-center font-weight-bold' >Scoresheet for\n                                        <i className='text-danger'>{allSubjects.currentSubject}</i></h4>\n                                <div className='d-flex'>\n                                    < Label for=\"exampleSelect\">Change Subject:</Label>\n                                    <Input type=\"select\" name=\"currentSubject\" value={allSubjects.currentSubject}\n                                        onChange={subjectChangeHandler} >\n                                        {\n                                            allSubjects.subjects.map((state, index) => (\n                                                <option key={index} value={state.subjectName}>{state.subjectName}</option>\n                                            ))\n                                        }\n                                    </Input>\n                                </div>\n                            </div>\n                    }\n\n                </div>\n                {\n                    // students.length !== 0 &&\n                    < ScoreSheetTable ClassName={ClassName} students={students} scoreDisplayData={scoreDisplayData.score}\n                        currentSubject={allSubjects.currentSubject} />\n                }\n            </div>\n        </div >\n    )\n}\n\nexport default ClassRoom\n","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/classes/AddClassSectionForm.js",["264"],"import React, { useState, useEffect } from 'react';\nimport { Table, Card, Form, Label, Input, Button, FormGroup } from 'reactstrap';\n\nimport { dbServices } from '../../services/services';\nimport Header from '../Header';\nimport SideBar from '../SideBar/SideBar';\n\n\n\nfunction AddclassCategoryForm() {\n\n    const [ClassSection, setClassSection] = useState([])\n    const [Section, setSection] = React.useState({ cat_name: '', hod_name: '', })\n\n    useEffect(() => {\n        //fetchAllSection\n        dbServices.fetchAllSections(setClassSection, ClassSection)\n\n    }, [])\n\n\n\n    const changeHandler = (e) => {\n        const value = e.target.value;\n        const upperCaseValue = value.toLocaleUpperCase()\n        setSection({\n            ...Section,\n            [e.target.name]: upperCaseValue\n        })\n\n    }\n    const AddSectionHandler = () => {\n        if (Section.cat_name === '' | Section.hod_name === '') {\n            alert(`\"Section Name\" or \"Head of Section\" cannot be empty `)\n        }\n\n        if (ClassSection.length === 0 & !(Section.cat_name === '' | !Section.hod_name === '')) {\n            console.log(Section)\n            setClassSection(ClassSection.concat(Section))\n        }\n        if (ClassSection.length !== 0) {\n            let checkConflictArray1 = ClassSection.filter(section => section.cat_name === Section.cat_name)\n            if (checkConflictArray1.length === 0) {\n                setClassSection(ClassSection.concat(Section))\n            }\n            else {\n                console.log({ checkConflictArray1 })\n                alert(`${Section.cat_name} section already added`)\n            }\n        }\n    }\n\n\n    const DeleteHandler = (e) => {\n        const currentIndex = e.target.id\n\n        let newAllSection = [...ClassSection];\n        newAllSection.splice(currentIndex, 1)\n        setClassSection(newAllSection)\n\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if (ClassSection.length === 0) {\n            alert(`Atleast one section must be must added`)\n        }\n\n        else {\n            //save all sections to DB\n            dbServices.saveAllSection(ClassSection)\n        }\n\n\n\n    }\n\n    return (\n        <div className='d-flex flex-row' >\n            <SideBar />\n            <div style={{ height: '100px', width: '150px' }} ></div>\n\n            <div className='container d-flex justify-content-center align-items-center flex-column '>\n                <Header />\n                <h4 className='justify-self-center text-center text-success mt-4 font-weight-bold' >Register Section(s) Below</h4>\n                <Card className='container shadow-lg p-3 mb-5 d-flex'>\n                    <Form className='d-flex   flex-column '>\n                        <FormGroup className='d-flex flex-row mr-0 justify-content-start'>\n                            <Label for=\"username\" className='font-weight-bold w-25 text-success'>Section Name:</Label>\n                            <Input type=\"text\" name=\"cat_name\" value={Section.cat_name} onChange={changeHandler} placeholder=\"e.g: Nursery, Basic, JSS, SSS\" />\n                        </FormGroup >\n                        <FormGroup className='d-flex flex-row ' >\n                            <Label for=\"username\" className='font-weight-bold w-25 text-success'>Head of Section:</Label>\n                            <Input type=\"text\" name=\"hod_name\" value={Section.hod_name} onChange={changeHandler} placeholder=\"e.g Ustaz Zulqarnain\" />\n                        </FormGroup>\n                    </Form>\n                    <div className='d-flex align-self-center justify-content-lg-center '>\n                        <Button className='text-light font-weight-bold'\n                            color='success'\n                            onClick={AddSectionHandler}>Add Section</Button>\n                    </div>\n                </Card>\n                {\n\n                }\n\n                <Table className='text-success' bordered hover striped>\n                    <thead>\n                        <tr>\n\n                            <th>Section Name</th>\n                            <th>HOD Name</th>\n                            <th>Number of Classes Registered</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            ClassSection.length !== 0 &&\n                            ClassSection.map((section, index) => {\n                                return (\n                                    < tr key={index}>\n                                        <td>{section.cat_name}</td>\n                                        <td>{section.hod_name}</td>\n                                        <td>0</td>\n                                        <td >\n                                            <Button\n                                                id={index}\n                                                onClick={DeleteHandler}\n                                                className='ml-2 text-light bg-success font-weight-bold'>Delete</Button>\n\n                                        </td>\n                                    </tr>\n                                )\n                            })\n\n\n\n\n                        }\n                    </tbody>\n                </Table>\n\n\n\n                <div className='d-flex align-self-center justify-content-lg-center '>\n                    <Button className='text-light font-weight-bold'\n                        color='success'\n                        onClick={onSubmit}>Submit</Button>\n                </div>\n\n\n\n            </div>\n\n\n        </div>\n\n\n    )\n}\n\nexport default AddclassCategoryForm\n","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/classes/addClassForm.js",["265"],"import React, { useState, useEffect } from 'react';\nimport { Table, Card, Form, Label, Input, Button, FormGroup } from 'reactstrap';\nimport { dbServices } from '../../services/services';\nimport Header from '../Header';\nimport SideBar from '../SideBar/SideBar';\n\n\n\nfunction AddclassClassesForm(props) {\n    const sectionName = props.match.params.sectionname.toLocaleLowerCase()\n    console.log(sectionName)\n    const [Classes, setClasses] = useState([])\n    const [myClass, setmyClass] = useState({ class_name: '', teacher_name: '', })\n\n    useEffect(() => {\n        //fetchAllClassess\n        dbServices.fetchAllClasses(sectionName, setClasses, Classes)\n    }, [])\n\n    const changeHandler = (e) => {\n        const value = e.target.value;\n        const upperCaseValue = value.toLocaleUpperCase()\n        setmyClass({\n            ...myClass,\n            [e.target.name]: upperCaseValue\n        })\n\n    }\n    const AddmyClassHandler = () => {\n        if (myClass.class_name === '' | myClass.teacher_name === '') {\n            alert(`\"Class Name\" or \"Class Teacher's Name\" cannot be empty `)\n        }\n        else {\n\n            let checkConflictArray = Classes.filter(Class => Class.class_name === myClass.class_name)\n\n            if (checkConflictArray.length === 0) {\n                setClasses(Classes.concat(myClass))\n            }\n            else {\n                console.log({ checkConflictArray })\n                alert(`${myClass.class_name} class already added`)\n            }\n        }\n    }\n    // const EditHandler = (e) => {\n    //     const currentIndex = e.target.id\n\n    //     let tempStateData = [...Classes] //Create a dummy array variable to hold Classes \n    //     setmyClass(tempStateData[currentIndex])\n    //     db.get(sectionName)\n    //         .then(doc => {\n    //             db.put({\n    //                 _id: sectionName,\n    //                 _rev: doc._rev,\n    //                 Classes: Classes,\n    //                 no_of_classes: 0\n    //             }).then(result => {\n\n    //                 // setClasses(tempStateData)\n    //                 //settextChange(!textChange) //this is use to update state(causes change to DOM) so a re-render occur\n    //                 //setClasses(Classes.concat(myClass))\n    //             })\n    //         })\n    // }\n    const DeleteHandler = (e) => {\n        const currentIndex = e.target.id\n        let newClasses = [...Classes];\n        newClasses.splice(currentIndex, 1)\n        setClasses(newClasses)\n\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        if (Classes.length === 0) {\n            alert(`Atleast one myClass must be must added`)\n        }\n        else {\n            //saveClasses to DB\n            dbServices.saveClasses(sectionName, Classes)\n        }\n    }\n\n    return (\n        <div className='d-flex flex-row' >\n            <SideBar />\n            {/* THE DIV BELOW SERVE AS TOP PADDING   */}\n            <div style={{ height: '100px', width: '150px' }} ></div>\n            <div className='container d-flex justify-content-center align-items-center flex-column '>\n                <Header />\n                <h4 className='justify-self-center text-center text-success mt-4 font-weight-bold' > {sectionName.toLocaleUpperCase()} SECTION</h4>\n\n                <h4 className='justify-self-center text-center text-success mt-4 font-weight-bold' >Register Class(es)</h4>\n                <Card className='container shadow-lg p-3 mb-5 d-flex'>\n                    <Form className='d-flex   flex-column '>\n                        <FormGroup className='d-flex flex-row mr-0 justify-content-start'>\n                            <Label for=\"username\" className='font-weight-bold w-25 text-success'>Class Name:</Label>\n                            <Input type=\"text\" name=\"class_name\" value={myClass.class_name} onChange={changeHandler} placeholder=\"e.g: Nursery 1, Basic 2, JSS 3, SSS 1 \" />\n                        </FormGroup >\n                        <FormGroup className='d-flex flex-row ' >\n                            <Label for=\"username\" className='font-weight-bold w-25 text-success'>Class Teacher Name:</Label>\n                            <Input type=\"text\" name=\"teacher_name\" value={myClass.teacher_name} onChange={changeHandler} placeholder=\"e.g Ustaz Zulqarnain\" />\n                        </FormGroup>\n                    </Form>\n                    <div className='d-flex align-self-center justify-content-lg-center '>\n                        <Button className='text-light font-weight-bold'\n                            color='success'\n                            onClick={AddmyClassHandler}>Add Class</Button>\n                    </div>\n                </Card>\n\n\n                <Table className='text-success' bordered hover striped>\n                    <thead>\n                        <tr>\n\n                            <th>Class Name</th>\n                            <th>Class Teacher Name</th>\n                            <th>Number of Subjects Registered</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {Classes.map((myClass, index) => {\n                            return (\n                                < tr key={index}>\n                                    <td>{myClass.class_name}</td>\n                                    <td>{myClass.teacher_name}</td>\n                                    <td>0</td>\n                                    <td >\n                                        {/* <Button className='ml-2 text-light bg-success font-weight-bold'\n                                            id={index}\n                                            onClick={EditHandler}\n                                        >\n                                            Edit\n                                        </Button> */}\n                                        <Button className='ml-2 text-light bg-success font-weight-bold'\n                                            id={index}\n                                            onClick={DeleteHandler}\n                                        >\n                                            Delete\n                                        </Button>\n\n\n                                    </td>\n                                </tr>\n                            )\n                        })\n\n                        }\n                    </tbody>\n                </Table>\n                <div className='d-flex align-self-center justify-content-lg-center '>\n                    <Button className='text-light font-weight-bold'\n                        color='success'\n                        onClick={onSubmit}>Submit</Button>\n                </div>\n            </div>\n\n        </div>\n\n\n\n    )\n}\n\nexport default AddclassClassesForm\n","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/classes/GotoClass.js",["266"],"import React, { useEffect, useState } from 'react'\nimport { Card, Form, FormGroup, Label, Input, Button } from 'reactstrap';\nimport Header from '../Header'\n\n//DATEPICKER AND ITS CSS\nimport SideBar from '../SideBar/SideBar';\nimport { dbServices } from '../../services/services';\n\n\nfunction ResultsGenerator() {\n\n    const [ResultGenData, setResultGenData] = useState({\n        class: [],\n        selectedClass: ''\n    })\n\n    useEffect(() => {\n        let tempClassValue = []\n        dbServices.getResultGeneratorData(ResultGenData, setResultGenData, tempClassValue)\n    }, [])\n\n    const handleChange = (e) => {\n        const value = e.target.value\n        console.log(value)\n        setResultGenData({\n            ...ResultGenData,\n            [e.target.name]: value\n        })\n    }\n    console.log(ResultGenData)\n    const onSubmit = (e) => {\n        e.preventDefault()\n        // const Data = {\n        //     term: ResultGenData.term,\n        //     selectedClass: ResultGenData.selectedClass,\n        //     session: ResultGenData.session,\n        //     nextTermBeing: ResultGenData.nextTermBeing.toDateString()\n        // }\n\n        window.location = `${ResultGenData.selectedClass.toLocaleLowerCase()}/classroom`\n\n    }\n    return (\n        <div >\n            <SideBar />\n            <div className='container d-flex justify-content-center align-items-center flex-column '>\n                <Header />\n            </div>\n            <Card className='container border w-50 shadow-lg p-3 d-flex align-items-center'>\n                <h4 className='text-success text-center font-weight-bold' > SPECIFY A DESIRED CLASS</h4>\n                <Form >\n                    <FormGroup className='d-flex w-100' >\n                        <Label for=\"Class\" className='text-success font-weight-bold pr-3'>Class:</Label>\n                        <Input type=\"select\" name=\"selectedClass\" value={ResultGenData.selectedClass} onChange={handleChange} >\n                            {\n                                ResultGenData.class.map((item, index) =>\n                                    < option key={index} > {item.class_name}</option>\n                                )\n                            }\n                        </Input>\n                    </FormGroup>\n\n                </Form >\n                <div className='d-flex justify-content-lg-center '>\n                    {/* using this button to test CONTEXT API */}\n                    <Button className='text-light font-weight-bold pr-3'\n                        color='success'\n                        onClick={onSubmit}>Submit</Button>\n                </div>\n            </Card >\n        </div >\n    )\n}\n\nexport default ResultsGenerator\n","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/students/ManageStudent.js",["267"],"import React, { useState, useEffect } from 'react';\nimport { Table, Card, Form, Label, Input, Button, FormGroup } from 'reactstrap';\n\nimport { dbServices } from '../../services/services';\nimport Header from '../Header';\nimport SideBar from '../SideBar/SideBar';\n\n\nfunction ManageStudent(props) {\n    const ClassName = props.match.params.ClassRoomName.toLocaleLowerCase()\n\n    const gender = ['MALE', 'FEMALE']\n    const [AllmyStudent, setAllmyStudent] = useState([])\n    //const [studentInScores, setstudentInScores] = useState({})\n    const [myStudent, setmyStudent] = useState({ fName: '', sName: '', gender: gender[0] })\n\n    const [Scores, setScore] = useState(null)\n\n    useEffect(() => {\n        //fetch All Students\n        dbServices.getStudentsAndScore(ClassName, setAllmyStudent, AllmyStudent, setScore)\n\n    }, [])\n\n\n    const changeHandler = (e) => {\n        const value = e.target.value;\n        const upperCaseValue = value.toLocaleUpperCase()\n        setmyStudent({\n            ...myStudent,\n            [e.target.name]: upperCaseValue\n        })\n\n\n    }\n    const AddmyStudentHandler = () => {\n        if (myStudent.fName === '' || myStudent.sName === '') {\n            alert(`\"Student First Name\" or \"Student Surname\" cannot be empty `)\n        }\n        else {\n\n            let checkConflictArray = AllmyStudent.filter(students => students.fName === myStudent.fName && students.sName === myStudent.sName)\n            if (checkConflictArray.length === 0) {\n                setAllmyStudent(AllmyStudent.concat(myStudent))\n            }\n            else {\n                alert(`${myStudent.fName} ${myStudent.sName} already added`)\n            }\n        }\n    }\n\n    const DeleteHandler = (e) => {\n        const currentIndex = e.target.id\n        let newAllmyStudent = [...AllmyStudent];\n        newAllmyStudent.splice(currentIndex, 1)\n        setAllmyStudent(newAllmyStudent)\n\n        if (Scores) {\n            for (const key in Scores) {\n                if (Scores.hasOwnProperty.call(Scores, key)) {\n                    Scores[key].splice(currentIndex, 1);\n                }\n            }\n            setScore(Scores)\n            dbServices.deleteStudentfromScore(ClassName, Scores)\n        }\n\n\n\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        if (AllmyStudent.length === 0) {\n            alert(`No Student added`)\n\n        }\n\n        else {\n            //Save Students to DB\n            dbServices.saveStudents(ClassName, AllmyStudent)\n        }\n    }\n\n    return (\n        <div className='d-flex flex-row' >\n            <SideBar />\n            <div style={{ height: '100px', width: '150px' }} ></div>\n\n\n            <div className='container d-flex justify-content-center align-items-center flex-column '>\n                <Header />\n                <h4 className='justify-self-center text-center text-success mt-4 font-weight-bold' >{ClassName.toLocaleUpperCase()}</h4>\n                <h4 className='justify-self-center text-center text-success mt-4 font-weight-bold' >Register Student(s) Below</h4>\n                <Card className='container shadow-lg p-3 mb-5 d-flex'>\n                    <Form className='d-flex   flex-column '>\n                        <FormGroup className='d-flex flex-row mr-0 justify-content-start'>\n                            <Label for=\"username\" className='font-weight-bold w-25 text-success'>Student First Name:</Label>\n                            <Input type=\"text\" name=\"fName\" value={myStudent.fName} onChange={changeHandler} placeholder=\"e.g: Student First Name\" />\n                        </FormGroup >\n                        <FormGroup className='d-flex flex-row mr-0 justify-content-start'>\n                            <Label for=\"username\" className='font-weight-bold w-25 text-success'>Student Surname Name:</Label>\n                            <Input type=\"text\" name=\"sName\" value={myStudent.sName} onChange={changeHandler} placeholder=\"e.g: Student Surname\" />\n                        </FormGroup >\n                        <FormGroup className='d-flex flex-row ' >\n                            <Label for=\"username\" className='font-weight-bold w-25 text-success'>Gender</Label>\n                            <Input type=\"select\" name='gender' value={myStudent.sGender} onChange={changeHandler} >\n                                {gender.map((state, index) => (\n                                    <option key={index}>{state}</option>\n                                ))\n                                }\n                            </Input>\n                        </FormGroup>\n                    </Form>\n                    <div className='d-flex align-self-center justify-content-lg-center '>\n                        <Button className='text-light font-weight-bold'\n                            color='success'\n                            onClick={AddmyStudentHandler}>Add Student</Button>\n                    </div>\n                </Card>\n                <Table className='text-success' bordered hover striped>\n                    <thead>\n                        <tr>\n\n                            <th>Student Name</th>\n                            <th>Gender</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n\n                            AllmyStudent.map((myStudent, index) => {\n                                return (\n                                    < tr key={index}>\n                                        <td>{myStudent.fName} {myStudent.sName}</td>\n\n                                        <td>{myStudent.gender}</td>\n                                        <td >\n                                            <Button\n                                                id={index}\n                                                onClick={DeleteHandler}\n                                                className='ml-2 text-light bg-success font-weight-bold'>Delete</Button>\n\n                                        </td>\n                                    </tr>\n                                )\n                            })\n\n                        }\n                    </tbody>\n                </Table>\n\n\n\n                <div className='d-flex align-self-center justify-content-lg-center '>\n                    <Button className='text-light font-weight-bold'\n                        color='success'\n                        onClick={onSubmit}>Submit</Button>\n                </div>\n\n            </div>\n        </div>\n\n    )\n}\n\nexport default ManageStudent\n","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/subjects/ManageSubject.js",["268"],"import React, { useState, useEffect } from 'react';\nimport { Card, Form, Label, Input, Button, FormGroup } from 'reactstrap';\nimport { dbServices } from '../../services/services';\nimport Header from '../Header';\nimport SideBar from '../SideBar/SideBar';\nimport SubjectTable from './SubjectTable';\n\n\n\nfunction ManageSubject(props) {\n    const className = props.match.params.ClassRoomName.toLocaleLowerCase()\n    console.log(className)\n    const [AllmySubjects, setAllmySubjects] = useState([])\n    const [mySubjects, setmySubjects] = useState({ subjectName: '', teacherName: '', })\n\n    useEffect(() => {\n        //fetch subjects and display in table\n        dbServices.getSubjects(className, setAllmySubjects, AllmySubjects);\n    }, [])\n\n\n\n    const changeHandler = (e) => {\n        const value = e.target.value;\n        const upperCaseValue = value.toLocaleUpperCase()\n        setmySubjects({\n            ...mySubjects,\n            [e.target.name]: upperCaseValue\n        })\n\n    }\n    const AddmySubjectsHandler = () => {\n        if (mySubjects.subjectName === '' | mySubjects.teacherName === '') {\n            alert(`\"Subject Name\" or \"Teacher's Name\" cannot be empty `)\n        }\n        else {\n\n            let checkConflictArray = AllmySubjects.filter(Class => Class.subjectName === mySubjects.subjectName)\n\n            if (checkConflictArray.length === 0) {\n                setAllmySubjects(AllmySubjects.concat(mySubjects))\n            }\n            else {\n                console.log({ checkConflictArray })\n                alert(`${mySubjects.subjectName} already added`)\n            }\n        }\n    }\n\n\n\n    return (\n        <div className='d-flex flex-row' >\n            <SideBar />\n            <div style={{ height: '100px', width: '150px' }} ></div>\n            <div className='container d-flex justify-content-center align-items-center flex-column '>\n                <Header />\n                <h4 className='justify-self-center text-center text-success mt-4 font-weight-bold' >{className.toLocaleUpperCase()}</h4>\n                <h4 className='justify-self-center text-center text-success mt-4 font-weight-bold' >Register Subject(s) Below</h4>\n                <Card className='container shadow-lg p-3 mb-5 d-flex'>\n                    <Form className='d-flex   flex-column '>\n                        <FormGroup className='d-flex flex-row mr-0 justify-content-start'>\n                            <Label for=\"username\" className='font-weight-bold w-25 text-success'>Subject Name:</Label>\n                            <Input type=\"text\" name=\"subjectName\" value={mySubjects.subjectName} onChange={changeHandler} placeholder=\"e.g: Mathematics, English language \" />\n                        </FormGroup >\n                        <FormGroup className='d-flex flex-row ' >\n                            <Label for=\"username\" className='font-weight-bold w-25 text-success'>Teacher's Name:</Label>\n                            <Input type=\"text\" name=\"teacherName\" value={mySubjects.teacherName} onChange={changeHandler} placeholder=\"e.g Ustaz Zulqarnain\" />\n                        </FormGroup>\n                    </Form>\n                    <div className='d-flex align-self-center justify-content-lg-center '>\n                        <Button className='text-light font-weight-bold'\n                            color='success'\n                            onClick={AddmySubjectsHandler}>Add Subjects</Button>\n                    </div>\n                </Card>\n                <SubjectTable AllmySubjects={AllmySubjects} setAllmySubjects={setAllmySubjects} className={className} />\n            </div>\n\n        </div>\n    )\n}\n\nexport default ManageSubject\n","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/result/ResultsGenerator.js",["269"],"import React, { useEffect, useState } from 'react'\nimport { Card, Form, FormGroup, Label, Input, Button } from 'reactstrap';\nimport Header from '../Header'\n\n//DATEPICKER AND ITS CSS\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport SideBar from '../SideBar/SideBar';\nimport { dbServices } from '../../services/services';\n\n\nfunction ResultsGenerator() {\n\n    const [ResultGenData, setResultGenData] = useState({\n        class: [],\n        noOfClasses: 0,\n        term: 'FIRST TERM',\n        selectedClass: '',\n        session: '',\n        nextTermBeing: new Date()\n    })\n\n    useEffect(() => {\n        let tempClassValue = []\n        dbServices.getResultGeneratorData(ResultGenData, setResultGenData, tempClassValue)\n    }, [])\n\n    const handleChange = (e) => {\n        const value = e.target.value;\n\n        setResultGenData({\n            ...ResultGenData,\n            [e.target.name]: value\n        })\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        const Data = {\n            term: ResultGenData.term,\n            selectedClass: ResultGenData.selectedClass,\n            session: ResultGenData.session,\n            nextTermBeing: ResultGenData.nextTermBeing.toDateString()\n        }\n        if (ResultGenData.session === '') {\n            alert(\"'Session' cannot be empty\")\n        }\n        else {\n            //save resultData\n            dbServices.saveresultData(Data)\n        }\n    }\n    return (\n        <div >\n            <SideBar />\n            <div className='container d-flex justify-content-center align-items-center flex-column '>\n                <Header />\n            </div>\n            <Card className='container border w-50 shadow-lg p-3 d-flex align-items-center'>\n                <h4 className='text-success text-center font-weight-bold' >                    RESULT GENERATOR</h4>                <Form >\n                    <FormGroup className='d-flex w-100' >\n                        <Label for=\"Class\" className='text-success font-weight-bold pr-3'>Class:</Label>\n                        <Input type=\"select\" name=\"selectedClass\" value={ResultGenData.selectedClass} onChange={handleChange} >\n                            {\n                                ResultGenData.class.map((item, index) =>\n                                    < option key={index} > {item.class_name}</option>\n                                )\n                            }\n                        </Input>\n                    </FormGroup>\n                    <FormGroup className='d-flex w-100'>\n                        <Label for=\"Class\" className='text-success font-weight-bold pr-3'>Term</Label>\n                        <Input type=\"select\" name=\"term\" value={ResultGenData.term} onChange={handleChange} >\n                            <option >FIRST TERM</option>\n                            <option >SECOND TERM</option>\n                            <option >THIRD TERM</option>\n                        </Input>\n                    </FormGroup>\n                    <FormGroup className='d-flex w-100' >\n                        <Label for=\"Session\" className='text-success font-weight-bold pr-3'>Session</Label>\n                        <Input type=\"text\" name=\"session\" value={ResultGenData.session} onChange={handleChange} placeholder=\"e.g 2021/2022\" />\n                    </FormGroup  >\n                    <div className='d-flex w-100 mb-3'>\n                        <Label for=\"Next Term Resumption Date\" className='text-success font-weight-bold pr-3'>Next Term Begin on</Label>\n                        <DatePicker selected={ResultGenData.nextTermBeing} calendarClassName=\"rasta-stripes\" onChange={date => { setResultGenData({ ...ResultGenData, nextTermBeing: date }); }} />\n                    </div>\n                </Form >\n                <div className='d-flex justify-content-lg-center '>\n                    {/* using this button to test CONTEXT API */}\n                    <Button className='text-light font-weight-bold pr-3'\n                        color='success'\n                        onClick={onSubmit}>Submit</Button>\n                </div>\n            </Card >\n        </div >\n    )\n}\n\nexport default ResultsGenerator\n","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/result/Results.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/classes/ScoreSheetTables.js",["270","271"],"import React, { useState, useEffect } from \"react\";\nimport Loading from '../reusables/Loading'\nimport { Table, Input, Button } from 'reactstrap';\nimport { dbServices } from \"../../services/services\";\n\nconst ScoreSheetTables = ({ currentSubject, ClassName }) => {\n\n    const [scoreDisplayData, setScore] = useState([])\n    const [textChange, settextChange] = useState(true)\n\n\n    useEffect(() => {\n        let tempData = [];\n        dbServices.fetchScoreData(ClassName, currentSubject, setScore, tempData)\n    }, [currentSubject])\n\n    const changeHandler = async (e) => {\n        let value = parseInt(e.target.value, 10) || 0;  //assign an integer to value OR 0 if NaN\n        let currentIndex = parseInt(e.target.id, 10) //assign an integer to value OR 0 if NaN\n        console.log(currentIndex)\n        console.log(scoreDisplayData)\n        let tempStateData = scoreDisplayData //Create a dummy array variable to hold scoreDisplayData \n\n        tempStateData[currentIndex][e.target.name] = value //NB: scoreDisplayData  === [{ fName: element.fName, sName: element.sName, Test1: 0, Test2: 0, Exam: 0 }]\n        setScore(tempStateData)\n\n        settextChange(!textChange) //this is use to update state(causes change to DOM) so a re-render occur\n    }\n\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        if (scoreDisplayData.length === 0) {\n            alert(`Atleast 1 'Student's Score' must be must added`)\n        }\n\n        //If score is not enter for any student\n        else if (scoreDisplayData.length !== 0) {\n            let checkifAllScoreFieldArray = scoreDisplayData.filter(\n                // To check a key is available in an object === obj.hasOwnProperty(\"key\")\n                (element) => !element.hasOwnProperty(\"Test1\") || !element.hasOwnProperty(\"Test2\") || !element.hasOwnProperty(\"Exam\") || !element.hasOwnProperty(\"BForward\")\n            )\n            console.log(checkifAllScoreFieldArray)\n\n            if (checkifAllScoreFieldArray.length > 0) {\n                alert(\"'Test 1', Test 2' or 'Exam' or 'Total B/Forward'\" + 'for ' + checkifAllScoreFieldArray[0].fName + \" \" + checkifAllScoreFieldArray[0].sName + ' cannot be empty')\n            }\n            else {\n                //save scoreSheet to DB\n                dbServices.saveScoreSheet(ClassName, currentSubject, scoreDisplayData, settextChange, textChange)\n            }\n\n        }\n\n\n    }\n    return (\n        <div className='d-flex justify-content-center align-items-center flex-column '>\n\n            {scoreDisplayData.length === 0 ?\n                <div></div>\n                :\n                scoreDisplayData === undefined ?\n                    <Loading /> :\n\n                    <div >\n\n                        <Table className='text-success' bordered hover striped>\n                            <thead>\n                                <tr>\n                                    <th>STUDENT NAME </th>\n                                    <th>TEST 1</th>\n                                    <th>TEST 2</th>\n                                    <th>EXAM</th>\n                                    <th>TOTAL B/FORWARD</th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {\n                                    scoreDisplayData.length !== 0 &&\n                                    scoreDisplayData.map((scoreToDisplay, index) => {\n\n                                        return (\n                                            < tr key={index}>\n                                                <td>{scoreToDisplay.fName} {scoreToDisplay.sName}</td>\n                                                <td>\n                                                    <Input type=\"number\" id={index} name=\"Test1\" value={scoreToDisplay.Test1} onChange={changeHandler} placeholder=\"TEST 1 SCORE\" />\n                                                </td>\n\n                                                <td>\n                                                    <Input type=\"number\" id={index} name=\"Test2\" value={scoreToDisplay.Test2} onChange={changeHandler} placeholder=\"TEST 2 SCORE\" />\n                                                </td>\n                                                <td>\n                                                    <Input type=\"number\" id={index} name=\"Exam\" value={scoreToDisplay.Exam} onChange={changeHandler} placeholder=\"EXAM SCORE\" />\n                                                </td>\n                                                <td>\n                                                    <Input type=\"number\" id={index} name=\"BForward\" value={scoreToDisplay.BForward} onChange={changeHandler} placeholder=\"TOTAL B/FORWARD\" />\n                                                </td>\n                                            </tr>\n                                        )\n                                    })}\n                            </tbody>\n                        </Table >\n                        <div className='d-flex align-self-center justify-content-lg-center '>\n                            <Button className='text-light font-weight-bold'\n                                color='success'\n                                onClick={onSubmit}>Save Score Data</Button>\n                        </div>\n                    </div>\n            }\n        </div >\n\n\n    );\n};\n\nexport default ScoreSheetTables;","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/subjects/SubjectTable.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/Header.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/cards/CardList.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/services/services.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/cards/AddingMoreCard.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/cards/AddingCard.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/cards/ManageCard.js",["272","273"],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/SideBar/SideBar.js",["274"],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/reusables/Loading.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/result/BackPrintBtn.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/result/ResultData.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/result/ResultTables.js",["275"],"import React from 'react'\n\n\nexport const Table = {\n    pysochomotorTale: (pysochomotor) => {\n        return (\n            <table id='doubleTable' className='text-success border' >\n                <thead>\n                    <tr>\n                        <th colSpan=\"6\" className='text-center'>1. PSYCHOMOTOR </th>\n                    </tr>\n                    <tr>\n                        <th className='text-center'></th>\n                        <th className='text-center'>5</th>\n                        <th className='text-center'>4</th>\n                        <th className='text-center'>3</th>\n                        <th className='text-center'>2</th>\n                        <th className='text-center'>1</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        pysochomotor.length !== 0 &&\n                        pysochomotor.map((item, index) => {\n                            return (\n                                < tr key={index}>\n                                    <td style={{ width: '250px' }}>{item}</td>\n                                    <td ></td>\n                                    <td ></td>\n                                    <td ></td>\n                                    <td ></td>\n                                    <td ></td>\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table >\n        )\n    },\n    affectiveDomainTable: (pysochomotor) => {\n        return (\n            <table id='doubleTable' className=' text-success border' >\n                < thead >\n                    <tr>\n                        <th colSpan=\"6\" className='text-center'> 2. AFFECTIVE DOMAIN </th>\n                    </tr>\n                    <tr>\n                        <th className='text-center'></th>\n                        <th className='text-center'>5</th>\n                        <th className='text-center'>4</th>\n                        <th className='text-center'>3</th>\n                        <th className='text-center'>2</th>\n                        <th className='text-center'>1</th>\n                    </tr>\n                </thead >\n                <tbody className='w-100'>\n                    {\n                        pysochomotor.length !== 0 &&\n                        pysochomotor.map((item, index) => {\n                            return (\n                                < tr key={index}>\n                                    <td style={{ width: '250px' }} >{item}</td>\n                                    <td ></td>\n                                    <td ></td>\n                                    <td ></td>\n                                    <td ></td>\n                                    <td ></td>\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table >\n        )\n    },\n    attendanceTable: (attendeance) => {\n        return (\n            <table id='doubleTableminus' className='text-success border ' >\n                <thead>\n                    <tr>\n                        <th colSpan=\"2\" className='text-center'> 3. ATTENDANCE </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        attendeance.length !== 0 &&\n                        attendeance.map((item, index) => {\n                            return (\n                                < tr key={index}>\n                                    <td id='doubleTD'>{item}</td>\n                                    <td id='doubleTD'></td>\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table >\n        )\n    },\n\n    physicalAndHealth: () => {\n        return (\n            <table id='doubleTablePlus' className='text-success border ' >\n                <thead>\n                    <tr>\n                        <th colSpan=\"4\" className='text-center'> 4. PHYSICAL DEVELOPMENT & HEALTH </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    < tr className='text-center'>\n                        <th colSpan=\"2\" id='doubleTD'>HEALTH</th>\n                        <th colSpan=\"2\" id='doubleTD'>WEIGHT</th>\n                    </tr>\n\n                    < tr className='text-center'>\n                        <td id='quarterTD'>Beginning of Term</td>\n                        <td id='quarterTD'>End of Term</td>\n\n                        <td id='quarterTD'>Beginning of Term</td>\n                        <td id='quarterTD'>End of Term</td>\n                    </tr>\n\n                    < tr className='text-right'>\n                        <td id='quarterTD'>m</td>\n                        <td id='quarterTD'>m</td>\n\n                        <td id='quarterTD'>kg</td>\n                        <td id='quarterTD'>kg</td>\n\n                    </tr>\n\n                </tbody>\n            </table >\n        )\n    },\n    keyToRating: (key) => {\n        return (\n            <table id='rating' className=' text-success border' >\n                < thead >\n                    <tr>\n                        <th colSpan=\"2\" className='text-center'> KEY TO RATING </th>\n                    </tr>\n                </thead >\n                <tbody className='w-100'>\n                    {\n                        key.length !== 0 &&\n                        key.map((item, index) => {\n                            return (\n                                < tr key={index}>\n                                    <td >{item}</td>\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table >\n        )\n    },\n\n    keyToGrading: (key) => {\n        return (\n            <table id='grading' className=' text-success border' >\n                < thead >\n                    <tr>\n                        <th colSpan=\"2\" className='text-center'> KEY TO GRADING</th>\n                    </tr>\n                </thead >\n                <tbody className='w-100'>\n                    {\n                        key.length !== 0 &&\n                        key.map((item, index) => {\n                            return (\n                                < tr key={index}>\n                                    <td >{item}</td>\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table >\n        )\n    },\n    performanceTable: (performanceTableLabel, subjects, id, scores, currentData) => {\n        var SumOfFinalPercentage = 0;\n        console.log(subjects.length)\n        return (\n\n            <div style={{ width: '99%' }} >\n                <table id='performanceTABLE' className='text-success text-center w-100 border' >\n                    <thead>\n                        <tr>\n                            <th colSpan={performanceTableLabel.length + 1} className='text-center'> 5. PERFORMANCE IN SUBJECTS (COGNITIVE) </th>\n                        </tr>\n                    </thead>\n\n                    <tbody >\n                        <tr>\n                            <td></td>\n                            {\n                                performanceTableLabel.map((label, labIndex) => {\n                                    return (\n                                        <td key={labIndex}>{label}</td>\n                                    )\n                                })\n                            }\n                        </tr>\n                        {\n                            subjects.length !== 0 &&\n                            subjects.map((subject, subIndex) => {\n                                if (!scores[subject.subjectName][id]) {\n                                    window.location = `/${currentData.selectedClass}/classroom/${subject.subjectName}`\n                                }\n                                else {\n                                    if (!(scores[subject.subjectName][id].hasOwnProperty(\"Test1\")) || !(scores[subject.subjectName][id].hasOwnProperty(\"Test2\")) || !(scores[subject.subjectName][id].hasOwnProperty(\"Exam\"))) {\n                                        alert(\"ERROR OCCURED! Please enter score for all students on every subject score sheet\")\n                                    }\n                                    else {\n                                        let IntparsedExam = parseInt(scores[subject.subjectName][id].Exam, 10) || 0\n                                        let IntparsedTest1 = parseInt(scores[subject.subjectName][id].Test1, 10) || 0\n                                        let IntparsedTest2 = parseInt(scores[subject.subjectName][id].Test2, 10) || 0\n                                        let termTotal = IntparsedTest1 + IntparsedTest2 + IntparsedExam\n                                        let IntparsedBForward = parseInt(scores[subject.subjectName][id].BForward, 10) || 0\n                                        let cumulativeTotal = termTotal + IntparsedBForward\n                                        let finalPercentage = cumulativeTotal / 2\n                                        SumOfFinalPercentage = SumOfFinalPercentage + finalPercentage\n                                        return (\n                                            <tr key={subIndex} >\n                                                <td className='text-left'>{subject.subjectName}</td>\n\n                                                {/* Test 1  */}\n                                                <td>{IntparsedTest1}</td>\n\n                                                {/* Test 2 */}\n                                                <td>{IntparsedTest2}</td>\n\n                                                {/* Exam  */}\n                                                <td>{IntparsedExam}</td>\n\n                                                {/* Term Total  */}\n                                                <td>{termTotal}\n                                                </td>\n\n                                                {/* Total B/Forward  */}\n                                                <td>{IntparsedBForward}\n\n                                                </td>\n                                                {/* Cummulative Total  */}\n                                                <td>{cumulativeTotal}\n                                                </td>\n\n                                                {/* Final %  */}\n                                                <td>{finalPercentage}\n                                                </td>\n\n                                                {/* Grade  */}\n                                                <td>{\n                                                    finalPercentage >= 75 ? (\"A\")\n                                                        :\n                                                        finalPercentage >= 60 & finalPercentage <= 74 ? \"B\"\n                                                            :\n                                                            finalPercentage >= 50 & finalPercentage <= 59 ? \"C\"\n                                                                :\n                                                                \"F\"}\n                                                </td>\n                                                <td></td>\n                                            </tr>\n\n                                        )\n                                    }//end of  else let ....\n\n                                }//End of else if (!(scores[subject.subjectName][id].hasOwnProperty(\"Test1\"))) .....\n                            })\n                        }\n\n\n\n\n\n                    </tbody>\n                </table >\n                <div className='d-flex justify-content-end w-100'>\n                    <div className='text-danger font-weight-bold border border-success text-center' style={{ width: '170px' }}>\n                        {/* NOTE: SumOfFinalPercentage/subjects.length(Number of Subject) gives average */}\n                        AVERAGE: {(SumOfFinalPercentage / subjects.length).toPrecision(4)}%\n                        </div>\n                </div>\n\n\n\n            </div >\n\n\n        )\n    }\n}\n\n    // < div className = 'mt-4 w-100 d-flex flex-row justify-content-between' >\n    //     {/* <Label className='font-weight-bold w-25 text-success'>No. of Distinction: {Distinction}</Label> */ }\n    //     < Label className = 'font-weight-bold w-25 text-success' > No.of Credits: {}</Label>\n    //                 <Label className='font-weight-bold w-25 text-success'>No. of Passes:{ }</Label>\n    //                 <Label className='font-weight-bold w-25 text-success'>No. of Failed:{ }</Label>\n    //             </div >","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/cards/Card.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/db.js",[],{"ruleId":"276","replacedBy":"277"},{"ruleId":"278","replacedBy":"279"},{"ruleId":"280","severity":1,"message":"281","line":26,"column":18,"nodeType":"282","messageId":"283","endLine":26,"endColumn":25},{"ruleId":"280","severity":1,"message":"284","line":1,"column":17,"nodeType":"282","messageId":"283","endLine":1,"endColumn":25},{"ruleId":"280","severity":1,"message":"285","line":3,"column":10,"nodeType":"282","messageId":"283","endLine":3,"endColumn":21},{"ruleId":"280","severity":1,"message":"281","line":41,"column":18,"nodeType":"282","messageId":"283","endLine":41,"endColumn":25},{"ruleId":"276","replacedBy":"286"},{"ruleId":"278","replacedBy":"287"},{"ruleId":"280","severity":1,"message":"288","line":4,"column":8,"nodeType":"282","messageId":"283","endLine":4,"endColumn":15},{"ruleId":"289","severity":1,"message":"290","line":24,"column":8,"nodeType":"291","endLine":24,"endColumn":10,"suggestions":"292"},{"ruleId":"280","severity":1,"message":"288","line":4,"column":8,"nodeType":"282","messageId":"283","endLine":4,"endColumn":15},{"ruleId":"289","severity":1,"message":"293","line":29,"column":8,"nodeType":"291","endLine":29,"endColumn":10,"suggestions":"294"},{"ruleId":"289","severity":1,"message":"295","line":26,"column":8,"nodeType":"291","endLine":26,"endColumn":10,"suggestions":"296"},{"ruleId":"289","severity":1,"message":"290","line":19,"column":8,"nodeType":"291","endLine":19,"endColumn":10,"suggestions":"297"},{"ruleId":"289","severity":1,"message":"293","line":18,"column":8,"nodeType":"291","endLine":18,"endColumn":10,"suggestions":"298"},{"ruleId":"289","severity":1,"message":"299","line":20,"column":8,"nodeType":"291","endLine":20,"endColumn":10,"suggestions":"300"},{"ruleId":"289","severity":1,"message":"301","line":23,"column":8,"nodeType":"291","endLine":23,"endColumn":10,"suggestions":"302"},{"ruleId":"289","severity":1,"message":"303","line":19,"column":8,"nodeType":"291","endLine":19,"endColumn":10,"suggestions":"304"},{"ruleId":"289","severity":1,"message":"299","line":26,"column":8,"nodeType":"291","endLine":26,"endColumn":10,"suggestions":"305"},{"ruleId":"289","severity":1,"message":"306","line":15,"column":8,"nodeType":"291","endLine":15,"endColumn":24,"suggestions":"307"},{"ruleId":"308","severity":1,"message":"309","line":46,"column":74,"nodeType":"310","messageId":"311","endLine":46,"endColumn":75},{"ruleId":"312","severity":1,"message":"313","line":18,"column":105,"nodeType":"314","endLine":18,"endColumn":140},{"ruleId":"312","severity":1,"message":"313","line":29,"column":104,"nodeType":"314","endLine":29,"endColumn":139},{"ruleId":"280","severity":1,"message":"315","line":29,"column":24,"nodeType":"282","messageId":"283","endLine":29,"endColumn":39},{"ruleId":"316","severity":1,"message":"317","line":210,"column":62,"nodeType":"318","messageId":"319","endLine":210,"endColumn":64},"no-native-reassign",["320"],"no-negated-in-lhs",["321"],"no-unused-vars","'setUser' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useDispatch' is defined but never used.",["320"],["321"],"'Loading' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'ClassSection'. Either include it or remove the dependency array.","ArrayExpression",["322"],"React Hook useEffect has missing dependencies: 'Classes' and 'sectionName'. Either include them or remove the dependency array.",["323"],"React Hook useEffect has missing dependencies: 'ClassName', 'allSubjects', and 'subjectName'. Either include them or remove the dependency array.",["324"],["325"],["326"],"React Hook useEffect has a missing dependency: 'ResultGenData'. Either include it or remove the dependency array.",["327"],"React Hook useEffect has missing dependencies: 'AllmyStudent' and 'ClassName'. Either include them or remove the dependency array.",["328"],"React Hook useEffect has missing dependencies: 'AllmySubjects' and 'className'. Either include them or remove the dependency array.",["329"],["330"],"React Hook useEffect has a missing dependency: 'ClassName'. Either include it or remove the dependency array.",["331"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'setMenuCollapse' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"332","fix":"338"},{"desc":"334","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"340","fix":"346"},{"desc":"347","fix":"348"},"Update the dependencies array to be: [ClassSection]",{"range":"349","text":"350"},"Update the dependencies array to be: [Classes, sectionName]",{"range":"351","text":"352"},"Update the dependencies array to be: [ClassName, allSubjects, subjectName]",{"range":"353","text":"354"},{"range":"355","text":"350"},{"range":"356","text":"352"},"Update the dependencies array to be: [ResultGenData]",{"range":"357","text":"358"},"Update the dependencies array to be: [AllmyStudent, ClassName]",{"range":"359","text":"360"},"Update the dependencies array to be: [AllmySubjects, className]",{"range":"361","text":"362"},{"range":"363","text":"358"},"Update the dependencies array to be: [ClassName, currentSubject]",{"range":"364","text":"365"},[957,959],"[ClassSection]",[1050,1052],"[Classes, sectionName]",[988,990],"[ClassName, allSubjects, subjectName]",[563,565],[661,663],[573,575],"[ResultGenData]",[822,824],"[AllmyStudent, ClassName]",[733,735],"[AllmySubjects, className]",[777,779],[512,528],"[ClassName, currentSubject]"]