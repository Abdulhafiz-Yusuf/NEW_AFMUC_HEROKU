[{"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/index.js":"1","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/App.js":"2","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/LandingPage.js":"3","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/MedCenterPage.js":"4","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/BloodDetailPage.js":"5","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/Footer.js":"6","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/SearchDonor.js":"7","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/NavBar.js":"8","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/Dashboard/UserDashBoard.js":"9","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/components/Loading.js":"10","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/Dashboard/BookingPage.js":"11","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/Dashboard/Profile.js":"12","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/Dashboard/RegCompletion.js":"13","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/Dashboard/DashBoardMenu.js":"14","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/Dashboard/PaymentPage.js":"15","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/components/CardList.js":"16","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/components/Auth0LoginButton.js":"17","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/components/SearchBar.js":"18","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/components/Auth0LogoutButton.js":"19","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/appStore/_actions/BloodBankAction.js":"20","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/appStore/_actions/userAction.js":"21","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/components/Card.js":"22","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/appStore/_actions/types.js":"23","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/data.js":"24","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/appStore/Store.js":"25","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/appStore/_reducers/index.js":"26","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/appStore/_reducers/BloodBankReducer.js":"27","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/appStore/_reducers/userReducer.js":"28","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/index.js":"29","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/App.js":"30","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/data.js":"31","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/admin/LogIn.js":"32","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/admin/ChangePwd.js":"33","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/classes/AllClassSection.js":"34","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/classes/AllClasses.js":"35","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/classes/ClassRoom.js":"36","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/classes/AddClassSectionForm.js":"37","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/classes/addClassForm.js":"38","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/classes/GotoClass.js":"39","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/students/ManageStudent.js":"40","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/subjects/ManageSubject.js":"41","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/result/ResultsGenerator.js":"42","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/result/Results.js":"43","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/classes/ScoreSheetTables.js":"44","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/subjects/SubjectTable.js":"45","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/Header.js":"46","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/cards/CardList.js":"47","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/services/services.js":"48","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/cards/AddingMoreCard.js":"49","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/cards/AddingCard.js":"50","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/cards/ManageCard.js":"51","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/SideBar/SideBar.js":"52","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/reusables/Loading.js":"53","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/result/BackPrintBtn.js":"54","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/result/ResultData.js":"55","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/result/ResultTables.js":"56","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/cards/Card.js":"57","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/db.js":"58","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/NavBar.js":"59"},{"size":692,"mtime":1615472815476,"results":"60","hashOfConfig":"61"},{"size":1505,"mtime":1615472763091,"results":"62","hashOfConfig":"61"},{"size":2848,"mtime":1615540155025,"results":"63","hashOfConfig":"61"},{"size":257,"mtime":1615472745334,"results":"64","hashOfConfig":"61"},{"size":4506,"mtime":1615472744878,"results":"65","hashOfConfig":"61"},{"size":393,"mtime":1615472745310,"results":"66","hashOfConfig":"61"},{"size":3509,"mtime":1615472745382,"results":"67","hashOfConfig":"61"},{"size":2673,"mtime":1615472745358,"results":"68","hashOfConfig":"61"},{"size":3940,"mtime":1615472745250,"results":"69","hashOfConfig":"61"},{"size":361,"mtime":1615472744694,"results":"70","hashOfConfig":"61"},{"size":2449,"mtime":1615472744942,"results":"71","hashOfConfig":"61"},{"size":2463,"mtime":1615472745190,"results":"72","hashOfConfig":"61"},{"size":5008,"mtime":1615472745202,"results":"73","hashOfConfig":"61"},{"size":1310,"mtime":1615472745102,"results":"74","hashOfConfig":"61"},{"size":307,"mtime":1615472745166,"results":"75","hashOfConfig":"61"},{"size":285,"mtime":1615472744670,"results":"76","hashOfConfig":"61"},{"size":668,"mtime":1615473213424,"results":"77","hashOfConfig":"61"},{"size":4012,"mtime":1615472744730,"results":"78","hashOfConfig":"61"},{"size":499,"mtime":1615472744574,"results":"79","hashOfConfig":"61"},{"size":2388,"mtime":1615477812568,"results":"80","hashOfConfig":"61"},{"size":3156,"mtime":1615472744014,"results":"81","hashOfConfig":"61"},{"size":974,"mtime":1615472744598,"results":"82","hashOfConfig":"61"},{"size":748,"mtime":1615472743994,"results":"83","hashOfConfig":"61"},{"size":16893,"mtime":1615472806028,"results":"84","hashOfConfig":"61"},{"size":437,"mtime":1615472743898,"results":"85","hashOfConfig":"61"},{"size":238,"mtime":1615472744066,"results":"86","hashOfConfig":"61"},{"size":746,"mtime":1615472744054,"results":"87","hashOfConfig":"61"},{"size":1141,"mtime":1615472744086,"results":"88","hashOfConfig":"61"},{"size":821,"mtime":1620828153614,"results":"89","hashOfConfig":"90"},{"size":2093,"mtime":1621009529074,"results":"91","hashOfConfig":"90"},{"size":16893,"mtime":1620814281939,"results":"92","hashOfConfig":"90"},{"size":2238,"mtime":1621010165111,"results":"93","hashOfConfig":"90"},{"size":3161,"mtime":1621007749442,"results":"94","hashOfConfig":"90"},{"size":2239,"mtime":1621009231661,"results":"95","hashOfConfig":"90"},{"size":2386,"mtime":1621009139983,"results":"96","hashOfConfig":"90"},{"size":3920,"mtime":1621011463098,"results":"97","hashOfConfig":"90"},{"size":5491,"mtime":1621009227029,"results":"98","hashOfConfig":"90"},{"size":6668,"mtime":1620995518401,"results":"99","hashOfConfig":"90"},{"size":2677,"mtime":1621009252327,"results":"100","hashOfConfig":"90"},{"size":6439,"mtime":1621011498411,"results":"101","hashOfConfig":"90"},{"size":3542,"mtime":1621011511662,"results":"102","hashOfConfig":"90"},{"size":4284,"mtime":1621009285965,"results":"103","hashOfConfig":"90"},{"size":5746,"mtime":1620828456120,"results":"104","hashOfConfig":"90"},{"size":5425,"mtime":1620828456056,"results":"105","hashOfConfig":"90"},{"size":2275,"mtime":1620828456208,"results":"106","hashOfConfig":"90"},{"size":569,"mtime":1620989719604,"results":"107","hashOfConfig":"90"},{"size":1038,"mtime":1620828456048,"results":"108","hashOfConfig":"90"},{"size":16988,"mtime":1621007799557,"results":"109","hashOfConfig":"90"},{"size":2167,"mtime":1620828456048,"results":"110","hashOfConfig":"90"},{"size":3167,"mtime":1620828456044,"results":"111","hashOfConfig":"90"},{"size":2207,"mtime":1621007893559,"results":"112","hashOfConfig":"90"},{"size":3914,"mtime":1621009638378,"results":"113","hashOfConfig":"90"},{"size":200,"mtime":1620828456192,"results":"114","hashOfConfig":"90"},{"size":1271,"mtime":1620828907172,"results":"115","hashOfConfig":"90"},{"size":1171,"mtime":1620828456116,"results":"116","hashOfConfig":"90"},{"size":13004,"mtime":1620828886368,"results":"117","hashOfConfig":"90"},{"size":2185,"mtime":1620828456048,"results":"118","hashOfConfig":"90"},{"size":324,"mtime":1620828499098,"results":"119","hashOfConfig":"90"},{"size":3469,"mtime":1621011412044,"results":"120","hashOfConfig":"90"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},"17yvwg",{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"123"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"123"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"123"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},"1pgtk6u",{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"183"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"183"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"224","usedDeprecatedRules":"183"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"183"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/index.js",[],["248","249"],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/App.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/LandingPage.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/MedCenterPage.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/BloodDetailPage.js",["250"],"import React, { useEffect } from 'react';\nimport { Table, Card, Button } from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addBooking, fetchBloodbyId } from '../appStore/_actions/BloodBankAction';\nimport { viewPageAction } from '../appStore/_actions/userAction';\n//import { useAuth0 } from \"@auth0/auth0-react\";\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom'\nimport Loading from '../components/Loading';\nexport default function BloodDetailPage(props) {\n    /*\nTASK\n    ====\n    1.  Use useEffect to fetch bcDetail with id equal to id in props.match.params.bgId \n    2.  Use bcDetail.bg to fetch bcDetailPage Data where bg === req.body.bcDetail.bg\n    3.  Display bcDetailPage Data in tables\n    */\n\n    let history = useHistory();\n    const dispatch = useDispatch()\n    const bgId = props.match.params.bgId;\n    // const stateUser = useSelector(state => state.UserReducer.user);\n    // const booking = useSelector(state => state.BloodBankReducer.booking);\n\n    //const { user, loginWithRedirect } = useAuth0;\n    const [user, setUser] = useState({\n        users_id: 1,\n        email: 'talk2abdulhafiz@gmail.com'\n    })\n    useEffect(() => {\n        dispatch(fetchBloodbyId(bgId))\n    }, [dispatch, bgId])\n\n    const bcDetail = useSelector(state => state.BloodBankReducer.bcDetail);\n    const bgDetail = useSelector(state => state.BloodBankReducer.bgDetail);\n\n\n    const bookingHandler = (e) => {\n        const id = e.target.id;\n        console.log({ bcDetail: bcDetail[id], user: user, bgDetail: bgDetail[id] })\n        if (user) {\n            dispatch(addBooking(user.users_id, bcDetail[id], bgDetail[id]))\n                .then(response => {\n                    if (response.payload) {\n                        dispatch(viewPageAction('booking'))\n                        history.push('/testPage')\n                        alert('Booked Successfully')\n\n                    }\n                }\n                )\n        }\n        else {\n            //      loginWithRedirect()\n        }\n    }\n    return (\n        <div className=' container mt-5 mb-5' >\n            <div style={{ height: '100px' }}></div>\n\n            {bgDetail.length === 0 & bcDetail.length === 0 ?\n                <Loading />\n                :\n                bgDetail.length > 0 & bcDetail.length === 0 ?\n                    <h2 className='text-danger text-center mb-3 font-weight-bold'>\n                        Sorry!! No  Available {bgDetail[0].bg}<sup>{bgDetail[0].rhd}</sup> Blood Group....</h2>\n                    :\n                    < Card className='text-danger d-flex justify-content-center align-items-center' >\n                        <h2 className='text-danger text-center mb-3 font-weight-bold'> </h2>\n\n                        <h1 className='text-center font-weight-bolder text-danger' >Available {bgDetail[0].bg}<sup>{bgDetail[0].rhd}</sup> Blood Group</h1>\n\n                        <Table className='text-danger' bordered hover striped>\n                            <thead>\n                                <tr>\n\n                                    <th>Center Name</th>\n                                    <th>Location</th>\n                                    <th>Qantity</th>\n                                    <th>Payment Status</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {bcDetail.map((bg, index) => {\n                                    return (\n                                        < tr key={index}>\n                                            <td>{bg.centername}</td>\n                                            <td>{bg.loclga} L.G.A,<br />{bg.locstate} State</td>\n                                            <td>{bg.qty}</td>\n                                            <td >\n                                                <Button\n                                                    id={index}\n                                                    onClick={bookingHandler}\n                                                    className='ml-2 text-light bg-danger font-weight-bold'>Book Now</Button>\n\n                                            </td>\n                                        </tr>\n                                    )\n                                })\n\n                                }\n                            </tbody>\n                        </Table>\n                    </Card >\n            }\n        </div >\n    )\n}\n","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/Footer.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/SearchDonor.js",["251","252"],"import React, { useState } from 'react';\nimport { Table, Card, } from 'reactstrap';\nimport { useDispatch, useSelector } from \"react-redux\";\n//import { searchDonor, } from '../appStore/_actions/userAction';\nimport Loading from '../components/Loading';\nimport SearchBar from '../components/SearchBar';\n\n\n\n\n\nfunction SearchDonor() {\n\n\n    const bcDetail = useSelector(state => state.BloodBankReducer.bcDetail);\n\n    const bgDetail = useSelector(state => state.BloodBankReducer.bgDetail);\n\n    // const dispatch = useDispatch()\n\n    const searchHandler = (value, category) => {\n        console.log(value)\n\n        // const dataToSubmit = {\n        //     user_loc_state: searcText.loc_state,\n        //     loc_lga: searcText.loc_lga,\n        // }\n        // dispatch(completeRegistration(dataToSubmit))\n        // console.log(dataToSubmit)\n        // dispatch(searchDonor(dataToSubmit))\n        // .then(response => {\n        //     if (response.payload.success)\n        //         alert('Congratulations! You have successfully registered with 9jaBloodbank')\n        // })\n    }\n\n\n    return (\n        <div className=' container mt-5 mb-5'>\n            <div style={{ height: '100px' }}></div>\n\n\n            <SearchBar bGsearchHandler={filter => searchHandler(filter, 'bloodgroup')} locSearchHandler={filter => searchHandler(filter, 'location')} />\n\n\n            <div style={{ height: '50px' }}></div>\n            {\n                !bgDetail.length ?\n                    <Loading />\n                    :\n                    bgDetail &&\n                    <Card className='text-danger d-flex justify-content-center align-items-center' >\n                        <h2 className='text-danger text-center mb-3 font-weight-bold'> </h2>\n\n                        {/* <h1 className='text-center font-weight-bolder text-danger' >Available {bgDetail[0].bg}<sup>{bgDetail[0].rhd}</sup> Blood Group</h1> */}\n\n                        <Table className='text-danger' bordered hover striped>\n                            <thead>\n                                <tr className='text-center'>\n                                    <th >Donor Name</th>\n                                    <th>Location</th>\n                                    <th>Phone</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {bcDetail.map((bg, index) => {\n                                    return (\n                                        < tr key={index} className='text-center'>\n                                            <td>{bg.centername}</td>\n                                            <td>{bg.loclga} L.G.A,<br />{bg.locstate} State</td>\n                                            <td>{bg.qty}</td>\n                                            {/* <td >\n                                                <Button\n                                                    id={index}\n                                                    onClick={bookingHandler}\n                                                    className='ml-2 text-light bg-danger font-weight-bold'>Book Now</Button>\n\n                                            </td> */}\n                                        </tr>\n                                    )\n                                })\n\n                                }\n                            </tbody>\n                        </Table>\n                    </Card >\n            }\n        </div >\n    )\n}\n\nexport default SearchDonor\n","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/NavBar.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/Dashboard/UserDashBoard.js",["253"],"// src/views/profile.js\nimport React, { useEffect, useState } from \"react\";\n// import { useAuth0 } from \"@auth0/auth0-react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { checkifUserExist } from '../../appStore/_actions/userAction'\nimport RegCompletion from \"./RegCompletion\";\nimport Profile from \"./Profile\";\nimport BookingPage from \"./BookingPage\";\nimport PaymentPage from \"./PaymentPage\";\nimport DashBoardMenu from \"./DashBoardMenu\";\nimport Loading from '../../components/Loading.js'\nimport { readBooking } from \"../../appStore/_actions/BloodBankAction\";\n\n\n/*\n=========================\n  USERDASHBOARD PAGE\n=========================\n              Tasks\n             ========\n             1. After successful logIn/SignUp from Auth0 or Firebase this page is called\n             2. Use User Identity Info from Auth0 or Firebase to check if user already already exist in DB.\n                if User Exist in DB:\n                {\n                    Fetch Full User info from DB and DisplayUserProfile User Profile Page.\n                    HINTS:\n                    1.  use dispatch(checkifUserExist(user)) to check if user Exist in DB\n                        &&  if(Exist):\n                            Fectch full User info from DB\n                    2.  Else use 'UserExist' value in redux to displayUserProfile Registration Completion page\n                }\n                else:\n                    DisplayUserProfile Registration Completion Page to collect full user profile.\n                      */\nexport default function UserDashBoard() {\n\n    const stateViewPage = useSelector(state => state.UserReducer.ViewPage);\n    const stateUser = useSelector(state => state.UserReducer.user);\n    const stateUserExist = useSelector(state => state.UserReducer.UserExist);\n\n    const [user, setUser] = useState({ users_Id: 1, email: 'talk2abdulhafiz@gmail.com', })\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (user) {\n            dispatch(checkifUserExist(user))\n                .then(response => {\n                    if (response.payload.userExist) {\n                        dispatch(readBooking(user))\n                            .then(booking => console.log(response.payload))\n                    }\n\n                })\n        }\n    }, [dispatch, user])\n\n\n    const displayUserProfile = () => {\n        return (< div >\n            <h2 className='text-danger text-center mb-3 font-weight-bold'> <span className='text-uppercase' >\n                {stateUser[0].username}</span> Welcome to 9jaBloodBank\n                            </h2>\n\n            <div className='d-flex border border-danger'>\n                <DashBoardMenu user={stateUser[0]} />\n                <div className='d-flex justify-content-center border border-danger flex-grow-1'>\n\n\n                    {/* <DashBoardView user_id={stateUser[0].users_id} user={stateUser[0]} bg={stateUser[0]} /> */}\n                    {stateViewPage === 'booking' ?\n                        // user & userExist\n                        <BookingPage user_id={stateUser[0].users_id} />\n                        :\n                        stateViewPage === 'payment'\n                            ?\n                            <PaymentPage user={stateUser[0]} />\n                            :\n                            <Profile user={stateUser[0]} bg={stateUser[0]} />\n                    }\n                </div >\n            </div>\n        </div >\n        )\n    }\n\n\n\n\n    return (\n        <div className='mt-5 container'>\n            <div style={{ height: '100px' }}></div>\n            {\n                !stateUserExist & stateUser ?\n                    < RegCompletion user={stateUser[0]} />\n                    :\n                    !stateUser ?\n\n                        <Loading />\n                        :\n                        stateUser.length > 0 &&\n                        displayUserProfile()\n\n\n            }\n\n        </div>\n    )\n}\n\n\n","/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/components/Loading.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/Dashboard/BookingPage.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/Dashboard/Profile.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/Dashboard/RegCompletion.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/Dashboard/DashBoardMenu.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/views/Dashboard/PaymentPage.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/components/CardList.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/components/Auth0LoginButton.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/components/SearchBar.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/components/Auth0LogoutButton.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/appStore/_actions/BloodBankAction.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/appStore/_actions/userAction.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/components/Card.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/appStore/_actions/types.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/data.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/appStore/Store.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/appStore/_reducers/index.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/appStore/_reducers/BloodBankReducer.js",[],"/home/abdulhafiz/PROJECTS/HEROKU_BBMS/client/src/appStore/_reducers/userReducer.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/index.js",[],["254","255"],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/App.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/data.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/admin/LogIn.js",["256"],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/admin/ChangePwd.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/classes/AllClassSection.js",["257"],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/classes/AllClasses.js",["258","259","260"],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/classes/ClassRoom.js",["261","262","263"],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/classes/AddClassSectionForm.js",["264"],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/classes/addClassForm.js",["265","266"],"import React, { useState, useEffect } from 'react';\nimport { Table, Card, Form, Label, Input, Button, FormGroup } from 'reactstrap';\nimport { dbServices } from '../../services/services';\nimport Header from '../Header';\nimport SideBar from '../SideBar/SideBar';\n\n\n\nfunction AddclassClassesForm(props) {\n    const sectionName = props.match.params.sectionname.toLocaleLowerCase()\n    console.log(sectionName)\n    const [Classes, setClasses] = useState([])\n    const [myClass, setmyClass] = useState({ class_name: '', teacher_name: '', })\n\n    useEffect(() => {\n        //fetchAllClassess\n        dbServices.fetchAllClasses(sectionName, setClasses, Classes)\n    }, [])\n\n    const changeHandler = (e) => {\n        const value = e.target.value;\n        const upperCaseValue = value.toLocaleUpperCase()\n        setmyClass({\n            ...myClass,\n            [e.target.name]: upperCaseValue\n        })\n\n    }\n    const AddmyClassHandler = () => {\n        if (myClass.class_name === '' | myClass.teacher_name === '') {\n            alert(`\"Class Name\" or \"Class Teacher's Name\" cannot be empty `)\n        }\n        else {\n\n            let checkConflictArray = Classes.filter(Class => Class.class_name === myClass.class_name)\n\n            if (checkConflictArray.length === 0) {\n                setClasses(Classes.concat(myClass))\n            }\n            else {\n                console.log({ checkConflictArray })\n                alert(`${myClass.class_name} class already added`)\n            }\n        }\n    }\n    // const EditHandler = (e) => {\n    //     const currentIndex = e.target.id\n\n    //     let tempStateData = [...Classes] //Create a dummy array variable to hold Classes \n    //     setmyClass(tempStateData[currentIndex])\n    //     db.get(sectionName)\n    //         .then(doc => {\n    //             db.put({\n    //                 _id: sectionName,\n    //                 _rev: doc._rev,\n    //                 Classes: Classes,\n    //                 no_of_classes: 0\n    //             }).then(result => {\n\n    //                 // setClasses(tempStateData)\n    //                 //settextChange(!textChange) //this is use to update state(causes change to DOM) so a re-render occur\n    //                 //setClasses(Classes.concat(myClass))\n    //             })\n    //         })\n    // }\n    const DeleteHandler = (e) => {\n        const currentIndex = e.target.id\n        let newClasses = [...Classes];\n        newClasses.splice(currentIndex, 1)\n        setClasses(newClasses)\n\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        if (Classes.length === 0) {\n            alert(`Atleast one myClass must be must added`)\n        }\n        else {\n            //saveClasses to DB\n            dbServices.saveClasses(sectionName, Classes)\n        }\n    }\n\n    return (\n        <div className='d-flex flex-row' >\n\n            <div className='container d-flex justify-content-center align-items-center flex-column '>\n                <Header />\n                <h4 className='justify-self-center text-center text-success mt-4 font-weight-bold' > {sectionName.toLocaleUpperCase()} SECTION</h4>\n\n                <h4 className='justify-self-center text-center text-success mt-4 font-weight-bold' >Register Class(es)</h4>\n                <Card className='container shadow-lg p-3 mb-5 d-flex'>\n                    <Form className='d-flex   flex-column '>\n                        <FormGroup className='d-flex flex-row mr-0 justify-content-start'>\n                            <Label for=\"username\" className='font-weight-bold w-25 text-success'>Class Name:</Label>\n                            <Input type=\"text\" name=\"class_name\" value={myClass.class_name} onChange={changeHandler} placeholder=\"e.g: Nursery 1, Basic 2, JSS 3, SSS 1 \" />\n                        </FormGroup >\n                        <FormGroup className='d-flex flex-row ' >\n                            <Label for=\"username\" className='font-weight-bold w-25 text-success'>Class Teacher Name:</Label>\n                            <Input type=\"text\" name=\"teacher_name\" value={myClass.teacher_name} onChange={changeHandler} placeholder=\"e.g Ustaz Zulqarnain\" />\n                        </FormGroup>\n                    </Form>\n                    <div className='d-flex align-self-center justify-content-lg-center '>\n                        <Button className='text-light font-weight-bold'\n                            color='success'\n                            onClick={AddmyClassHandler}>Add Class</Button>\n                    </div>\n                </Card>\n\n\n                <Table className='text-success' bordered hover striped>\n                    <thead>\n                        <tr>\n\n                            <th>Class Name</th>\n                            <th>Class Teacher Name</th>\n                            <th>Number of Subjects Registered</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {Classes.map((myClass, index) => {\n                            return (\n                                < tr key={index}>\n                                    <td>{myClass.class_name}</td>\n                                    <td>{myClass.teacher_name}</td>\n                                    <td>0</td>\n                                    <td >\n                                        {/* <Button className='ml-2 text-light bg-success font-weight-bold'\n                                            id={index}\n                                            onClick={EditHandler}\n                                        >\n                                            Edit\n                                        </Button> */}\n                                        <Button className='ml-2 text-light bg-success font-weight-bold'\n                                            id={index}\n                                            onClick={DeleteHandler}\n                                        >\n                                            Delete\n                                        </Button>\n\n\n                                    </td>\n                                </tr>\n                            )\n                        })\n\n                        }\n                    </tbody>\n                </Table>\n                <div className='d-flex align-self-center justify-content-lg-center '>\n                    <Button className='text-light font-weight-bold'\n                        color='success'\n                        onClick={onSubmit}>Submit</Button>\n                </div>\n            </div>\n\n        </div>\n\n\n\n    )\n}\n\nexport default AddclassClassesForm\n","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/classes/GotoClass.js",["267","268"],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/students/ManageStudent.js",["269","270","271"],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/subjects/ManageSubject.js",["272","273","274"],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/result/ResultsGenerator.js",["275","276"],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/result/Results.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/classes/ScoreSheetTables.js",["277","278"],"import React, { useState, useEffect } from \"react\";\nimport Loading from '../reusables/Loading'\nimport { Table, Input, Button } from 'reactstrap';\nimport { dbServices } from \"../../services/services\";\n\nconst ScoreSheetTables = ({ currentSubject, ClassName }) => {\n\n    const [scoreDisplayData, setScore] = useState([])\n    const [textChange, settextChange] = useState(true)\n\n\n    useEffect(() => {\n        let tempData = [];\n        dbServices.fetchScoreData(ClassName, currentSubject, setScore, tempData)\n    }, [currentSubject])\n\n    const changeHandler = async (e) => {\n        let value = parseInt(e.target.value, 10) || 0;  //assign an integer to value OR 0 if NaN\n        let currentIndex = parseInt(e.target.id, 10) //assign an integer to value OR 0 if NaN\n        console.log(currentIndex)\n        console.log(scoreDisplayData)\n        let tempStateData = scoreDisplayData //Create a dummy array variable to hold scoreDisplayData \n\n        tempStateData[currentIndex][e.target.name] = value //NB: scoreDisplayData  === [{ fName: element.fName, sName: element.sName, Test1: 0, Test2: 0, Exam: 0 }]\n        setScore(tempStateData)\n\n        settextChange(!textChange) //this is use to update state(causes change to DOM) so a re-render occur\n    }\n\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        if (scoreDisplayData.length === 0) {\n            alert(`Atleast 1 'Student's Score' must be must added`)\n        }\n\n        //If score is not enter for any student\n        else if (scoreDisplayData.length !== 0) {\n            let checkifAllScoreFieldArray = scoreDisplayData.filter(\n                // To check a key is available in an object === obj.hasOwnProperty(\"key\")\n                (element) => !element.hasOwnProperty(\"Test1\") || !element.hasOwnProperty(\"Test2\") || !element.hasOwnProperty(\"Exam\") || !element.hasOwnProperty(\"BForward\")\n            )\n            console.log(checkifAllScoreFieldArray)\n\n            if (checkifAllScoreFieldArray.length > 0) {\n                alert(\"'Test 1', Test 2' or 'Exam' or 'Total B/Forward'\" + 'for ' + checkifAllScoreFieldArray[0].fName + \" \" + checkifAllScoreFieldArray[0].sName + ' cannot be empty')\n            }\n            else {\n                //save scoreSheet to DB\n                dbServices.saveScoreSheet(ClassName, currentSubject, scoreDisplayData, settextChange, textChange)\n            }\n\n        }\n\n\n    }\n    return (\n        <div className='d-flex justify-content-center align-items-center flex-column '>\n\n            {scoreDisplayData.length === 0 ?\n                <div></div>\n                :\n                scoreDisplayData === undefined ?\n                    <Loading /> :\n\n                    <div >\n\n                        <Table className='text-success' bordered hover striped>\n                            <thead>\n                                <tr>\n                                    <th>STUDENT NAME </th>\n                                    <th>TEST 1</th>\n                                    <th>TEST 2</th>\n                                    <th>EXAM</th>\n                                    <th>TOTAL B/FORWARD</th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {\n                                    scoreDisplayData.length !== 0 &&\n                                    scoreDisplayData.map((scoreToDisplay, index) => {\n\n                                        return (\n                                            < tr key={index}>\n                                                <td>{scoreToDisplay.fName} {scoreToDisplay.sName}</td>\n                                                <td>\n                                                    <Input type=\"number\" id={index} name=\"Test1\" value={scoreToDisplay.Test1} onChange={changeHandler} placeholder=\"TEST 1 SCORE\" />\n                                                </td>\n\n                                                <td>\n                                                    <Input type=\"number\" id={index} name=\"Test2\" value={scoreToDisplay.Test2} onChange={changeHandler} placeholder=\"TEST 2 SCORE\" />\n                                                </td>\n                                                <td>\n                                                    <Input type=\"number\" id={index} name=\"Exam\" value={scoreToDisplay.Exam} onChange={changeHandler} placeholder=\"EXAM SCORE\" />\n                                                </td>\n                                                <td>\n                                                    <Input type=\"number\" id={index} name=\"BForward\" value={scoreToDisplay.BForward} onChange={changeHandler} placeholder=\"TOTAL B/FORWARD\" />\n                                                </td>\n                                            </tr>\n                                        )\n                                    })}\n                            </tbody>\n                        </Table >\n                        <div className='d-flex align-self-center justify-content-lg-center '>\n                            <Button className='text-light font-weight-bold'\n                                color='success'\n                                onClick={onSubmit}>Save Score Data</Button>\n                        </div>\n                    </div>\n            }\n        </div >\n\n\n    );\n};\n\nexport default ScoreSheetTables;","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/subjects/SubjectTable.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/Header.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/cards/CardList.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/services/services.js",["279"],"import db from '../db'\n\nexport const dbServices = {\n    //FETCH OR GET REQUESTS\n    getResultData: (setCurrentData, setScore, setStudent, setSubjects) => {\n\n        db.get('resultData')\n            .then(result => {\n                if (result) {\n                    //is resultData available in db store it in State\n                    setCurrentData(result.resultData)\n                    //fetch classroom Data from db and save in State\n                    db.get(result.resultData.selectedClass.toLocaleLowerCase()) // e.g nursery 1 === result.resultData.selectedClass.toLocaleLowerCase()\n                        .then(res => {\n                            // result === {subjects: Array(3), students: Array(2), scores: result.scores, _id: \"basic 1\", _rev: \"11-65f4389ac05f9a59a734892a9aff5b10\"}\n                            setScore(res.scores);\n                            //      scores: {\n                            //     eng: [{ fName, sName, Test1, Test2, Exam }]\n                            //     math:[{fName,sName,Test1,Test2,Exam}]\n                            // }\n                            setStudent(res.students);\n                            // students: Array(3) i.e students = [{fName,sName,gender}]\n                            setSubjects(res.subjects)\n                            // subjects: Array(3) i.e subjects = [{subjectName:\"ENGLISH STUDIES\", teacherName:\"MRS. HAFSOH\"}, eng}]\n                        })\n                }\n            })\n            .catch(err => console.log(err))\n    },\n\n    getResultGeneratorData: (ResultGenData, setResultGenData, tempClassValue) => {\n        db.get('Section')\n            .then(result => {\n                setResultGenData({ ...ResultGenData, noOfClasses: result.category.length })\n                result.category.forEach((element, index, array) => {\n                    db.get(element.cat_name.toLocaleLowerCase(),\n                        (err, res) => {\n                            if (res) {\n                                tempClassValue = tempClassValue.concat(res.Classes)\n                                setResultGenData({ ...ResultGenData, noOfClasses: index + 1, class: tempClassValue, selectedClass: tempClassValue[0].class_name })\n\n                            }\n                            if (err) {\n                                return (err)\n                            }\n\n                        }\n                    )\n\n                })\n\n            })\n    },\n\n    getSubjects: (className, setAllmySubjects, AllmySubjects) => {\n        db.get(className)\n            .then(result => {\n                if (result.subjects)\n                    setAllmySubjects(AllmySubjects.concat(result.subjects))\n            })\n            .catch(err => {\n                if (err) {\n                    console.log(err)\n                }\n            })\n    },\n\n    getStudentsAndScore: (ClassName, setAllmyStudent, AllmyStudent, setScore) => {\n        db.get(ClassName)\n            .then(result => {\n                if (result.students) {\n                    setAllmyStudent(AllmyStudent.concat(result.students))\n                }\n                if (result.scores) {\n                    setScore(result.scores)\n                }\n            })\n            .catch(err => {\n                if (err) {\n                    setAllmyStudent([])\n                }\n            })\n    },\n\n    fetchAllClasses: (sectionName, setClasses, Classes) => {\n        db.get(sectionName)\n            .then(result => {\n                console.log(result.Classes)\n                setClasses(Classes.concat(result.Classes))\n            })\n            .catch(err => {\n                if (err) {\n                    console.log({ afterError: Classes })\n                    setClasses([])\n                    console.log(err)\n                }\n            })\n    },\n\n    fetchAllSections: (setClassSection, ClassSection) => {\n        db.get('Section')\n            .then(result => {\n                console.log(result.category)\n                setClassSection(ClassSection.concat(result.category))\n            })\n            .catch(err => {\n                if (err) {\n                    setClassSection([])\n                    console.log(err)\n                    console.log({ afterError: ClassSection })\n                }\n            })\n    },\n\n    fetchStudentsAndSubjectsAnsScores: (ClassName, setstudents, setAllSubject, setScore, allSubjects) => {\n        db.get(ClassName)\n            .then(result => {\n                if (result.students)\n                    setstudents(result.students)\n                if (result.subjects) {\n\n                    setAllSubject({ ...allSubjects, subjects: result.subjects, currentSubject: result.subjects[0].subjectName, })\n                }\n                if (result.scores) {\n                    setScore({ scores: result.scores[allSubjects.currentSubject] })\n                }\n\n            })\n            .catch(err => {\n                if (err) {\n                    console.log(err)\n                }\n            })\n    },\n\n    fetchScoreData: (ClassName, currentSubject, setScore, tempData) => {\n        db.get(ClassName)\n            .then(result => {\n                console.log(result)\n                if (currentSubject) {\n                    //CURRENT SUBJECT IS NOT EMPTY\n                    console.log(currentSubject)\n                    if (result.scores[currentSubject]) {\n                        //IF THERE IS SCORE FOR THAT CURRENT SUBJECT\n                        if (result.students.length > result.scores[currentSubject].length) {\n                            //IF NUMBER OF STUDENTS IS INCREASED UNDER MANAGEMENT STUDENT PAGE ADD THE NEW STUDENTS TO THE LIST OF scoreToDisplay\n                            console.log(\"scores available for this subject\")\n                            setScore(result.scores[currentSubject].concat(result.students.slice(result.scores[currentSubject].length)))\n                        }\n                        if (result.scores[currentSubject].length === result.students.length) {\n                            //IF NO ADDITIONAL STUDENTS THEN DISPLAY DB DATA FOR CURRENT SUBJECT\n                            setScore(result.scores[currentSubject])\n                        }\n                    }\n                    else if (!result.scores[currentSubject]) {\n                        //IF SCORES DOES NOT EXIST IN DB (FIRST INSTANCE) FOR CURRENT SUBJECT THEN CREATE THE LIST BELOW BASE ON STUDENTS IN DB ALREADY\n                        result.students.forEach((element, index) => {\n                            tempData = tempData.concat({ fName: element.fName, sName: element.sName, Test1: 0, Test2: 0, Exam: 0, BForward: 0 })\n                        })\n                        setScore(tempData)\n                    }\n                }\n                if (!result.scores) {\n                    //IF SCORES DOES NOT EXIST AT ALL IN DB (FIRST INSTANCE) THEN CREATE THE LIST BELOW BASE ON STUDENTS IN DB ALREADY\n                    result.students.forEach((element, index) => {\n                        tempData = tempData.concat({ fName: element.fName, sName: element.sName, Test1: 0, Test2: 0, Exam: 0, BForward: 0 })\n                    })\n                    setScore(tempData)\n                }\n            }).catch(err => {\n                if (err) {\n                    console.log(err)\n                }\n            })\n    },\n\n    changePasswordinDb: (profile) => {\n        db.get('userId')\n            .then(doc => {\n                db.put({\n                    _id: 'userId',\n                    _rev: doc._rev,\n                    username: doc.username,\n                    password: profile.password\n                }).then(result => {\n                    alert(\"Password Successfully Changed\")\n                    window.location = '/'\n                    console.log(result)\n                })\n                    .catch(function (err) {\n                        console.log(err)\n                    })\n            }).catch(getResultError => {\n                console.log(\"getResult Error: \" + getResultError)\n            })\n    },\n\n    initalizeAdminCredentials: () => {\n        db.get('userId')\n            .then(doc => {\n                db.put({\n                    _id: 'userId',\n                    _rev: doc._rev,\n                    username: doc.username,\n                    password: doc.password\n                }).then(result => { console.log(result) })\n                    .catch(function (err) {\n                        console.log(err)\n                    })\n            }).catch(getResultError => {\n                if (getResultError)\n                    db.put({\n                        _id: 'userId',\n                        username: 'admin',\n                        password: 'admin'\n                    }).then(result => { console.log(result) })\n                        .catch(function (err) {\n                            console.log(err)\n                        })\n            })\n\n    },\n\n    authenticateAdmin: (profile) => {\n\n        db.get('userId').\n            then(result => {\n                console.log(result)\n                if (profile.username === result.username & profile.password === result.password) {\n                    window.location = '/allclassSection'\n                }\n                else {\n                    alert('Wrong username or Passsword')\n                }\n            }).catch(function (err) {\n                console.log(err)\n            });\n\n    },\n\n    //API POST REQUESTS\n    saveScoreSheet: (ClassName, currentSubject, scoreDisplayData, settextChange, textChange) => {\n        db.get(ClassName)\n            .then(doc => {\n                db.put({\n                    _id: doc._id,\n                    _rev: doc._rev,\n                    subjects: doc.subjects,\n                    students: doc.students,\n                    scores: {\n                        ...doc.scores,\n                        [currentSubject]: scoreDisplayData\n                    }\n                }).then(result => {\n                    if (result) {\n                        settextChange(!textChange) //this is use to only redisplay the screen for the update\n                        alert('Scores Saved Successfully')\n                    }\n                })\n                    .catch(function (err) {\n                        if (err)\n                            console.log('not updated')\n                    });\n            }).catch(err => {\n                if (err)\n                    db.put({\n                        _id: ClassName,\n                        scores: {\n                            [currentSubject]: scoreDisplayData,\n                        }\n                    }).then(result => {\n                        if (result) {\n                            settextChange(!textChange)\n                            alert('Scores Saved Successfully')\n                        }\n                    }).catch(function (err) {\n                        if (err)\n                            console.log('not posted');\n                    });\n            })\n    },\n\n    saveClasses: (sectionName, Classes) => {\n        db.get(sectionName)\n            .then(doc => {\n                db.put({\n                    _id: sectionName,\n                    _rev: doc._rev,\n                    Classes: Classes,\n                    no_of_classes: 0\n                }).then(result => {\n                    if (result)\n                        window.location = `/${sectionName}/classes`\n                }).catch(function (err) {\n                    if (err)\n                        console.log('not updated')\n                });\n            }).catch(err => {\n                if (err)\n                    db.put({\n                        _id: sectionName,\n                        Classes: Classes,\n                        no_of_classes: 0\n                    }).then(result => {\n                        if (result)\n                            window.location = `/${sectionName}/classes`\n                    }).catch(function (err) {\n                        if (err)\n                            console.log('not posted');\n                    });\n            })\n    },\n\n    saveAllSection: (ClassSection) => {\n        db.get('Section')\n            .then(doc => {\n                db.put({\n                    _id: 'Section',\n                    _rev: doc._rev,\n                    category: ClassSection,\n                    no_of_classes: 0\n                }).then(result => {\n                    if (result)\n                        window.location = '/allclassSection'\n                }).catch(function (err) {\n                    if (err)\n                        console.log('not updated')\n                });\n            }).catch(err => {\n                if (err)\n                    db.put({\n                        _id: 'Section',\n                        category: ClassSection,\n                        no_of_classes: 0\n                    }).then(result => {\n                        if (result)\n                            window.location = '/allclassSection'\n                    }).catch(function (err) {\n                        if (err)\n                            console.log('not posted');\n                    });\n            })\n    },\n\n    dbUpdateSubject: (className, AllmySubjects) => {\n        db.get(className)\n            .then(doc => {\n                db.put({\n                    _id: className,\n                    _rev: doc._rev,\n                    scores: doc.scores,\n                    students: doc.students,\n                    subjects: AllmySubjects,\n                }).then(result => {\n                    if (result)\n                        console.log(result)\n                    window.location = `/${className}/classroom`\n                }).catch(function (err) {\n                    if (err)\n                        console.log('not updated')\n                });\n            }).catch(err => {\n                if (err)\n                    db.put({\n                        _id: className,\n                        subjects: AllmySubjects,\n                    }).then(result => {\n                        if (result)\n                            console.log(result)\n                        window.location = `/${className}/classroom`\n                    }).catch(function (err) {\n                        if (err)\n                            console.log('not posted');\n                    });\n            })\n    },\n\n    saveStudents: (ClassName, AllmyStudent,) => {\n        db.get(ClassName)\n            .then(doc => {\n                db.put({\n                    _id: ClassName,\n                    _rev: doc._rev,\n                    subjects: doc.subjects,\n                    scores: doc.scores,\n                    students: AllmyStudent\n                }).then(result => {\n                    if (result)\n                        window.location = `/${ClassName}/classroom`\n                }).catch(function (err) {\n                    if (err)\n                        console.log('not updated')\n                });\n            }).catch(err => {\n                if (err)\n                    db.put({\n                        _id: ClassName,\n                        students: AllmyStudent,\n                    }).then(result => {\n                        if (result)\n                            window.location = `/${ClassName}/classroom`\n                    }).catch(function (err) {\n                        if (err)\n                            console.log('not posted');\n                    });\n\n            })\n\n    },\n\n    saveresultData: (Data) => {\n        db.get('resultData')\n            .then(doc => {\n                db.put({\n                    _id: doc._id,\n                    _rev: doc._rev,\n                    resultData: Data\n                }).then(function (response) {\n                    if (response)\n                        window.location = '/results'\n                }).catch(function (err) {\n                    if (err) {\n                        db.put({\n                            _id: 'resultData',\n                            resultData: Data,\n                        }).then(result => {\n                            if (result) window.location = '/results'\n\n                        }).catch(function (err) {\n                            if (err) console.log('not posted');\n                        });\n                    }\n                });\n\n            })\n    },\n    //UPDATING DB\n    deleteStudentfromScore: (ClassName, Scores,) => {\n        db.get(ClassName)\n            .then(doc => {\n                db.put({\n                    _id: ClassName,\n                    _rev: doc._rev,\n                    subjects: doc.subjects,\n                    students: doc.students,\n                    scores: Scores\n                }).then(function (response) {\n                    if (response)\n                        console.log(\"Done\")\n                }).catch(function (err) {\n                    console.log(err);\n                })\n            })\n    }\n}\n\n\n\n","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/cards/AddingMoreCard.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/cards/AddingCard.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/cards/ManageCard.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/SideBar/SideBar.js",["280"],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/reusables/Loading.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/result/BackPrintBtn.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/result/ResultData.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/result/ResultTables.js",["281"],"import React from 'react'\n\n\nexport const Table = {\n    pysochomotorTale: (pysochomotor) => {\n        return (\n            <table id='doubleTable' className='text-success border' >\n                <thead>\n                    <tr>\n                        <th colSpan=\"6\" className='text-center'>1. PSYCHOMOTOR </th>\n                    </tr>\n                    <tr>\n                        <th className='text-center'></th>\n                        <th className='text-center'>5</th>\n                        <th className='text-center'>4</th>\n                        <th className='text-center'>3</th>\n                        <th className='text-center'>2</th>\n                        <th className='text-center'>1</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        pysochomotor.length !== 0 &&\n                        pysochomotor.map((item, index) => {\n                            return (\n                                < tr key={index}>\n                                    <td style={{ width: '250px' }}>{item}</td>\n                                    <td ></td>\n                                    <td ></td>\n                                    <td ></td>\n                                    <td ></td>\n                                    <td ></td>\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table >\n        )\n    },\n    affectiveDomainTable: (pysochomotor) => {\n        return (\n            <table id='doubleTable' className=' text-success border' >\n                < thead >\n                    <tr>\n                        <th colSpan=\"6\" className='text-center'> 2. AFFECTIVE DOMAIN </th>\n                    </tr>\n                    <tr>\n                        <th className='text-center'></th>\n                        <th className='text-center'>5</th>\n                        <th className='text-center'>4</th>\n                        <th className='text-center'>3</th>\n                        <th className='text-center'>2</th>\n                        <th className='text-center'>1</th>\n                    </tr>\n                </thead >\n                <tbody className='w-100'>\n                    {\n                        pysochomotor.length !== 0 &&\n                        pysochomotor.map((item, index) => {\n                            return (\n                                < tr key={index}>\n                                    <td style={{ width: '250px' }} >{item}</td>\n                                    <td ></td>\n                                    <td ></td>\n                                    <td ></td>\n                                    <td ></td>\n                                    <td ></td>\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table >\n        )\n    },\n    attendanceTable: (attendeance) => {\n        return (\n            <table id='doubleTableminus' className='text-success border ' >\n                <thead>\n                    <tr>\n                        <th colSpan=\"2\" className='text-center'> 3. ATTENDANCE </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        attendeance.length !== 0 &&\n                        attendeance.map((item, index) => {\n                            return (\n                                < tr key={index}>\n                                    <td id='doubleTD'>{item}</td>\n                                    <td id='doubleTD'></td>\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table >\n        )\n    },\n\n    physicalAndHealth: () => {\n        return (\n            <table id='doubleTablePlus' className='text-success border ' >\n                <thead>\n                    <tr>\n                        <th colSpan=\"4\" className='text-center'> 4. PHYSICAL DEVELOPMENT & HEALTH </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    < tr className='text-center'>\n                        <th colSpan=\"2\" id='doubleTD'>HEALTH</th>\n                        <th colSpan=\"2\" id='doubleTD'>WEIGHT</th>\n                    </tr>\n\n                    < tr className='text-center'>\n                        <td id='quarterTD'>Beginning of Term</td>\n                        <td id='quarterTD'>End of Term</td>\n\n                        <td id='quarterTD'>Beginning of Term</td>\n                        <td id='quarterTD'>End of Term</td>\n                    </tr>\n\n                    < tr className='text-right'>\n                        <td id='quarterTD'>m</td>\n                        <td id='quarterTD'>m</td>\n\n                        <td id='quarterTD'>kg</td>\n                        <td id='quarterTD'>kg</td>\n\n                    </tr>\n\n                </tbody>\n            </table >\n        )\n    },\n    keyToRating: (key) => {\n        return (\n            <table id='rating' className=' text-success border' >\n                < thead >\n                    <tr>\n                        <th colSpan=\"2\" className='text-center'> KEY TO RATING </th>\n                    </tr>\n                </thead >\n                <tbody className='w-100'>\n                    {\n                        key.length !== 0 &&\n                        key.map((item, index) => {\n                            return (\n                                < tr key={index}>\n                                    <td >{item}</td>\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table >\n        )\n    },\n\n    keyToGrading: (key) => {\n        return (\n            <table id='grading' className=' text-success border' >\n                < thead >\n                    <tr>\n                        <th colSpan=\"2\" className='text-center'> KEY TO GRADING</th>\n                    </tr>\n                </thead >\n                <tbody className='w-100'>\n                    {\n                        key.length !== 0 &&\n                        key.map((item, index) => {\n                            return (\n                                < tr key={index}>\n                                    <td >{item}</td>\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table >\n        )\n    },\n    performanceTable: (performanceTableLabel, subjects, id, scores, currentData) => {\n        var SumOfFinalPercentage = 0;\n        console.log(subjects.length)\n        return (\n\n            <div style={{ width: '99%' }} >\n                <table id='performanceTABLE' className='text-success text-center w-100 border' >\n                    <thead>\n                        <tr>\n                            <th colSpan={performanceTableLabel.length + 1} className='text-center'> 5. PERFORMANCE IN SUBJECTS (COGNITIVE) </th>\n                        </tr>\n                    </thead>\n\n                    <tbody >\n                        <tr>\n                            <td></td>\n                            {\n                                performanceTableLabel.map((label, labIndex) => {\n                                    return (\n                                        <td key={labIndex}>{label}</td>\n                                    )\n                                })\n                            }\n                        </tr>\n                        {\n                            subjects.length !== 0 &&\n                            subjects.map((subject, subIndex) => {\n                                if (!scores[subject.subjectName][id]) {\n                                    window.location = `/${currentData.selectedClass}/classroom/${subject.subjectName}`\n                                }\n                                else {\n                                    if (!(scores[subject.subjectName][id].hasOwnProperty(\"Test1\")) || !(scores[subject.subjectName][id].hasOwnProperty(\"Test2\")) || !(scores[subject.subjectName][id].hasOwnProperty(\"Exam\"))) {\n                                        alert(\"ERROR OCCURED! Please enter score for all students on every subject score sheet\")\n                                    }\n                                    else {\n                                        let IntparsedExam = parseInt(scores[subject.subjectName][id].Exam, 10) || 0\n                                        let IntparsedTest1 = parseInt(scores[subject.subjectName][id].Test1, 10) || 0\n                                        let IntparsedTest2 = parseInt(scores[subject.subjectName][id].Test2, 10) || 0\n                                        let termTotal = IntparsedTest1 + IntparsedTest2 + IntparsedExam\n                                        let IntparsedBForward = parseInt(scores[subject.subjectName][id].BForward, 10) || 0\n                                        let cumulativeTotal = termTotal + IntparsedBForward\n                                        let finalPercentage = cumulativeTotal / 2\n                                        SumOfFinalPercentage = SumOfFinalPercentage + finalPercentage\n                                        return (\n                                            <tr key={subIndex} >\n                                                <td className='text-left'>{subject.subjectName}</td>\n\n                                                {/* Test 1  */}\n                                                <td>{IntparsedTest1}</td>\n\n                                                {/* Test 2 */}\n                                                <td>{IntparsedTest2}</td>\n\n                                                {/* Exam  */}\n                                                <td>{IntparsedExam}</td>\n\n                                                {/* Term Total  */}\n                                                <td>{termTotal}\n                                                </td>\n\n                                                {/* Total B/Forward  */}\n                                                <td>{IntparsedBForward}\n\n                                                </td>\n                                                {/* Cummulative Total  */}\n                                                <td>{cumulativeTotal}\n                                                </td>\n\n                                                {/* Final %  */}\n                                                <td>{finalPercentage}\n                                                </td>\n\n                                                {/* Grade  */}\n                                                <td>{\n                                                    finalPercentage >= 75 ? (\"A\")\n                                                        :\n                                                        finalPercentage >= 60 & finalPercentage <= 74 ? \"B\"\n                                                            :\n                                                            finalPercentage >= 50 & finalPercentage <= 59 ? \"C\"\n                                                                :\n                                                                \"F\"}\n                                                </td>\n                                                <td></td>\n                                            </tr>\n\n                                        )\n                                    }//end of  else let ....\n\n                                }//End of else if (!(scores[subject.subjectName][id].hasOwnProperty(\"Test1\"))) .....\n                            })\n                        }\n\n\n\n\n\n                    </tbody>\n                </table >\n                <div className='d-flex justify-content-end w-100'>\n                    <div className='text-danger font-weight-bold border border-success text-center' style={{ width: '170px' }}>\n                        {/* NOTE: SumOfFinalPercentage/subjects.length(Number of Subject) gives average */}\n                        AVERAGE: {(SumOfFinalPercentage / subjects.length).toPrecision(4)}%\n                        </div>\n                </div>\n\n\n\n            </div >\n\n\n        )\n    }\n}\n\n    // < div className = 'mt-4 w-100 d-flex flex-row justify-content-between' >\n    //     {/* <Label className='font-weight-bold w-25 text-success'>No. of Distinction: {Distinction}</Label> */ }\n    //     < Label className = 'font-weight-bold w-25 text-success' > No.of Credits: {}</Label>\n    //                 <Label className='font-weight-bold w-25 text-success'>No. of Passes:{ }</Label>\n    //                 <Label className='font-weight-bold w-25 text-success'>No. of Failed:{ }</Label>\n    //             </div >","/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/cards/Card.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/db.js",[],"/home/abdulhafiz/PROJECTS/REACT_PROJECTS/afmuc/NEW_AFMUC_HEROKU/client/src/components/NavBar.js",[],{"ruleId":"282","replacedBy":"283"},{"ruleId":"284","replacedBy":"285"},{"ruleId":"286","severity":1,"message":"287","line":26,"column":18,"nodeType":"288","messageId":"289","endLine":26,"endColumn":25},{"ruleId":"286","severity":1,"message":"290","line":1,"column":17,"nodeType":"288","messageId":"289","endLine":1,"endColumn":25},{"ruleId":"286","severity":1,"message":"291","line":3,"column":10,"nodeType":"288","messageId":"289","endLine":3,"endColumn":21},{"ruleId":"286","severity":1,"message":"287","line":41,"column":18,"nodeType":"288","messageId":"289","endLine":41,"endColumn":25},{"ruleId":"282","replacedBy":"292"},{"ruleId":"284","replacedBy":"293"},{"ruleId":"286","severity":1,"message":"294","line":4,"column":8,"nodeType":"288","messageId":"289","endLine":4,"endColumn":14},{"ruleId":"295","severity":1,"message":"296","line":24,"column":8,"nodeType":"297","endLine":24,"endColumn":10,"suggestions":"298"},{"ruleId":"286","severity":1,"message":"299","line":8,"column":8,"nodeType":"288","messageId":"289","endLine":8,"endColumn":15},{"ruleId":"286","severity":1,"message":"294","line":9,"column":8,"nodeType":"288","messageId":"289","endLine":9,"endColumn":14},{"ruleId":"295","severity":1,"message":"300","line":29,"column":8,"nodeType":"297","endLine":29,"endColumn":10,"suggestions":"301"},{"ruleId":"286","severity":1,"message":"299","line":4,"column":8,"nodeType":"288","messageId":"289","endLine":4,"endColumn":15},{"ruleId":"286","severity":1,"message":"294","line":5,"column":8,"nodeType":"288","messageId":"289","endLine":5,"endColumn":14},{"ruleId":"295","severity":1,"message":"302","line":26,"column":8,"nodeType":"297","endLine":26,"endColumn":10,"suggestions":"303"},{"ruleId":"286","severity":1,"message":"294","line":5,"column":8,"nodeType":"288","messageId":"289","endLine":5,"endColumn":14},{"ruleId":"286","severity":1,"message":"299","line":5,"column":8,"nodeType":"288","messageId":"289","endLine":5,"endColumn":15},{"ruleId":"295","severity":1,"message":"300","line":18,"column":8,"nodeType":"297","endLine":18,"endColumn":10,"suggestions":"304"},{"ruleId":"286","severity":1,"message":"294","line":3,"column":8,"nodeType":"288","messageId":"289","endLine":3,"endColumn":14},{"ruleId":"295","severity":1,"message":"305","line":19,"column":8,"nodeType":"297","endLine":19,"endColumn":10,"suggestions":"306"},{"ruleId":"286","severity":1,"message":"294","line":5,"column":8,"nodeType":"288","messageId":"289","endLine":5,"endColumn":14},{"ruleId":"286","severity":1,"message":"299","line":6,"column":8,"nodeType":"288","messageId":"289","endLine":6,"endColumn":15},{"ruleId":"295","severity":1,"message":"307","line":23,"column":8,"nodeType":"297","endLine":23,"endColumn":10,"suggestions":"308"},{"ruleId":"286","severity":1,"message":"294","line":4,"column":8,"nodeType":"288","messageId":"289","endLine":4,"endColumn":14},{"ruleId":"286","severity":1,"message":"299","line":5,"column":8,"nodeType":"288","messageId":"289","endLine":5,"endColumn":15},{"ruleId":"295","severity":1,"message":"309","line":19,"column":8,"nodeType":"297","endLine":19,"endColumn":10,"suggestions":"310"},{"ruleId":"286","severity":1,"message":"294","line":3,"column":8,"nodeType":"288","messageId":"289","endLine":3,"endColumn":14},{"ruleId":"295","severity":1,"message":"305","line":26,"column":8,"nodeType":"297","endLine":26,"endColumn":10,"suggestions":"311"},{"ruleId":"295","severity":1,"message":"312","line":15,"column":8,"nodeType":"297","endLine":15,"endColumn":24,"suggestions":"313"},{"ruleId":"314","severity":1,"message":"315","line":46,"column":74,"nodeType":"316","messageId":"317","endLine":46,"endColumn":75},{"ruleId":"318","severity":1,"message":"319","line":226,"column":25,"nodeType":"320","messageId":"321","endLine":226,"endColumn":26,"fix":"322"},{"ruleId":"286","severity":1,"message":"323","line":29,"column":24,"nodeType":"288","messageId":"289","endLine":29,"endColumn":39},{"ruleId":"324","severity":1,"message":"325","line":210,"column":62,"nodeType":"326","messageId":"327","endLine":210,"endColumn":64},"no-native-reassign",["328"],"no-negated-in-lhs",["329"],"no-unused-vars","'setUser' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useDispatch' is defined but never used.",["328"],["329"],"'Header' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'ClassSection'. Either include it or remove the dependency array.","ArrayExpression",["330"],"'SideBar' is defined but never used.","React Hook useEffect has missing dependencies: 'Classes' and 'sectionName'. Either include them or remove the dependency array.",["331"],"React Hook useEffect has missing dependencies: 'ClassName', 'allSubjects', and 'subjectName'. Either include them or remove the dependency array.",["332"],["333"],"React Hook useEffect has a missing dependency: 'ResultGenData'. Either include it or remove the dependency array.",["334"],"React Hook useEffect has missing dependencies: 'AllmyStudent' and 'ClassName'. Either include them or remove the dependency array.",["335"],"React Hook useEffect has missing dependencies: 'AllmySubjects' and 'className'. Either include them or remove the dependency array.",["336"],["337"],"React Hook useEffect has a missing dependency: 'ClassName'. Either include it or remove the dependency array.",["338"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"339","text":"340"},"'setMenuCollapse' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"343","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"348","fix":"354"},{"desc":"355","fix":"356"},[9021,9035],"\n            .","Update the dependencies array to be: [ClassSection]",{"range":"357","text":"358"},"Update the dependencies array to be: [Classes, sectionName]",{"range":"359","text":"360"},"Update the dependencies array to be: [ClassName, allSubjects, subjectName]",{"range":"361","text":"362"},{"range":"363","text":"360"},"Update the dependencies array to be: [ResultGenData]",{"range":"364","text":"365"},"Update the dependencies array to be: [AllmyStudent, ClassName]",{"range":"366","text":"367"},"Update the dependencies array to be: [AllmySubjects, className]",{"range":"368","text":"369"},{"range":"370","text":"365"},"Update the dependencies array to be: [ClassName, currentSubject]",{"range":"371","text":"372"},[874,876],"[ClassSection]",[1008,1010],"[Classes, sectionName]",[988,990],"[ClassName, allSubjects, subjectName]",[661,663],[531,533],"[ResultGenData]",[822,824],"[AllmyStudent, ClassName]",[733,735],"[AllmySubjects, className]",[736,738],[512,528],"[ClassName, currentSubject]"]