{"version":3,"sources":["db.js","services/services.js","components/admin/LogIn.js","components/cards/AddingMoreCard.js","components/cards/Card.js","components/reusables/Loading.js","components/cards/CardList.js","components/cards/AddingCard.js","components/classes/AllClassSection.js","components/classes/AllClasses.js","components/cards/ManageCard.js","components/classes/ScoreSheetTables.js","components/classes/ClassRoom.js","components/classes/AddClassSectionForm.js","components/classes/addClassForm.js","components/students/ManageStudent.js","components/subjects/SubjectTable.js","components/subjects/ManageSubject.js","components/result/ResultsGenerator.js","components/admin/ChangePwd.js","components/classes/GotoClass.js","components/logo.jpg","components/NavBar.js","components/result/ResultData.js","components/result/ResultTables.js","components/result/Results.js","components/result/ResultClassBased.js","components/result/PrintResult.js","App.js","index.js"],"names":["db","PouchDB","allDocs","include_docs","then","result","console","log","dbServices","setCurrentData","setScore","setStudent","setSubjects","get","resultData","selectedClass","toLocaleLowerCase","res","scores","students","subjects","catch","err","ResultGenData","setResultGenData","tempClassValue","noOfClasses","category","length","forEach","element","index","array","cat_name","concat","Classes","class","class_name","className","setAllmySubjects","AllmySubjects","ClassName","setAllmyStudent","AllmyStudent","sectionName","setClasses","afterError","setClassSection","ClassSection","setstudents","setAllSubject","allSubjects","currentSubject","subjectName","tempData","slice","fName","sName","Test1","Test2","Exam","BForward","profile","doc","put","_id","_rev","username","password","alert","window","location","getResultError","scoreDisplayData","settextChange","textChange","no_of_classes","Data","response","Scores","App","React","useState","setProfile","useEffect","handleChange","e","value","target","name","style","marginTop","Card","Form","FormGroup","Label","for","Input","type","onChange","placeholder","Button","color","onClick","preventDefault","AddingMoreCard","addtype","upperCaseProp","toLocaleUpperCase","to","width","height","CardTitle","fontSize","CardComp","lowerCaseClassSection","lowerCaseClass","Class","FromCard","teacher_name","hod_name","Loading","CardList","map","AddingCard","upperCaseAddtype","AllClassSection","AllClasses","props","match","params","sectionname","ManageCard","currentClass","student","subject","NoOfSubjects","NoOfStudents","ScoreSheetTables","changeHandler","a","parseInt","currentIndex","id","tempStateData","undefined","Table","bordered","hover","striped","scoreToDisplay","checkifAllScoreFieldArray","filter","hasOwnProperty","ClassRoom","myClassName","upperCaseValue","state","score","AddclassCategoryForm","Section","setSection","DeleteHandler","newAllSection","splice","checkConflictArray1","section","AddclassClassesForm","myClass","setmyClass","newClasses","checkConflictArray","ManageStudent","ClassRoomName","gender","myStudent","setmyStudent","newAllmyStudent","key","call","sGender","SubjectTable","newAllmySubjects","mySubjects","teacherName","ManageSubject","setmySubjects","ResultsGenerator","term","session","nextTermBeing","Date","item","selected","calendarClassName","date","toDateString","ChangePwd","pathname","confirmPassword","Password","NavBar","isOpen","setIsOpen","display","flexDirection","justifyContent","styles","setStyles","Navbar","light","expand","NavbarToggler","NavbarBrand","src","Logo","alt","Collapse","navbar","Nav","pysochomotorTableLabel","affectiveDomainTableLabel","attendanceTableLabel","performanceTableLabel","ratingData","gradingData","pysochomotor","colSpan","attendeance","currentData","SumOfFinalPercentage","label","labIndex","subIndex","IntparsedExam","IntparsedTest1","IntparsedTest2","termTotal","IntparsedBForward","cumulativeTotal","finalPercentage","toPrecision","Results","ResultClassBased","PureComponent","PrintResult","buttonDisplay","componentRef","useRef","handlePrint","useReactToPrint","content","current","ref","TestId","path","exact","component","LogIn","AddClassSectionForm","addClassForm","GotoClass","destination","document","getElementById","ReactDOM","render"],"mappings":"2SAGMA,EAAK,I,MAAIC,GAAQ,SAMvBD,EAAGE,QAAQ,CAAEC,cAAc,IACtBC,MAAK,SAAAC,GAAM,OAAIC,QAAQC,IAAIF,MAEjBL,QCVFQ,EAEM,SAACC,EAAgBC,EAAUC,EAAYC,GAElDZ,EAAGa,IAAI,cACFT,MAAK,SAAAC,GACEA,IAEAI,EAAeJ,EAAOS,YAEtBd,EAAGa,IAAIR,EAAOS,WAAWC,cAAcC,qBAClCZ,MAAK,SAAAa,GAEFP,EAASO,EAAIC,QAKbP,EAAWM,EAAIE,UAEfP,EAAYK,EAAIG,iBAK/BC,OAAM,SAAAC,GAAG,OAAIhB,QAAQC,IAAIe,OAzBzBd,EA4Be,SAACe,EAAeC,EAAkBC,GACtDzB,EAAGa,IAAI,WACFT,MAAK,SAAAC,GACFmB,EAAiB,2BAAKD,GAAN,IAAqBG,YAAarB,EAAOsB,SAASC,UAClEvB,EAAOsB,SAASE,SAAQ,SAACC,EAASC,EAAOC,GACrChC,EAAGa,IAAIiB,EAAQG,SAASjB,qBACpB,SAACM,EAAKL,GAMF,GALIA,IACAQ,EAAiBA,EAAeS,OAAOjB,EAAIkB,SAC3CX,EAAiB,2BAAKD,GAAN,IAAqBG,YAAaK,EAAQ,EAAGK,MAAOX,EAAgBV,cAAeU,EAAe,GAAGY,eAGrHf,EACA,OAAQA,YAzC3Bd,EAoDI,SAAC8B,EAAWC,EAAkBC,GACvCxC,EAAGa,IAAIyB,GACFlC,MAAK,SAAAC,GACEA,EAAOe,UACPmB,EAAiBC,EAAcN,OAAO7B,EAAOe,cAEpDC,OAAM,SAAAC,GACCA,GACAhB,QAAQC,IAAIe,OA5DnBd,EAiEY,SAACiC,EAAWC,EAAiBC,EAAcjC,GAC5DV,EAAGa,IAAI4B,GACFrC,MAAK,SAAAC,GACEA,EAAOc,UACPuB,EAAgBC,EAAaT,OAAO7B,EAAOc,WAE3Cd,EAAOa,QACPR,EAASL,EAAOa,WAGvBG,OAAM,SAAAC,GACCA,GACAoB,EAAgB,QA7EvBlC,EAkFQ,SAACoC,EAAaC,EAAYV,GACvCnC,EAAGa,IAAI+B,GACFxC,MAAK,SAAAC,GACFC,QAAQC,IAAIF,EAAO8B,SACnBU,EAAWV,EAAQD,OAAO7B,EAAO8B,aAEpCd,OAAM,SAAAC,GACCA,IACAhB,QAAQC,IAAI,CAAEuC,WAAYX,IAC1BU,EAAW,IACXvC,QAAQC,IAAIe,QA5FnBd,EAiGS,SAACuC,EAAiBC,GAChChD,EAAGa,IAAI,WACFT,MAAK,SAAAC,GACFC,QAAQC,IAAIF,EAAOsB,UACnBoB,EAAgBC,EAAad,OAAO7B,EAAOsB,cAE9CN,OAAM,SAAAC,GACCA,IACAyB,EAAgB,IAChBzC,QAAQC,IAAIe,GACZhB,QAAQC,IAAI,CAAEuC,WAAYE,SA3GjCxC,EAgH0B,SAACiC,EAAWQ,EAAaC,EAAexC,EAAUyC,GACjFnD,EAAGa,IAAI4B,GACFrC,MAAK,SAAAC,GACEA,EAAOc,UACP8B,EAAY5C,EAAOc,UACnBd,EAAOe,UAEP8B,EAAc,2BAAKC,GAAN,IAAmB/B,SAAUf,EAAOe,SAAUgC,eAAgB/C,EAAOe,SAAS,GAAGiC,eAE9FhD,EAAOa,QACPR,EAAS,CAAEQ,OAAQb,EAAOa,OAAOiC,EAAYC,qBAIpD/B,OAAM,SAAAC,GACCA,GACAhB,QAAQC,IAAIe,OAhInBd,EAqIO,SAACiC,EAAWW,EAAgB1C,EAAU4C,GAClDtD,EAAGa,IAAI4B,GACFrC,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACR+C,IAEA9C,QAAQC,IAAI6C,GACR/C,EAAOa,OAAOkC,IAEV/C,EAAOc,SAASS,OAASvB,EAAOa,OAAOkC,GAAgBxB,SAEvDtB,QAAQC,IAAI,qCACZG,EAASL,EAAOa,OAAOkC,GAAgBlB,OAAO7B,EAAOc,SAASoC,MAAMlD,EAAOa,OAAOkC,GAAgBxB,WAElGvB,EAAOa,OAAOkC,GAAgBxB,SAAWvB,EAAOc,SAASS,QAEzDlB,EAASL,EAAOa,OAAOkC,KAGrB/C,EAAOa,OAAOkC,KAEpB/C,EAAOc,SAASU,SAAQ,SAACC,EAASC,GAC9BuB,EAAWA,EAASpB,OAAO,CAAEsB,MAAO1B,EAAQ0B,MAAOC,MAAO3B,EAAQ2B,MAAOC,MAAO,EAAGC,MAAO,EAAGC,KAAM,EAAGC,SAAU,OAEpHnD,EAAS4C,KAGZjD,EAAOa,SAERb,EAAOc,SAASU,SAAQ,SAACC,EAASC,GAC9BuB,EAAWA,EAASpB,OAAO,CAAEsB,MAAO1B,EAAQ0B,MAAOC,MAAO3B,EAAQ2B,MAAOC,MAAO,EAAGC,MAAO,EAAGC,KAAM,EAAGC,SAAU,OAEpHnD,EAAS4C,OAEdjC,OAAM,SAAAC,GACDA,GACAhB,QAAQC,IAAIe,OAzKnBd,EA8KW,SAACsD,GACjB9D,EAAGa,IAAI,UACFT,MAAK,SAAA2D,GACF/D,EAAGgE,IAAI,CACHC,IAAK,SACLC,KAAMH,EAAIG,KACVC,SAAUJ,EAAII,SACdC,SAAUN,EAAQM,WACnBhE,MAAK,SAAAC,GACJgE,MAAM,iCACNC,OAAOC,SAAW,IAClBjE,QAAQC,IAAIF,MAEXgB,OAAM,SAAUC,GACbhB,QAAQC,IAAIe,SAErBD,OAAM,SAAAmD,GACLlE,QAAQC,IAAI,oBAAsBiE,OA/LrChE,EAmMkB,WACvBR,EAAGa,IAAI,UACFT,MAAK,SAAA2D,GACF/D,EAAGgE,IAAI,CACHC,IAAK,SACLC,KAAMH,EAAIG,KACVC,SAAUJ,EAAII,SACdC,SAAUL,EAAIK,WACfhE,MAAK,SAAAC,GAAYC,QAAQC,IAAIF,MAC3BgB,OAAM,SAAUC,GACbhB,QAAQC,IAAIe,SAErBD,OAAM,SAAAmD,GACDA,GACAxE,EAAGgE,IAAI,CACHC,IAAK,SACLE,SAAU,QACVC,SAAU,UACXhE,MAAK,SAAAC,GAAYC,QAAQC,IAAIF,MAC3BgB,OAAM,SAAUC,GACbhB,QAAQC,IAAIe,UAvN3Bd,EA6NU,SAACsD,GAEhB9D,EAAGa,IAAI,UACHT,MAAK,SAAAC,GACDC,QAAQC,IAAIF,GACRyD,EAAQK,WAAa9D,EAAO8D,SAAWL,EAAQM,WAAa/D,EAAO+D,SACnEE,OAAOC,SAAW,mBAGlBF,MAAM,kCAEXhD,OAAM,SAAUC,GACfhB,QAAQC,IAAIe,OAzOfd,EA+OO,SAACiC,EAAWW,EAAgBqB,EAAkBC,EAAeC,GACzE3E,EAAGa,IAAI4B,GACFrC,MAAK,SAAA2D,GACF/D,EAAGgE,IAAI,CACHC,IAAKF,EAAIE,IACTC,KAAMH,EAAIG,KACV9C,SAAU2C,EAAI3C,SACdD,SAAU4C,EAAI5C,SACdD,OAAO,2BACA6C,EAAI7C,QADL,kBAEDkC,EAAiBqB,MAEvBrE,MAAK,SAAAC,GACAA,IACAqE,GAAeC,GACfN,MAAM,iCAGThD,OAAM,SAAUC,GACTA,GACAhB,QAAQC,IAAI,qBAEzBc,OAAM,SAAAC,GACDA,GACAtB,EAAGgE,IAAI,CACHC,IAAKxB,EACLvB,OAAO,eACFkC,EAAiBqB,KAEvBrE,MAAK,SAAAC,GACAA,IACAqE,GAAeC,GACfN,MAAM,iCAEXhD,OAAM,SAAUC,GACXA,GACAhB,QAAQC,IAAI,qBAnR3BC,EAwRI,SAACoC,EAAaT,GACvBnC,EAAGa,IAAI+B,GACFxC,MAAK,SAAA2D,GACF/D,EAAGgE,IAAI,CACHC,IAAKrB,EACLsB,KAAMH,EAAIG,KACV/B,QAASA,EACTyC,cAAe,IAChBxE,MAAK,SAAAC,GACAA,IACAiE,OAAOC,SAAP,WAAsB3B,EAAtB,gBACLvB,OAAM,SAAUC,GACXA,GACAhB,QAAQC,IAAI,qBAErBc,OAAM,SAAAC,GACDA,GACAtB,EAAGgE,IAAI,CACHC,IAAKrB,EACLT,QAASA,EACTyC,cAAe,IAChBxE,MAAK,SAAAC,GACAA,IACAiE,OAAOC,SAAP,WAAsB3B,EAAtB,gBACLvB,OAAM,SAAUC,GACXA,GACAhB,QAAQC,IAAI,qBAlT3BC,EAuTO,SAACwC,GACbhD,EAAGa,IAAI,WACFT,MAAK,SAAA2D,GACF/D,EAAGgE,IAAI,CACHC,IAAK,UACLC,KAAMH,EAAIG,KACVvC,SAAUqB,EACV4B,cAAe,IAChBxE,MAAK,SAAAC,GACAA,IACAiE,OAAOC,SAAW,uBACvBlD,OAAM,SAAUC,GACXA,GACAhB,QAAQC,IAAI,qBAErBc,OAAM,SAAAC,GACDA,GACAtB,EAAGgE,IAAI,CACHC,IAAK,UACLtC,SAAUqB,EACV4B,cAAe,IAChBxE,MAAK,SAAAC,GACAA,IACAiE,OAAOC,SAAW,uBACvBlD,OAAM,SAAUC,GACXA,GACAhB,QAAQC,IAAI,qBAjV3BC,EAsVQ,SAAC8B,EAAWE,GACzBxC,EAAGa,IAAIyB,GACFlC,MAAK,SAAA2D,GACF/D,EAAGgE,IAAI,CACHC,IAAK3B,EACL4B,KAAMH,EAAIG,KACVhD,OAAQ6C,EAAI7C,OACZC,SAAU4C,EAAI5C,SACdC,SAAUoB,IACXpC,MAAK,SAAAC,GACAA,GACAC,QAAQC,IAAIF,GAChBiE,OAAOC,SAAP,WAAsBjC,EAAtB,iBACDjB,OAAM,SAAUC,GACXA,GACAhB,QAAQC,IAAI,qBAErBc,OAAM,SAAAC,GACDA,GACAtB,EAAGgE,IAAI,CACHC,IAAK3B,EACLlB,SAAUoB,IACXpC,MAAK,SAAAC,GACAA,GACAC,QAAQC,IAAIF,GAChBiE,OAAOC,SAAP,WAAsBjC,EAAtB,iBACDjB,OAAM,SAAUC,GACXA,GACAhB,QAAQC,IAAI,qBAlX3BC,EAuXK,SAACiC,EAAWE,GACtB3C,EAAGa,IAAI4B,GACFrC,MAAK,SAAA2D,GACF/D,EAAGgE,IAAI,CACHC,IAAKxB,EACLyB,KAAMH,EAAIG,KACV9C,SAAU2C,EAAI3C,SACdF,OAAQ6C,EAAI7C,OACZC,SAAUwB,IACXvC,MAAK,SAAAC,GACAA,IACAiE,OAAOC,SAAP,WAAsB9B,EAAtB,kBACLpB,OAAM,SAAUC,GACXA,GACAhB,QAAQC,IAAI,qBAErBc,OAAM,SAAAC,GACDA,GACAtB,EAAGgE,IAAI,CACHC,IAAKxB,EACLtB,SAAUwB,IACXvC,MAAK,SAAAC,GACAA,IACAiE,OAAOC,SAAP,WAAsB9B,EAAtB,kBACLpB,OAAM,SAAUC,GACXA,GACAhB,QAAQC,IAAI,qBAjZ3BC,EAwZO,SAACqE,GACb7E,EAAGa,IAAI,cACFT,MAAK,SAAA2D,GACF/D,EAAGgE,IAAI,CACHC,IAAKF,EAAIE,IACTC,KAAMH,EAAIG,KACVpD,WAAY+D,IACbzE,MAAK,SAAU0E,GACVA,IACAR,OAAOC,SAAW,eACvBlD,OAAM,SAAUC,GACfhB,QAAQC,IAAIe,SAGnBD,OAAM,SAAUC,GACTA,GACAtB,EAAGgE,IAAI,CACHC,IAAK,aACLnD,WAAY+D,IACbzE,MAAK,SAAAC,GACAA,IACAgE,MAAM,sBACNC,OAAOC,SAAW,eAGvBlD,OAAM,SAAUC,GACXA,GAAKhB,QAAQC,IAAI,qBAlbhCC,EAwbe,SAACiC,EAAWsC,GAChC/E,EAAGa,IAAI4B,GACFrC,MAAK,SAAA2D,GACF/D,EAAGgE,IAAI,CACHC,IAAKxB,EACLyB,KAAMH,EAAIG,KACV9C,SAAU2C,EAAI3C,SACdD,SAAU4C,EAAI5C,SACdD,OAAQ6D,IACT3E,MAAK,SAAU0E,GACVA,GACAxE,QAAQC,IAAI,WACjBc,OAAM,SAAUC,GACfhB,QAAQC,IAAIe,U,OChcjB,SAAS0D,IAAO,IAAD,EAEIC,IAAMC,SAAS,CACzCf,SAAU,GACVC,SAAU,KAJY,mBAEnBN,EAFmB,KAEVqB,EAFU,KAQ1BC,qBAAU,WAGN5E,MACD,IAEH,IAAM6E,EAAe,SAACC,GAClB,IAAMC,EAAQD,EAAEE,OAAOD,MACvBJ,EAAW,2BACJrB,GADG,kBAELwB,EAAEE,OAAOC,KAAOF,MAkBzB,OACI,sBAAKjD,UAAU,+DAAf,UACI,qBAAKoD,MAAO,CAAEC,UAAW,YACzB,eAACC,EAAA,EAAD,CAAMtD,UAAU,qEAAhB,UACI,oBAAIA,UAAU,gCAAd,mBACA,eAACuD,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAOC,IAAI,WAAW1D,UAAU,gCAAhC,sBACA,cAAC2D,EAAA,EAAD,CAAOC,KAAK,OAAOT,KAAK,WAAWF,MAAOzB,EAAQK,SAAUgC,SAAUd,EAAce,YAAY,gBAEpG,eAACN,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAOC,IAAI,WAAW1D,UAAU,gCAAhC,sBACA,cAAC2D,EAAA,EAAD,CAAOC,KAAK,WAAWT,KAAK,WAAWF,MAAOzB,EAAQM,SAAU+B,SAAUd,EAAce,YAAY,kBAG5G,qBAAK9D,UAAU,oCAAf,SACI,cAAC+D,EAAA,EAAD,CAAQ/D,UAAU,8BACdgE,MAAM,UACNC,QA/BH,SAACjB,GACdA,EAAEkB,iBAEuB,KAArB1C,EAAQK,SAAuC,KAArBL,EAAQM,SAClCC,MAAM,wCAMN7D,EAA6BsD,IAmBrB,4B,aCzBL2C,MA9Bf,YAAmD,IAAzB7D,EAAwB,EAAxBA,YAAa8D,EAAW,EAAXA,QAC7BC,EAAgBD,EAAQE,oBAC9B,OACI,qBAAKtE,UAAU,yCAAf,SAEQM,EACI,cAAC,IAAD,CAAMN,UAAU,6BAA6BuE,GAAE,WAAMjE,EAAN,eAAwB8D,GAAvE,SACI,eAACL,EAAA,EAAD,CAAQC,MAAM,QAAQhE,UAAU,sFAAsFoD,MAAO,CAAEoB,MAAO,QAASC,OAAQ,SAAvJ,UACI,cAACC,EAAA,EAAD,CAAW1E,UAAU,wDAAwDoD,MAAO,CAAEoB,MAAO,QAASC,OAAQ,SAA9G,SACI,qBAAIzE,UAAU,iDAAd,2CACmCqE,OAEvC,oBAAIrE,UAAU,gCAAgCoD,MAAO,CAAEuB,SAAU,QAAjE,oBAIR,cAAC,IAAD,CAAM3E,UAAU,6BAA6BuE,GAAE,cAASH,GAAxD,SACI,eAACL,EAAA,EAAD,CAAQC,MAAM,QAAQhE,UAAU,sFAAsFoD,MAAO,CAAEoB,MAAO,QAASC,OAAQ,SAAvJ,UACI,cAACC,EAAA,EAAD,CAAW1E,UAAU,wDAAwDoD,MAAO,CAAEoB,MAAO,QAASC,OAAQ,SAA9G,SACI,qBAAIzE,UAAU,iDAAd,2CACmCqE,OAEvC,oBAAIrE,UAAU,gCAAgCoD,MAAO,CAAEuB,SAAU,QAAjE,uBCqBbC,EAxCE,SAAC,GAA6B,IACvCC,EACAC,EAFYC,EAA0B,EAA1BA,MAAOrE,EAAmB,EAAnBA,aAGvB,OAAIqE,GACAD,EAAiBC,EAAMhF,WAAWrB,oBAClCV,QAAQC,IAAI,CAAE+G,SAAUF,IAEpB,cAAE,IAAF,CAAO9E,UAAU,6BAA6BuE,GAAE,WAAMO,EAAN,cAAhD,SACI,eAACf,EAAA,EAAD,CAAQC,MAAM,QAAQhE,UAAU,sFAAsFoD,MAAO,CAAEoB,MAAO,QAASC,OAAQ,SAAvJ,UACI,cAACC,EAAA,EAAD,CAAW1E,UAAU,wDAAwDoD,MAAO,CAAEoB,MAAO,QAASC,OAAQ,SAA9G,SACI,oBAAIzE,UAAU,8CAAd,SACK+E,EAAMhF,eAGf,sBAAKC,UAAU,cAAf,cAA8B,gDAA9B,IAAsD,oBAAIA,UAAU,qBAAd,SAAoC+E,EAAME,eAAhG,aAKZvE,GACAmE,EAAwBnE,EAAaf,SAASjB,oBAE1C,cAAE,IAAF,CAAOsB,UAAU,6BAA6BuE,GAAE,WAAMM,EAAN,YAAhD,SACI,eAACd,EAAA,EAAD,CAAQC,MAAM,QAAQhE,UAAU,sFAAsFoD,MAAO,CAAEoB,MAAO,QAASC,OAAQ,SAAvJ,UACI,cAACC,EAAA,EAAD,CAAW1E,UAAU,wDAAwDoD,MAAO,CAAEoB,MAAO,QAASC,OAAQ,SAA9G,SAEI,qBAAIzE,UAAU,8CAAd,UACKU,EAAaf,SADlB,gBAKJ,sBAAKK,UAAU,cAAf,cAA8B,kDAA9B,IAAwD,oBAAIA,UAAU,qBAAd,SAAoCU,EAAawE,WAAzG,kBAZhB,GChBWC,MARf,WACI,OACI,8BACI,oBAAInF,UAAU,gCAAd,8BCmCGoF,EApCE,SAAC,GAA+B,IAA7BvF,EAA4B,EAA5BA,QAASa,EAAmB,EAAnBA,aAEzB,OAAIb,EAEKA,GAA8B,IAAnBA,EAAQP,OAGG,IAAnBO,EAAQP,QAAgBO,EAAQwF,KAAI,SAACN,EAAOtF,GACxC,OACI,8BACI,cAAC,EAAD,CAAMsF,MAAOA,KADPtF,MAJlB,cAAC,EAAD,IAYRiB,EAEKA,GAAwC,IAAxBA,EAAapB,OAGT,IAAjBoB,GAAsBA,EAAa2E,KAAI,SAAC3E,EAAcjB,GAClD,OACI,8BACI,cAAC,EAAD,CAAMiB,aAAcA,KADdjB,MAJlB,cAAC,EAAD,SAHZ,GC8BW6F,MA7Cf,YAA+C,IAAzBhF,EAAwB,EAAxBA,YAAa8D,EAAW,EAAXA,QAC/BpG,QAAQC,IAAIqC,GACZtC,QAAQC,IAAImG,GAMZ,IAAMmB,EAAmBnB,EAAQE,oBACjC,OACI,qBAAKtE,UAAU,yCAAf,SAOQM,EACI,cAAC,IAAD,CAAMN,UAAU,6BAA6BuE,GAAE,WAAMjE,EAAN,eAAwB8D,GAAvE,SACI,eAACL,EAAA,EAAD,CAAQC,MAAM,QAAQhE,UAAU,sFAAsFoD,MAAO,CAAEoB,MAAO,QAASC,OAAQ,SAAvJ,UACI,cAACC,EAAA,EAAD,CAAW1E,UAAU,yDAAyDoD,MAAO,CAAEoB,MAAO,QAASC,OAAQ,SAA/G,SACI,qBAAIzE,UAAU,iDAAd,+BACuBuF,OAE3B,oBAAIvF,UAAU,gCAAgCoD,MAAO,CAAEuB,SAAU,QAAjE,oBAOR,cAAC,IAAD,CAAM3E,UAAU,6BAA6BuE,GAAE,cAASH,GAAxD,SACI,eAACL,EAAA,EAAD,CAAQC,MAAM,QAAQhE,UAAU,sFAAsFoD,MAAO,CAAEoB,MAAO,QAASC,OAAQ,SAAvJ,UACI,cAACC,EAAA,EAAD,CAAW1E,UAAU,yDAAyDoD,MAAO,CAAEoB,MAAO,QAASC,OAAQ,SAA/G,SACI,qBAAIzE,UAAU,iDAAd,+BACuBuF,OAE3B,oBAAIvF,UAAU,gCAAgCoD,MAAO,CAAEuB,SAAU,QAAjE,uBCeba,MAjDf,WAA2B,MAQiB5C,mBAAS,IAR1B,mBAQhBlC,EARgB,KAQFD,EARE,KAevB,OALAqC,qBAAU,WAEN5E,EAA4BuC,EAAiBC,KAE9C,IAEC,8BAGI,qBAAKV,UAAU,gCAAf,SAEgC,IAAxBU,EAAapB,OACT,gCACI,oBAAIU,UAAU,iDAAd,SACI,uEACyC,uBADzC,oDAIJ,cAAC,EAAD,CAAYoE,QAAQ,eAKA,IAAxB1D,EAAapB,QACb,sBAAKU,UAAU,+BAAf,UACI,oBAAIA,UAAU,oEAAd,gCAEA,sBAAKA,UAAU,4BAAf,UACI,cAAC,EAAD,CAAUU,aAAcA,IACxB,cAAC,EAAD,CAAgB0D,QAAQ,uBCYzCqB,MAjDf,SAAoBC,GAAO,MAQO9C,mBAAS,IARhB,mBAQhB/C,EARgB,KAQPU,EARO,KASnBD,EAAcoF,EAAMC,MAAMC,OAAOC,YAQrC,OAJA/C,qBAAU,WAEN5E,EAA2BoC,EAAaC,EAAYV,KACrD,IAEC,8BAEI,sBAAKG,UAAU,0EAAf,UAEI,qBAAIA,UAAU,oEAAd,UAAoFM,EAAYgE,oBAAhG,cAEuB,IAAnBzE,EAAQP,OACJ,gCACI,oBAAIU,UAAU,iDAAd,SACI,uFACyD,uBADzD,kEAIJ,cAAC,EAAD,CAAYM,YAAaA,EAAa8D,QAAQ,aAM/B,IAAnBvE,EAAQP,QACR,sBAAKU,UAAU,4BAAf,UACI,cAAC,EAAD,CAAUH,QAASA,IACnB,cAAC,EAAD,CAAgBS,YAAaA,EAAa8D,QAAQ,mBCX/D0B,MAnCf,YAAqF,IAA/DC,EAA8D,EAA9DA,aAAcC,EAAgD,EAAhDA,QAASC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,aAEhE,GAAIH,GAAWC,EACX,OACI,sBAAKjG,UAAU,SAAf,UACI,cAAE,IAAF,CAAOA,UAAU,6BAA6BuE,GAAE,WAAMwB,EAAN,YAAsBC,GAAtE,SACI,eAACjC,EAAA,EAAD,CAAQC,MAAM,QAAQhE,UAAU,sFAAsFoD,MAAO,CAAEoB,MAAO,QAASC,OAAQ,SAAvJ,UACI,cAACC,EAAA,EAAD,CAAW1E,UAAU,wDAAwDoD,MAAO,CAAEoB,MAAO,QAASC,OAAQ,SAA9G,SACI,oBACIzE,UAAU,8CADd,+BAIJ,sBAAKA,UAAU,cAAf,cAA8B,4DAA+BmG,KACzD,oBAAInG,UAAU,qBAAd,kDAKZ,cAAE,IAAF,CAAOA,UAAU,6BAA6BuE,GAAE,WAAMwB,EAAN,YAAsBE,GAAtE,SACI,eAAClC,EAAA,EAAD,CAAQC,MAAM,QAAQhE,UAAU,sFAAsFoD,MAAO,CAAEoB,MAAO,QAASC,OAAQ,SAAvJ,UACI,cAACC,EAAA,EAAD,CAAW1E,UAAU,wDAAwDoD,MAAO,CAAEoB,MAAO,QAASC,OAAQ,SAA9G,SACI,oBACIzE,UAAU,8CADd,+BAIJ,sBAAKA,UAAU,cAAf,cAA8B,2DAA8BkG,KACxD,oBAAIlG,UAAU,qBAAd,sD,kCCsFboG,EAhHU,SAAC,GAAmC,IAAjCtF,EAAgC,EAAhCA,eAAgBX,EAAgB,EAAhBA,UAAgB,EAEnByC,mBAAS,IAFU,mBAEjDT,EAFiD,KAE/B/D,EAF+B,OAGpBwE,oBAAS,GAHW,mBAGjDP,EAHiD,KAGrCD,EAHqC,KAMxDU,qBAAU,WAEN5E,EAA0BiC,EAAWW,EAAgB1C,EADtC,MAEhB,CAAC0C,IAEJ,IAAMuF,EAAa,uCAAG,WAAOrD,GAAP,mBAAAsD,EAAA,sDACdrD,EAAQsD,SAASvD,EAAEE,OAAOD,MAAO,KAAO,EACxCuD,EAAeD,SAASvD,EAAEE,OAAOuD,GAAI,IACzCzI,QAAQC,IAAIuI,GACZxI,QAAQC,IAAIkE,IACRuE,EAAgBvE,GAENqE,GAAcxD,EAAEE,OAAOC,MAAQF,EAC7C7E,EAASsI,GAETtE,GAAeC,GAVG,2CAAH,sDAwCnB,OACI,qBAAKrC,UAAU,gEAAf,SAEiC,IAA5BmC,EAAiB7C,OACd,6BAEqBqH,IAArBxE,EACI,cAAC,EAAD,IAEA,gCAEI,eAACyE,EAAA,EAAD,CAAO5G,UAAU,eAAe6G,UAAQ,EAACC,OAAK,EAACC,SAAO,EAAtD,UACI,gCACI,+BACI,+CACA,wCACA,wCACA,sCACA,sDAIR,gCAEoC,IAA5B5E,EAAiB7C,QACjB6C,EAAiBkD,KAAI,SAAC2B,EAAgBvH,GAElC,OACI,+BACI,+BAAKuH,EAAe9F,MAApB,IAA4B8F,EAAe7F,SAC3C,6BACI,cAACwC,EAAA,EAAD,CAAOC,KAAK,SAAS6C,GAAIhH,EAAO0D,KAAK,QAAQF,MAAO+D,EAAe5F,MAAOyC,SAAUwC,EAAevC,YAAY,mBAGnH,6BACI,cAACH,EAAA,EAAD,CAAOC,KAAK,SAAS6C,GAAIhH,EAAO0D,KAAK,QAAQF,MAAO+D,EAAe3F,MAAOwC,SAAUwC,EAAevC,YAAY,mBAEnH,6BACI,cAACH,EAAA,EAAD,CAAOC,KAAK,SAAS6C,GAAIhH,EAAO0D,KAAK,OAAOF,MAAO+D,EAAe1F,KAAMuC,SAAUwC,EAAevC,YAAY,iBAEjH,6BACI,cAACH,EAAA,EAAD,CAAOC,KAAK,SAAS6C,GAAIhH,EAAO0D,KAAK,WAAWF,MAAO+D,EAAezF,SAAUsC,SAAUwC,EAAevC,YAAY,wBAbnHrE,WAoB9B,qBAAKO,UAAU,sDAAf,SACI,cAAC+D,EAAA,EAAD,CAAQ/D,UAAU,8BACdgE,MAAM,UACNC,QA7EX,SAACjB,GAEd,GADAA,EAAEkB,iBAC8B,IAA5B/B,EAAiB7C,OACjByC,MAAM,uDAIL,GAAgC,IAA5BI,EAAiB7C,OAAc,CACpC,IAAI2H,EAA4B9E,EAAiB+E,QAE7C,SAAC1H,GAAD,OAAcA,EAAQ2H,eAAe,WAAa3H,EAAQ2H,eAAe,WAAa3H,EAAQ2H,eAAe,UAAY3H,EAAQ2H,eAAe,eAEpJnJ,QAAQC,IAAIgJ,GAERA,EAA0B3H,OAAS,EACnCyC,MAAM,uDAA8DkF,EAA0B,GAAG/F,MAAQ,IAAM+F,EAA0B,GAAG9F,MAAQ,oBAIpJjD,EAA0BiC,EAAWW,EAAgBqB,EAAkBC,EAAeC,KAwD1E,qCCnBb+E,OAhFf,SAAmB1B,GACf,IAAM3E,EAAc2E,EAAMC,MAAMC,OAAO7E,YAEnCZ,EAAYuF,EAAMC,MAAMC,OAAOyB,YAAY3I,oBAHzB,EAIUkE,mBAAS,IAJnB,mBAIf/D,EAJe,KAIL8B,EAJK,OAKeiC,mBAAS,CAAE9D,SAAU,KALpC,mBAKf+B,EALe,KAKFD,EALE,OAOegC,mBAAS,IAPxB,mBAOfT,EAPe,KAOG/D,EAPH,KA2BtB,OAlBA0E,qBAAU,WAGN5E,EAA6CiC,EAAWQ,EAAaC,EAAexC,EAAUyC,GAE1FE,GACAgB,MAAM,6CAA+ChB,EAAc,6BAExE,IAWC,qBAAKf,UAAU,SAAf,SAGI,sBAAKA,UAAU,0EAAf,UAEI,oBAAIA,UAAU,+BAAd,SACKG,EAAUmE,sBAIf,cAAC,EAAD,CAAYyB,aAAc5F,EAAW+F,aAAcrF,EAAY/B,SAASQ,OACpE6G,aAActH,EAASS,OAAQ0G,QAAQ,iBAAiBC,QAAQ,mBAEpE,8BAIwC,IAAhCpF,EAAY/B,SAASQ,QAAoC,IAApBT,EAASS,OAC1C,oBAAIU,UAAU,+BAAd,SACI,sGACI,uBADJ,kEAKJ,gCACI,qBAAIA,UAAU,4CAAd,2BACQ,mBAAGA,UAAU,cAAb,SAA4Ba,EAAYC,oBAChD,sBAAKd,UAAU,SAAf,UACI,cAAEyD,EAAA,EAAF,CAAQC,IAAI,gBAAZ,6BACA,cAACC,EAAA,EAAD,CAAOC,KAAK,SAAST,KAAK,iBAAiBF,MAAOpC,EAAYC,eAC1D+C,SAvCP,SAACb,GAC1B,IACMsE,EADQtE,EAAEE,OAAOD,MACMqB,oBAC7B1D,EAAc,2BACPC,GADM,IAETC,eAAgBwG,MAiCQ,SAGQzG,EAAY/B,SAASuG,KAAI,SAACkC,EAAO9H,GAAR,OACrB,wBAAoBwD,MAAOsE,EAAMxG,YAAjC,SAA+CwG,EAAMxG,aAAxCtB,gBAWzC,cAAE,EAAF,CAAkBU,UAAWA,EAAWtB,SAAUA,EAAUsD,iBAAkBA,EAAiBqF,MAC3F1G,eAAgBD,EAAYC,uB,SCsErC2G,OA5If,WAAiC,IAAD,EAEY7E,mBAAS,IAFrB,mBAErBlC,EAFqB,KAEPD,EAFO,OAGEkC,IAAMC,SAAS,CAAEjD,SAAU,GAAIuF,SAAU,KAH3C,mBAGrBwC,EAHqB,KAGZC,EAHY,KAK5B7E,qBAAU,WAEN5E,EAA4BuC,EAAiBC,KAE9C,IAIH,IAAM2F,EAAgB,SAACrD,GACnB,IACMsE,EADQtE,EAAEE,OAAOD,MACMqB,oBAC7BqD,EAAW,2BACJD,GADG,kBAEL1E,EAAEE,OAAOC,KAAOmE,MA0BnBM,EAAgB,SAAC5E,GACnB,IAAMwD,EAAexD,EAAEE,OAAOuD,GAE1BoB,EAAa,aAAOnH,GACxBmH,EAAcC,OAAOtB,EAAc,GACnC/F,EAAgBoH,IAoBpB,OACI,qBAAK7H,UAAU,kBAAf,SAEI,sBAAKA,UAAU,0EAAf,UACI,oBAAIA,UAAU,oEAAd,uCACA,eAACsD,EAAA,EAAD,CAAMtD,UAAU,sCAAhB,UACI,eAACuD,EAAA,EAAD,CAAMvD,UAAU,wBAAhB,UACI,eAACwD,EAAA,EAAD,CAAWxD,UAAU,6CAArB,UACI,cAACyD,EAAA,EAAD,CAAOC,IAAI,WAAW1D,UAAU,qCAAhC,2BACA,cAAC2D,EAAA,EAAD,CAAOC,KAAK,OAAOT,KAAK,WAAWF,MAAOyE,EAAQ/H,SAAUkE,SAAUwC,EAAevC,YAAY,qCAErG,eAACN,EAAA,EAAD,CAAWxD,UAAU,mBAArB,UACI,cAACyD,EAAA,EAAD,CAAOC,IAAI,WAAW1D,UAAU,qCAAhC,8BACA,cAAC2D,EAAA,EAAD,CAAOC,KAAK,OAAOT,KAAK,WAAWF,MAAOyE,EAAQxC,SAAUrB,SAAUwC,EAAevC,YAAY,+BAGzG,qBAAK9D,UAAU,sDAAf,SACI,cAAC+D,EAAA,EAAD,CAAQ/D,UAAU,8BACdgE,MAAM,UACNC,QAlEE,WAStB,GARyB,KAArByD,EAAQ/H,SAAuC,KAArB+H,EAAQxC,UAClCnD,MAAM,wDAGkB,IAAxBrB,EAAapB,SAAsC,KAArBoI,EAAQ/H,SAAwC,MAArB+H,EAAQxC,YACjElH,QAAQC,IAAIyJ,GACZjH,EAAgBC,EAAad,OAAO8H,KAEZ,IAAxBhH,EAAapB,OAAc,CAC3B,IAAIyI,EAAsBrH,EAAawG,QAAO,SAAAc,GAAO,OAAIA,EAAQrI,WAAa+H,EAAQ/H,YACnD,IAA/BoI,EAAoBzI,OACpBmB,EAAgBC,EAAad,OAAO8H,KAGpC1J,QAAQC,IAAI,CAAE8J,wBACdhG,MAAM,GAAD,OAAI2F,EAAQ/H,SAAZ,8BAgDG,8BAKR,eAACiH,EAAA,EAAD,CAAO5G,UAAU,eAAe6G,UAAQ,EAACC,OAAK,EAACC,SAAO,EAAtD,UACI,gCACI,+BAEI,8CACA,0CACA,8DACA,6CAGR,gCAEgC,IAAxBrG,EAAapB,QACboB,EAAa2E,KAAI,SAAC2C,EAASvI,GACvB,OACI,+BACI,6BAAKuI,EAAQrI,WACb,6BAAKqI,EAAQ9C,WACb,mCACA,6BACI,cAACnB,EAAA,EAAD,CACI0C,GAAIhH,EACJwE,QAAS2D,EACT5H,UAAU,8CAHd,wBALEP,WAwB9B,qBAAKO,UAAU,sDAAf,SACI,cAAC+D,EAAA,EAAD,CAAQ/D,UAAU,8BACdgE,MAAM,UACNC,QAhFH,SAACjB,GACdA,EAAEkB,iBAE0B,IAAxBxD,EAAapB,OACbyC,MAAM,0CAKN7D,EAA0BwC,IAqElB,4BCwBLuH,OA7Jf,SAA6BvC,GACzB,IAAMpF,EAAcoF,EAAMC,MAAMC,OAAOC,YAAYnH,oBACnDV,QAAQC,IAAIqC,GAFoB,MAGFsC,mBAAS,IAHP,mBAGzB/C,EAHyB,KAGhBU,EAHgB,OAIFqC,mBAAS,CAAE7C,WAAY,GAAIkF,aAAc,KAJvC,mBAIzBiD,EAJyB,KAIhBC,EAJgB,KAMhCrF,qBAAU,WAEN5E,EAA2BoC,EAAaC,EAAYV,KACrD,IAEH,IAAMwG,EAAgB,SAACrD,GACnB,IACMsE,EADQtE,EAAEE,OAAOD,MACMqB,oBAC7B6D,EAAW,2BACJD,GADG,kBAELlF,EAAEE,OAAOC,KAAOmE,MAyCnBM,EAAgB,SAAC5E,GACnB,IAAMwD,EAAexD,EAAEE,OAAOuD,GAC1B2B,EAAU,aAAOvI,GACrBuI,EAAWN,OAAOtB,EAAc,GAChCjG,EAAW6H,IAef,OACI,qBAAKpI,UAAU,kBAAf,SAEI,sBAAKA,UAAU,0EAAf,UAEI,qBAAIA,UAAU,qEAAd,cAAsFM,EAAYgE,oBAAlG,cAEA,oBAAItE,UAAU,oEAAd,gCACA,eAACsD,EAAA,EAAD,CAAMtD,UAAU,sCAAhB,UACI,eAACuD,EAAA,EAAD,CAAMvD,UAAU,wBAAhB,UACI,eAACwD,EAAA,EAAD,CAAWxD,UAAU,6CAArB,UACI,cAACyD,EAAA,EAAD,CAAOC,IAAI,WAAW1D,UAAU,qCAAhC,yBACA,cAAC2D,EAAA,EAAD,CAAOC,KAAK,OAAOT,KAAK,aAAaF,MAAOiF,EAAQnI,WAAY8D,SAAUwC,EAAevC,YAAY,8CAEzG,eAACN,EAAA,EAAD,CAAWxD,UAAU,mBAArB,UACI,cAACyD,EAAA,EAAD,CAAOC,IAAI,WAAW1D,UAAU,qCAAhC,iCACA,cAAC2D,EAAA,EAAD,CAAOC,KAAK,OAAOT,KAAK,eAAeF,MAAOiF,EAAQjD,aAAcpB,SAAUwC,EAAevC,YAAY,+BAGjH,qBAAK9D,UAAU,sDAAf,SACI,cAAC+D,EAAA,EAAD,CAAQ/D,UAAU,8BACdgE,MAAM,UACNC,QA9EE,WACtB,GAA2B,KAAvBiE,EAAQnI,WAA6C,KAAzBmI,EAAQjD,aACpClD,MAAM,gEAEL,CAED,IAAIsG,EAAqBxI,EAAQqH,QAAO,SAAAnC,GAAK,OAAIA,EAAMhF,aAAemI,EAAQnI,cAE5C,IAA9BsI,EAAmB/I,OACnBiB,EAAWV,EAAQD,OAAOsI,KAG1BlK,QAAQC,IAAI,CAAEoK,uBACdtG,MAAM,GAAD,OAAImG,EAAQnI,WAAZ,4BA+DG,4BAOR,eAAC6G,EAAA,EAAD,CAAO5G,UAAU,eAAe6G,UAAQ,EAACC,OAAK,EAACC,SAAO,EAAtD,UACI,gCACI,+BAEI,4CACA,oDACA,+DACA,6CAGR,gCACKlH,EAAQwF,KAAI,SAAC6C,EAASzI,GACnB,OACI,+BACI,6BAAKyI,EAAQnI,aACb,6BAAKmI,EAAQjD,eACb,mCACA,6BAOI,cAAClB,EAAA,EAAD,CAAQ/D,UAAU,8CACdyG,GAAIhH,EACJwE,QAAS2D,EAFb,wBAXEnI,WA2B1B,qBAAKO,UAAU,sDAAf,SACI,cAAC+D,EAAA,EAAD,CAAQ/D,UAAU,8BACdgE,MAAM,UACNC,QAjFH,SAACjB,GACdA,EAAEkB,iBACqB,IAAnBrE,EAAQP,OACRyC,MAAM,0CAIN7D,EAAuBoC,EAAaT,IAwE5B,4BCWLyI,OA5Jf,SAAuB5C,GACnB,IAAMvF,EAAYuF,EAAMC,MAAMC,OAAO2C,cAAc7J,oBAE7C8J,EAAS,CAAC,OAAQ,UAHE,EAIc5F,mBAAS,IAJvB,mBAInBvC,EAJmB,KAILD,EAJK,OAMQwC,mBAAS,CAAE1B,MAAO,GAAIC,MAAO,GAAIqH,OAAQA,EAAO,KANxD,mBAMnBC,EANmB,KAMRC,EANQ,OAQC9F,mBAAS,MARV,mBAQnBH,EARmB,KAQXrE,EARW,KAU1B0E,qBAAU,WAEN5E,EAA+BiC,EAAWC,EAAiBC,EAAcjC,KAE1E,IAGH,IAAMiI,EAAgB,SAACrD,GACnB,IACMsE,EADQtE,EAAEE,OAAOD,MACMqB,oBAC7BoE,EAAa,2BACND,GADK,kBAEPzF,EAAEE,OAAOC,KAAOmE,MAqBnBM,EAAgB,SAAC5E,GACnB,IAAMwD,EAAexD,EAAEE,OAAOuD,GAC1BkC,EAAe,aAAOtI,GAI1B,GAHAsI,EAAgBb,OAAOtB,EAAc,GACrCpG,EAAgBuI,GAEZlG,EAAQ,CACR,IAAK,IAAMmG,KAAOnG,EACVA,EAAO0E,eAAe0B,KAAKpG,EAAQmG,IACnCnG,EAAOmG,GAAKd,OAAOtB,EAAc,GAGzCpI,EAASqE,GACTvE,EAAkCiC,EAAWsC,KAoBrD,OACI,qBAAKzC,UAAU,kBAAf,SAEI,sBAAKA,UAAU,0EAAf,UAEI,oBAAIA,UAAU,oEAAd,SAAoFG,EAAUmE,sBAC9F,oBAAItE,UAAU,oEAAd,uCACA,eAACsD,EAAA,EAAD,CAAMtD,UAAU,sCAAhB,UACI,eAACuD,EAAA,EAAD,CAAMvD,UAAU,wBAAhB,UACI,eAACwD,EAAA,EAAD,CAAWxD,UAAU,6CAArB,UACI,cAACyD,EAAA,EAAD,CAAOC,IAAI,WAAW1D,UAAU,qCAAhC,iCACA,cAAC2D,EAAA,EAAD,CAAOC,KAAK,OAAOT,KAAK,QAAQF,MAAOwF,EAAUvH,MAAO2C,SAAUwC,EAAevC,YAAY,+BAEjG,eAACN,EAAA,EAAD,CAAWxD,UAAU,6CAArB,UACI,cAACyD,EAAA,EAAD,CAAOC,IAAI,WAAW1D,UAAU,qCAAhC,mCACA,cAAC2D,EAAA,EAAD,CAAOC,KAAK,OAAOT,KAAK,QAAQF,MAAOwF,EAAUtH,MAAO0C,SAAUwC,EAAevC,YAAY,4BAEjG,eAACN,EAAA,EAAD,CAAWxD,UAAU,mBAArB,UACI,cAACyD,EAAA,EAAD,CAAOC,IAAI,WAAW1D,UAAU,qCAAhC,oBACA,cAAC2D,EAAA,EAAD,CAAOC,KAAK,SAAST,KAAK,SAASF,MAAOwF,EAAUK,QAASjF,SAAUwC,EAAvE,SACKmC,EAAOnD,KAAI,SAACkC,EAAO9H,GAAR,OACR,iCAAqB8H,GAAR9H,cAM7B,qBAAKO,UAAU,sDAAf,SACI,cAAC+D,EAAA,EAAD,CAAQ/D,UAAU,8BACdgE,MAAM,UACNC,QA/EI,WACA,KAApBwE,EAAUvH,OAAoC,KAApBuH,EAAUtH,MACpCY,MAAM,8DAK4B,IADT1B,EAAa6G,QAAO,SAAArI,GAAQ,OAAIA,EAASqC,QAAUuH,EAAUvH,OAASrC,EAASsC,QAAUsH,EAAUtH,SACrG7B,OACnBc,EAAgBC,EAAaT,OAAO6I,IAGpC1G,MAAM,GAAD,OAAI0G,EAAUvH,MAAd,YAAuBuH,EAAUtH,MAAjC,oBAkEG,8BAKR,eAACyF,EAAA,EAAD,CAAO5G,UAAU,eAAe6G,UAAQ,EAACC,OAAK,EAACC,SAAO,EAAtD,UACI,gCACI,+BAEI,8CACA,wCACA,6CAGR,gCAGQ1G,EAAagF,KAAI,SAACoD,EAAWhJ,GACzB,OACI,+BACI,+BAAKgJ,EAAUvH,MAAf,IAAuBuH,EAAUtH,SAEjC,6BAAKsH,EAAUD,SACf,6BACI,cAACzE,EAAA,EAAD,CACI0C,GAAIhH,EACJwE,QAAS2D,EACT5H,UAAU,8CAHd,wBALEP,WAqB9B,qBAAKO,UAAU,sDAAf,SACI,cAAC+D,EAAA,EAAD,CAAQ/D,UAAU,8BACdgE,MAAM,UACNC,QApFH,SAACjB,GACdA,EAAEkB,iBAC0B,IAAxB7D,EAAaf,OACbyC,MAAM,oBAMN7D,EAAwBiC,EAAWE,IAyE3B,4BCpFL0I,OA7Df,YAAuE,IAA/C7I,EAA8C,EAA9CA,cAAeD,EAA+B,EAA/BA,iBAAkBD,EAAa,EAAbA,UAE/C4H,EAAgB,SAAC5E,GACnB,IAAMwD,EAAexD,EAAEE,OAAOuD,GAE1BuC,EAAgB,aAAO9I,GAC3B8I,EAAiBlB,OAAOtB,EAAc,GACtCvG,EAAiB+I,IAWrB,OACI,sBAAKlJ,MAAM,QAAX,UACI,eAAC8G,EAAA,EAAD,CAAO5G,UAAU,eAAe6G,UAAQ,EAACC,OAAK,EAACC,SAAO,EAAtD,UACI,gCACI,+BACI,8CACA,8CACA,6CAGR,gCAEiC,IAAzB7G,EAAcZ,QACdY,EAAcmF,KAAI,SAAC4D,EAAYxJ,GAC3B,OACI,+BACI,6BAAKwJ,EAAWlI,cAChB,6BAAKkI,EAAWC,cAEhB,6BACI,cAACnF,EAAA,EAAD,CACI0C,GAAIhH,EACJwE,QAAS2D,EACT5H,UAAU,8CAHd,wBALEP,WAmB9B,qBAAKO,UAAU,sDAAf,SACI,cAAC+D,EAAA,EAAD,CAAQ/D,UAAU,8BACdgE,MAAM,UACNC,QA9CC,SAACjB,GACdA,EAAEkB,iBAC2B,IAAzBhE,EAAcZ,OACdyC,MAAM,6CAGN7D,EAA2B8B,EAAWE,IAsClC,0BCsBDiJ,OAzEf,SAAuBzD,GACnB,IAAM1F,EAAY0F,EAAMC,MAAMC,OAAO2C,cAAc7J,oBACnDV,QAAQC,IAAI+B,GAFc,MAGgB4C,mBAAS,IAHzB,mBAGnB1C,EAHmB,KAGJD,EAHI,OAIU2C,mBAAS,CAAE7B,YAAa,GAAImI,YAAa,KAJnD,mBAInBD,EAJmB,KAIPG,EAJO,KAM1BtG,qBAAU,WAEN5E,EAAuB8B,EAAWC,EAAkBC,KACrD,IAIH,IAAMmG,EAAgB,SAACrD,GACnB,IACMsE,EADQtE,EAAEE,OAAOD,MACMqB,oBAC7B8E,EAAc,2BACPH,GADM,kBAERjG,EAAEE,OAAOC,KAAOmE,MAwBzB,OACI,qBAAKtH,UAAU,kBAAf,SAEI,sBAAKA,UAAU,0EAAf,UAEI,oBAAIA,UAAU,oEAAd,SAAoFA,EAAUsE,sBAC9F,oBAAItE,UAAU,oEAAd,uCACA,eAACsD,EAAA,EAAD,CAAMtD,UAAU,sCAAhB,UACI,eAACuD,EAAA,EAAD,CAAMvD,UAAU,wBAAhB,UACI,eAACwD,EAAA,EAAD,CAAWxD,UAAU,6CAArB,UACI,cAACyD,EAAA,EAAD,CAAOC,IAAI,WAAW1D,UAAU,qCAAhC,2BACA,cAAC2D,EAAA,EAAD,CAAOC,KAAK,OAAOT,KAAK,cAAcF,MAAOgG,EAAWlI,YAAa8C,SAAUwC,EAAevC,YAAY,2CAE9G,eAACN,EAAA,EAAD,CAAWxD,UAAU,mBAArB,UACI,cAACyD,EAAA,EAAD,CAAOC,IAAI,WAAW1D,UAAU,qCAAhC,6BACA,cAAC2D,EAAA,EAAD,CAAOC,KAAK,OAAOT,KAAK,cAAcF,MAAOgG,EAAWC,YAAarF,SAAUwC,EAAevC,YAAY,+BAGlH,qBAAK9D,UAAU,sDAAf,SACI,cAAC+D,EAAA,EAAD,CAAQ/D,UAAU,8BACdgE,MAAM,UACNC,QAzCK,WACzB,GAA+B,KAA3BgF,EAAWlI,YAAgD,KAA3BkI,EAAWC,YAC3CnH,MAAM,4DAEL,CAED,IAAIsG,EAAqBnI,EAAcgH,QAAO,SAAAnC,GAAK,OAAIA,EAAMhE,cAAgBkI,EAAWlI,eAEtD,IAA9BsH,EAAmB/I,OACnBW,EAAiBC,EAAcN,OAAOqJ,KAGtCjL,QAAQC,IAAI,CAAEoK,uBACdtG,MAAM,GAAD,OAAIkH,EAAWlI,YAAf,sBA0BG,+BAKR,cAAC,GAAD,CAAcb,cAAeA,EAAeD,iBAAkBA,EAAkBD,UAAWA,U,2BCyB5FqJ,OAxFf,WAA6B,IAAD,EAEkBzG,mBAAS,CAC/C9C,MAAO,GACPV,YAAa,EACbkK,KAAM,aACN7K,cAAe,GACf8K,QAAS,GACTC,cAAe,IAAIC,OARC,mBAEjBxK,EAFiB,KAEFC,EAFE,KAWxB4D,qBAAU,WAEN5E,EAAkCe,EAAeC,EAD5B,MAEtB,IAEH,IAAM6D,EAAe,SAACC,GAClB,IAAMC,EAAQD,EAAEE,OAAOD,MAEvB/D,EAAiB,2BACVD,GADS,kBAEX+D,EAAEE,OAAOC,KAAOF,MAqBzB,OACI,8BAEI,qBAAKjD,UAAU,+DAAf,SAEI,eAACsD,EAAA,EAAD,CAAMtD,UAAU,gEAAhB,UACI,oBAAIA,UAAU,gDAAd,kDADJ,mBAC4H,eAACuD,EAAA,EAAD,WACpH,eAACC,EAAA,EAAD,CAAWxD,UAAU,eAArB,UACI,cAACyD,EAAA,EAAD,CAAOC,IAAI,QAAQ1D,UAAU,qCAA7B,oBACA,cAAC2D,EAAA,EAAD,CAAOC,KAAK,SAAST,KAAK,gBAAgBF,MAAOhE,EAAcR,cAAeoF,SAAUd,EAAxF,SAEQ9D,EAAca,MAAMuF,KAAI,SAACqE,EAAMjK,GAAP,OACpB,uCAAwBiK,EAAK3J,aAAfN,WAK9B,eAAC+D,EAAA,EAAD,CAAWxD,UAAU,eAArB,UACI,cAACyD,EAAA,EAAD,CAAOC,IAAI,QAAQ1D,UAAU,qCAA7B,kBACA,eAAC2D,EAAA,EAAD,CAAOC,KAAK,SAAST,KAAK,OAAOF,MAAOhE,EAAcqK,KAAMzF,SAAUd,EAAtE,UACI,gDACA,iDACA,sDAGR,eAACS,EAAA,EAAD,CAAWxD,UAAU,eAArB,UACI,cAACyD,EAAA,EAAD,CAAOC,IAAI,UAAU1D,UAAU,qCAA/B,qBACA,cAAC2D,EAAA,EAAD,CAAOC,KAAK,OAAOT,KAAK,UAAUF,MAAOhE,EAAcsK,QAAS1F,SAAUd,EAAce,YAAY,qBAExG,sBAAK9D,UAAU,oBAAf,UACI,cAACyD,EAAA,EAAD,CAAOC,IAAI,4BAA4B1D,UAAU,qCAAjD,gCACA,cAAC,KAAD,CAAY2J,SAAU1K,EAAcuK,cAAeI,kBAAkB,gBAAgB/F,SAAU,SAAAgG,GAAU3K,EAAiB,2BAAKD,GAAN,IAAqBuK,cAAeK,cAGrK,qBAAK7J,UAAU,oCAAf,SAEI,cAAC+D,EAAA,EAAD,CAAQ/D,UAAU,mCACdgE,MAAM,UACNC,QAvDP,SAACjB,GACdA,EAAEkB,iBACF,IAAM3B,EAAO,CACT+G,KAAMrK,EAAcqK,KACpB7K,cAAeQ,EAAcR,cAC7B8K,QAAStK,EAAcsK,QACvBC,cAAevK,EAAcuK,cAAcM,gBAEjB,KAA1B7K,EAAcsK,QACdxH,MAAM,8BAIN/D,QAAQC,IAAIsE,GACZrE,EAA0BqE,KAuCd,8BCPTwH,OAnEf,WAEI/L,QAAQC,IAAI+D,OAAOC,SAAS+H,UAFX,MAGarH,IAAMC,SAAS,CACzCd,SAAU,GACVmI,gBAAiB,KALJ,mBAGVzI,EAHU,KAGDqB,EAHC,KAuBXE,EAAe,SAACC,GAClB,IAAMC,EAAQD,EAAEE,OAAOD,MACvBJ,EAAW,2BACJrB,GADG,kBAELwB,EAAEE,OAAOC,KAAOF,MAMzB,OACI,8BAII,qBAAKjD,UAAU,+DAAf,SAKI,eAACsD,EAAA,EAAD,CAAMtD,UAAU,qEAAhB,UACI,oBAAIA,UAAU,gCAAd,qCACA,eAACuD,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAOC,IAAI,eAAe1D,UAAU,gCAApC,0BACA,cAAC2D,EAAA,EAAD,CAAOC,KAAK,OAAOT,KAAK,WAAWF,MAAOzB,EAAQ0I,SAAUrG,SAAUd,EAAce,YAAY,oBAEpG,eAACN,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAOC,IAAI,mBAAmB1D,UAAU,gCAAxC,4BACA,cAAC2D,EAAA,EAAD,CAAOC,KAAK,OAAOT,KAAK,kBAAkBF,MAAOzB,EAAQyI,gBAAiBpG,SAAUd,EAAce,YAAY,2BAGtH,qBAAK9D,UAAU,oCAAf,SACI,cAAC+D,EAAA,EAAD,CAAQ/D,UAAU,8BACdgE,MAAM,UACNC,QAjDP,SAACjB,GACdA,EAAEkB,iBAC8B,KAA5B1C,EAAQyI,iBAA+C,KAArBzI,EAAQM,SAC1CC,MAAM,+DAEDP,EAAQyI,kBAAoBzI,EAAQM,UACzCC,MAAM,0FAIV7D,EAA8BsD,IAqCd,8BCGT6H,OAlEf,WAA6B,IAAD,EAEkBzG,mBAAS,CAC/C9C,MAAO,GACPrB,cAAe,KAJK,mBAEjBQ,EAFiB,KAEFC,EAFE,KAiCxB,OA1BA4D,qBAAU,WAEN5E,EAAkCe,EAAeC,EAD5B,MAEtB,IAUHlB,QAAQC,IAAIgB,GAcR,8BAEI,qBAAKe,UAAU,+DAAf,SAGI,eAACsD,EAAA,EAAD,CAAMtD,UAAU,gEAAhB,UACI,oBAAIA,UAAU,gDAAd,sCACA,cAACuD,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAWxD,UAAU,eAArB,UACI,cAACyD,EAAA,EAAD,CAAOC,IAAI,QAAQ1D,UAAU,qCAA7B,oBACA,cAAC2D,EAAA,EAAD,CAAOC,KAAK,SAAST,KAAK,gBAAgBF,MAAOhE,EAAcR,cAAeoF,SAhCjF,SAACb,GAClB,IAAMC,EAAQD,EAAEE,OAAOD,MACvBjF,QAAQC,IAAIgF,GACZ/D,EAAiB,2BACVD,GADS,kBAEX+D,EAAEE,OAAOC,KAAOF,MA2BD,SAEQhE,EAAca,MAAMuF,KAAI,SAACqE,EAAMjK,GAAP,OACpB,uCAAwBiK,EAAK3J,aAAfN,aAOlC,qBAAKO,UAAU,oCAAf,SAEI,cAAC+D,EAAA,EAAD,CAAQ/D,UAAU,mCACdgE,MAAM,UACNC,QArCP,SAACjB,GACdA,EAAEkB,iBAQFlC,OAAOC,SAAP,UAAqBhD,EAAcR,cAAcC,oBAAjD,eA0BgB,8B,kDChET,OAA0B,iCCwF1ByL,GAjFA,WAAO,IAAD,EAEWvH,oBAAS,GAFpB,mBAEVwH,EAFU,KAEFC,EAFE,OAIWzH,mBAAS,CAAE0H,QAAS,OAAQC,cAAe,SAAUC,eAAgB,UAJhF,mBAIVC,EAJU,KAIFC,EAJE,KAajB,OAPA5H,qBAAU,WAC2B,MAA7Bd,OAAOC,SAAS+H,UAAiD,YAA7BhI,OAAOC,SAAS+H,SACpDU,EAAU,CAAEJ,QAAS,SAErBI,EAAU,CAAEJ,QAAS,OAAQC,cAAe,SAAUC,eAAgB,YAE3E,IAEC,qBAAKxK,UAAU,yBAAyBoD,MAAOqH,EAA/C,SAGI,eAACE,GAAA,EAAD,CAAQ3G,MAAM,6BAA6B4G,OAAK,EAACC,OAAO,KAAxD,UACI,cAACC,GAAA,EAAD,CAAe7G,QAfZ,kBAAMoG,GAAWD,MAgBpB,sBAAKpK,UAAU,iCAAf,UACI,cAAC+K,GAAA,EAAD,CAAaxG,GAAG,IAAIvE,UAAU,mBAA9B,SACI,qBAAKoD,MAAO,CAAEoB,MAAO,QAASC,OAAQ,SAAWuG,IAAKC,GAAMC,IAAI,WAEpE,gCACI,oBAAIlL,UAAU,yBAAd,mDACA,oBAAIA,UAAU,yBAAd,oDAGR,cAACmL,GAAA,EAAD,CAAUnL,UAAU,oCAAoCoK,OAAQA,EAAQgB,QAAM,EAA9E,SACI,cAACC,GAAA,EAAD,CAAKrL,UAAU,mCAAmCoL,QAAM,EAAxD,SACI,qBAAIpL,UAAU,gEAAd,UAEI,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAAMuE,GAAG,mBAAT,SACI,cAACR,EAAA,EAAD,CAAQC,MAAM,UAAUhE,UAAU,4BAAlC,8BASR,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAAMuE,GAAG,aAAT,SACI,cAACR,EAAA,EAAD,CAAQC,MAAM,UAAUhE,UAAU,4BAAlC,6BAMR,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAAMuE,GAAG,oBAAT,SACI,cAACR,EAAA,EAAD,CAAQC,MAAM,UAAUhE,UAAU,4BAAlC,wBAMR,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAAMuE,GAAG,IAAT,SACI,cAACR,EAAA,EAAD,CAAQC,MAAM,WAAWhE,UAAU,4BAA4BiE,QAAS,kBAAMyG,EAAU,CAAEJ,QAAS,UAAnG,qC,oCCpEvBgB,I,OAAyB,CAAC,YAAa,iBAAkB,QAAS,gBAAiB,sBAEnFC,GAA4B,CAAC,cAAe,WAAY,aAAc,UAAW,kBAAmB,oBAEpGC,GAAuB,CAAC,2BAA4B,uBAAwB,wBAG5EC,GAAwB,CAAC,WAAY,WAAY,YAAa,aAAc,kBAAmB,oBAAqB,UAAW,QAAS,aAMxIC,GAAa,CAAC,yDAA0D,iDAAkD,4CAA6C,gDAAiD,2CAExNC,GAAc,CAAC,kCAAmC,0BAA2B,uBAAwB,4BCZrG/E,GACS,SAACgF,GACf,OACI,wBAAOnF,GAAG,cAAczG,UAAU,sBAAlC,UACI,kCACI,6BACI,oBAAI6L,QAAQ,IAAI7L,UAAU,cAA1B,+BAEJ,+BACI,oBAAIA,UAAU,gBACd,oBAAIA,UAAU,cAAd,eACA,oBAAIA,UAAU,cAAd,eACA,oBAAIA,UAAU,cAAd,eACA,oBAAIA,UAAU,cAAd,eACA,oBAAIA,UAAU,cAAd,qBAGR,gCAEgC,IAAxB4L,EAAatM,QACbsM,EAAavG,KAAI,SAACqE,EAAMjK,GACpB,OACI,+BACI,oBAAI2D,MAAO,CAAEoB,MAAO,SAApB,SAAgCkF,IAChC,uBACA,uBACA,uBACA,uBACA,yBANMjK,YAtB7BmH,GAqCa,SAACgF,GACnB,OACI,wBAAOnF,GAAG,cAAczG,UAAU,uBAAlC,UACI,kCACI,6BACI,oBAAI6L,QAAQ,IAAI7L,UAAU,cAA1B,qCAEJ,+BACI,oBAAIA,UAAU,gBACd,oBAAIA,UAAU,cAAd,eACA,oBAAIA,UAAU,cAAd,eACA,oBAAIA,UAAU,cAAd,eACA,oBAAIA,UAAU,cAAd,eACA,oBAAIA,UAAU,cAAd,qBAGR,uBAAOA,UAAU,QAAjB,SAEgC,IAAxB4L,EAAatM,QACbsM,EAAavG,KAAI,SAACqE,EAAMjK,GACpB,OACI,+BACI,oBAAI2D,MAAO,CAAEoB,MAAO,SAApB,SAAiCkF,IACjC,uBACA,uBACA,uBACA,uBACA,yBANMjK,YA1D7BmH,GAyEQ,SAACkF,GACd,OACI,wBAAOrF,GAAG,mBAAmBzG,UAAU,uBAAvC,UACI,gCACI,6BACI,oBAAI6L,QAAQ,IAAI7L,UAAU,cAA1B,iCAGR,gCAE+B,IAAvB8L,EAAYxM,QACZwM,EAAYzG,KAAI,SAACqE,EAAMjK,GACnB,OACI,+BACI,oBAAIgH,GAAG,WAAP,SAAmBiD,IACnB,oBAAIjD,GAAG,eAFDhH,YAtF7BmH,GAkGU,WACf,OACI,wBAAOH,GAAG,kBAAkBzG,UAAU,uBAAtC,UACI,gCACI,6BACI,oBAAI6L,QAAQ,IAAI7L,UAAU,cAA1B,oDAGR,kCACI,qBAAKA,UAAU,cAAf,UACI,oBAAI6L,QAAQ,IAAIpF,GAAG,WAAnB,oBACA,oBAAIoF,QAAQ,IAAIpF,GAAG,WAAnB,uBAGJ,qBAAKzG,UAAU,cAAf,UACI,oBAAIyG,GAAG,YAAP,+BACA,oBAAIA,GAAG,YAAP,yBAEA,oBAAIA,GAAG,YAAP,+BACA,oBAAIA,GAAG,YAAP,4BAGJ,qBAAKzG,UAAU,aAAf,UACI,oBAAIyG,GAAG,YAAP,eACA,oBAAIA,GAAG,YAAP,eAEA,oBAAIA,GAAG,YAAP,gBACA,oBAAIA,GAAG,YAAP,0BA7HXG,GAqII,SAACgC,GACV,OACI,wBAAOnC,GAAG,SAASzG,UAAU,uBAA7B,UACI,gCACI,6BACI,oBAAI6L,QAAQ,IAAI7L,UAAU,cAA1B,iCAGR,uBAAOA,UAAU,QAAjB,SAEuB,IAAf4I,EAAItJ,QACJsJ,EAAIvD,KAAI,SAACqE,EAAMjK,GACX,OACI,6BACI,6BAAMiK,KADAjK,YAlJ7BmH,GA6JK,SAACgC,GACX,OACI,wBAAOnC,GAAG,UAAUzG,UAAU,uBAA9B,UACI,gCACI,6BACI,oBAAI6L,QAAQ,IAAI7L,UAAU,cAA1B,iCAGR,uBAAOA,UAAU,QAAjB,SAEuB,IAAf4I,EAAItJ,QACJsJ,EAAIvD,KAAI,SAACqE,EAAMjK,GACX,OACI,6BACI,6BAAMiK,KADAjK,YA1K7BmH,GAoLS,SAAC6E,EAAuB3M,EAAU2H,EAAI7H,EAAQmN,GAC5D,IAAIC,EAAuB,EAE3B,OADAhO,QAAQC,IAAIa,EAASQ,QAGjB,sBAAK8D,MAAO,CAAEoB,MAAO,OAArB,UACI,wBAAOiC,GAAG,mBAAmBzG,UAAU,wCAAvC,UACI,gCACI,6BACI,oBAAI6L,QAASJ,EAAsBnM,OAAS,EAAGU,UAAU,cAAzD,0DAIR,kCACI,+BACI,uBAEIyL,EAAsBpG,KAAI,SAAC4G,EAAOC,GAC9B,OACI,6BAAoBD,GAAXC,SAMD,IAApBpN,EAASQ,QACTR,EAASuG,KAAI,SAACY,EAASkG,GACnB,GAAKvN,EAAOqH,EAAQlF,aAAa0F,GAG5B,CACD,GAAM7H,EAAOqH,EAAQlF,aAAa0F,GAAIU,eAAe,UAAevI,EAAOqH,EAAQlF,aAAa0F,GAAIU,eAAe,UAAevI,EAAOqH,EAAQlF,aAAa0F,GAAIU,eAAe,QAG5K,CACD,IAAIiF,EAAgB7F,SAAS3H,EAAOqH,EAAQlF,aAAa0F,GAAInF,KAAM,KAAO,EACtE+K,EAAiB9F,SAAS3H,EAAOqH,EAAQlF,aAAa0F,GAAIrF,MAAO,KAAO,EACxEkL,EAAiB/F,SAAS3H,EAAOqH,EAAQlF,aAAa0F,GAAIpF,MAAO,KAAO,EACxEkL,EAAYF,EAAiBC,EAAiBF,EAC9CI,EAAoBjG,SAAS3H,EAAOqH,EAAQlF,aAAa0F,GAAIlF,SAAU,KAAO,EAC9EkL,EAAkBF,EAAYC,EAC9BE,EAAkBD,EAAkB,EAExC,OADAT,GAA8CU,EAE1C,+BACI,oBAAI1M,UAAU,YAAd,SAA2BiG,EAAQlF,cAGnC,6BAAKsL,IAGL,6BAAKC,IAGL,6BAAKF,IAGL,6BAAKG,IAIL,6BAAKC,IAIL,6BAAKC,IAIL,6BAAKC,IAIL,6BACIA,GAAmB,GAAM,IAErBA,GAAmB,GAAKA,GAAmB,GAAK,IAE5CA,GAAmB,GAAKA,GAAmB,GAAK,IAE5C,MAEhB,yBAtCKP,GAZbpK,MAAM,wFAJVC,OAAOC,SAAP,WAAsB8J,EAAYtN,cAAlC,sBAA6DwH,EAAQlF,sBAsEzF,qBAAKf,UAAU,mCAAf,SACI,sBAAKA,UAAU,iEAAiEoD,MAAO,CAAEoB,MAAO,SAAhG,uBAEewH,EAAuBlN,EAASQ,QAAQqN,YAAY,GAFnE,aC1LLC,OAjFf,WAAoB,IAAD,EAEgBjK,IAAMC,SAAS,IAF/B,mBAER/D,EAFQ,KAEER,EAFF,OAGYsE,IAAMC,SAAS,IAH3B,mBAGRhE,EAHQ,KAGAR,EAHA,OAIiBuE,IAAMC,SAAS,IAJhC,mBAIR9D,EAJQ,KAIER,EAJF,OAKuBqE,IAAMC,SAAS,IALtC,mBAKRmJ,EALQ,KAKK5N,EALL,KAef,OARAwE,IAAMG,WAAU,WAEZ5E,EAAyBC,EAAgBC,EAAUC,EAAYC,KAGhE,IAMC,8BAEQO,EAASwG,KAAI,SAACW,EAASS,GACnB,OACI,eAACnD,EAAA,EAAD,CAAemD,GAAG,SAASzG,UAAU,oEAArC,UACI,sBAAKA,UAAU,6CAAf,UAEI,oBAAIA,UAAU,4CAAd,mDACA,qBAAIA,UAAU,iDAAd,8FAAiJ,uBAAjJ,gEAIA,oBAAIA,UAAU,4CAAd,6CAEJ,sBAAKA,UAAU,qDAAf,UACI,eAACyD,EAAA,EAAD,CAAOzD,UAAU,qCAAjB,6BAAuEgG,EAAQ9E,MAA/E,IAAuF8E,EAAQ7E,SAC/F,eAACsC,EAAA,EAAD,CAAOzD,UAAU,qCAAjB,mBAA6D+L,EAAYzC,QACzE,eAAC7F,EAAA,EAAD,CAAOzD,UAAU,qCAAjB,sBAAgE+L,EAAYxC,cAEhF,sBAAKvJ,UAAU,iDAAf,UACI,wBAAOA,UAAU,qCAAjB,oBAA8D+L,EAAYtN,iBAC1E,eAACgF,EAAA,EAAD,CAAOzD,UAAU,qCAAjB,8BAAwEnB,EAASS,UACjF,cAACmE,EAAA,EAAD,CAAOzD,UAAU,qCAAjB,kBAEJ,sBAAKA,UAAU,qDAAf,UACK4G,GAA2BrE,IAC3BqE,GAAuBrE,OAE5B,sBAAKvC,UAAU,qDAAf,UACK4G,KACAA,GAAsBrE,OAE3B,qBAAKvC,UAAU,mDAAf,SACK4G,GAAuBrE,GAA4BzD,EAAU2H,EAAI7H,EAAQmN,KAG9E,sBAAK/L,UAAU,qDAAf,UACK4G,GAAkBrE,IAClBqE,GAAmBrE,OAExB,qBAAKvC,UAAU,qDAAf,SAEQ+L,EAAYvC,eACZ,eAAC/F,EAAA,EAAD,CAAOzD,UAAU,qCAAjB,+BAAyE+L,EAAYvC,mBAG7F,sBAAKxJ,UAAU,wDAAf,UACI,cAACyD,EAAA,EAAD,CAAOzD,UAAU,sCAAjB,qIACA,cAACyD,EAAA,EAAD,CAAOzD,UAAU,sCAAjB,qIACA,cAACyD,EAAA,EAAD,CAAOzD,UAAU,sCAAjB,qIACA,cAACyD,EAAA,EAAD,CAAOzD,UAAU,sCAAjB,0IA9CGyG,SClCdoG,G,gKACjB,WACI,OACI,cAAC,GAAD,Q,GAHkClK,IAAMmK,e,SCiCrCC,OA9Bf,WAAwB,IAAD,EACoBpK,IAAMC,SAAS,CAAE0H,QAAS,SAD9C,mBACZ0C,EADY,KAEbC,GAFa,KAEEC,oBACfC,EAAcC,2BAAgB,CAChCC,QAAS,kBAAMJ,EAAaK,WAQhC,OACI,gCACI,sBAAMtN,UAAU,wDAAwDoD,MAAO4J,EAA/E,UACI,cAACjJ,EAAA,EAAD,CAAQ/D,UAAU,mCACdgE,MAAM,UACNC,QAVI,WAEhBjC,OAAOC,SAAW,qBAMV,kBAGA,cAAC8B,EAAA,EAAD,CAAQ/D,UAAU,8BACdgE,MAAM,UACNC,QAASkJ,EAFb,sBAIJ,cAAC,GAAD,CAAkBI,IAAKN,EAAc7J,MAAO,CAAE4J,uBCH3C,SAAStK,KAEtB,OAEE,eAAC,IAAD,CAAQ8K,OAAO,MAAf,UACE,cAAC,GAAD,IACA,qBAAKpK,MAAO,CAAEqB,OAAQ,WACtB,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgJ,KAAK,IAAIC,OAAK,EAACC,UAAWC,IACjC,cAAC,IAAD,CAAOH,KAAK,mBAAmBC,OAAK,EAACC,UAAWnI,IAEhD,cAAC,IAAD,CAAOiI,KAAK,wBAAwBC,OAAK,EAACC,UAAWlI,IAErD,cAAC,IAAD,CAAOgI,KAAK,cAAcC,OAAK,EAACC,UAAWE,KAE3C,cAAC,IAAD,CAAOJ,KAAK,yBAAyBC,OAAK,EAACC,UAAWG,KAEtD,cAAC,IAAD,CAAOL,KAAK,uCAAuCC,OAAK,EAACC,UAAWvG,KACpE,cAAC,IAAD,CAAOqG,KAAK,0BAA0BC,OAAK,EAACC,UAAWvG,KACvD,cAAC,IAAD,CAAOqG,KAAK,iCAAiCC,OAAK,EAACC,UAAWxE,KAC9D,cAAC,IAAD,CAAOsE,KAAK,iCAAiCC,OAAK,EAACC,UAAWrF,KAC9D,cAAC,IAAD,CAAOmF,KAAK,oBAAoBC,OAAK,EAArC,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,WAAWC,OAAK,EAACC,UAAWZ,KACxC,cAAC,IAAD,CAAOU,KAAK,SAASC,OAAK,EAACC,UAAW5D,KACtC,cAAC,IAAD,CAAO0D,KAAK,aAAaC,OAAK,EAACC,UAAWI,W,kBCjC9CC,GAAcC,SAASC,eAAe,QAE1CC,IAASC,OAIP,cAAC,GAAD,IAIEJ,M","file":"static/js/main.68afd318.chunk.js","sourcesContent":["import PouchDB from 'pouchdb';\n\n\nconst db = new PouchDB('afmuc')\n\n//db.remove('Section', \"5-9318008f9971f1ea5f731bd60c9041c5\") //for development/testing purpose\n//destroying the db for development/testing purpose\n//db.destroy()\n\ndb.allDocs({ include_docs: true, })\n    .then(result => console.log(result))\n\nexport default db","import db from '../db'\n\nexport const dbServices = {\n    //FETCH OR GET REQUESTS\n    getResultData: (setCurrentData, setScore, setStudent, setSubjects) => {\n\n        db.get('resultData')\n            .then(result => {\n                if (result) {\n                    //is resultData available in db store it in State\n                    setCurrentData(result.resultData)\n                    //fetch classroom Data from db and save in State\n                    db.get(result.resultData.selectedClass.toLocaleLowerCase()) // e.g nursery 1 === result.resultData.selectedClass.toLocaleLowerCase()\n                        .then(res => {\n                            // result === {subjects: Array(3), students: Array(2), scores: result.scores, _id: \"basic 1\", _rev: \"11-65f4389ac05f9a59a734892a9aff5b10\"}\n                            setScore(res.scores);\n                            //      scores: {\n                            //     eng: [{ fName, sName, Test1, Test2, Exam }]\n                            //     math:[{fName,sName,Test1,Test2,Exam}]\n                            // }\n                            setStudent(res.students);\n                            // students: Array(3) i.e students = [{fName,sName,gender}]\n                            setSubjects(res.subjects)\n                            // subjects: Array(3) i.e subjects = [{subjectName:\"ENGLISH STUDIES\", teacherName:\"MRS. HAFSOH\"}, eng}]\n                        })\n                }\n            })\n            .catch(err => console.log(err))\n    },\n\n    getResultGeneratorData: (ResultGenData, setResultGenData, tempClassValue) => {\n        db.get('Section')\n            .then(result => {\n                setResultGenData({ ...ResultGenData, noOfClasses: result.category.length })\n                result.category.forEach((element, index, array) => {\n                    db.get(element.cat_name.toLocaleLowerCase(),\n                        (err, res) => {\n                            if (res) {\n                                tempClassValue = tempClassValue.concat(res.Classes)\n                                setResultGenData({ ...ResultGenData, noOfClasses: index + 1, class: tempClassValue, selectedClass: tempClassValue[0].class_name })\n\n                            }\n                            if (err) {\n                                return (err)\n                            }\n\n                        }\n                    )\n\n                })\n\n            })\n    },\n\n    getSubjects: (className, setAllmySubjects, AllmySubjects) => {\n        db.get(className)\n            .then(result => {\n                if (result.subjects)\n                    setAllmySubjects(AllmySubjects.concat(result.subjects))\n            })\n            .catch(err => {\n                if (err) {\n                    console.log(err)\n                }\n            })\n    },\n\n    getStudentsAndScore: (ClassName, setAllmyStudent, AllmyStudent, setScore) => {\n        db.get(ClassName)\n            .then(result => {\n                if (result.students) {\n                    setAllmyStudent(AllmyStudent.concat(result.students))\n                }\n                if (result.scores) {\n                    setScore(result.scores)\n                }\n            })\n            .catch(err => {\n                if (err) {\n                    setAllmyStudent([])\n                }\n            })\n    },\n\n    fetchAllClasses: (sectionName, setClasses, Classes) => {\n        db.get(sectionName)\n            .then(result => {\n                console.log(result.Classes)\n                setClasses(Classes.concat(result.Classes))\n            })\n            .catch(err => {\n                if (err) {\n                    console.log({ afterError: Classes })\n                    setClasses([])\n                    console.log(err)\n                }\n            })\n    },\n\n    fetchAllSections: (setClassSection, ClassSection) => {\n        db.get('Section')\n            .then(result => {\n                console.log(result.category)\n                setClassSection(ClassSection.concat(result.category))\n            })\n            .catch(err => {\n                if (err) {\n                    setClassSection([])\n                    console.log(err)\n                    console.log({ afterError: ClassSection })\n                }\n            })\n    },\n\n    fetchStudentsAndSubjectsAnsScores: (ClassName, setstudents, setAllSubject, setScore, allSubjects) => {\n        db.get(ClassName)\n            .then(result => {\n                if (result.students)\n                    setstudents(result.students)\n                if (result.subjects) {\n\n                    setAllSubject({ ...allSubjects, subjects: result.subjects, currentSubject: result.subjects[0].subjectName, })\n                }\n                if (result.scores) {\n                    setScore({ scores: result.scores[allSubjects.currentSubject] })\n                }\n\n            })\n            .catch(err => {\n                if (err) {\n                    console.log(err)\n                }\n            })\n    },\n\n    fetchScoreData: (ClassName, currentSubject, setScore, tempData) => {\n        db.get(ClassName)\n            .then(result => {\n                console.log(result)\n                if (currentSubject) {\n                    //CURRENT SUBJECT IS NOT EMPTY\n                    console.log(currentSubject)\n                    if (result.scores[currentSubject]) {\n                        //IF THERE IS SCORE FOR THAT CURRENT SUBJECT\n                        if (result.students.length > result.scores[currentSubject].length) {\n                            //IF NUMBER OF STUDENTS IS INCREASED UNDER MANAGEMENT STUDENT PAGE ADD THE NEW STUDENTS TO THE LIST OF scoreToDisplay\n                            console.log(\"scores available for this subject\")\n                            setScore(result.scores[currentSubject].concat(result.students.slice(result.scores[currentSubject].length)))\n                        }\n                        if (result.scores[currentSubject].length === result.students.length) {\n                            //IF NO ADDITIONAL STUDENTS THEN DISPLAY DB DATA FOR CURRENT SUBJECT\n                            setScore(result.scores[currentSubject])\n                        }\n                    }\n                    else if (!result.scores[currentSubject]) {\n                        //IF SCORES DOES NOT EXIST IN DB (FIRST INSTANCE) FOR CURRENT SUBJECT THEN CREATE THE LIST BELOW BASE ON STUDENTS IN DB ALREADY\n                        result.students.forEach((element, index) => {\n                            tempData = tempData.concat({ fName: element.fName, sName: element.sName, Test1: 0, Test2: 0, Exam: 0, BForward: 0 })\n                        })\n                        setScore(tempData)\n                    }\n                }\n                if (!result.scores) {\n                    //IF SCORES DOES NOT EXIST AT ALL IN DB (FIRST INSTANCE) THEN CREATE THE LIST BELOW BASE ON STUDENTS IN DB ALREADY\n                    result.students.forEach((element, index) => {\n                        tempData = tempData.concat({ fName: element.fName, sName: element.sName, Test1: 0, Test2: 0, Exam: 0, BForward: 0 })\n                    })\n                    setScore(tempData)\n                }\n            }).catch(err => {\n                if (err) {\n                    console.log(err)\n                }\n            })\n    },\n\n    changePasswordinDb: (profile) => {\n        db.get('userId')\n            .then(doc => {\n                db.put({\n                    _id: 'userId',\n                    _rev: doc._rev,\n                    username: doc.username,\n                    password: profile.password\n                }).then(result => {\n                    alert(\"Password Successfully Changed\")\n                    window.location = '/'\n                    console.log(result)\n                })\n                    .catch(function (err) {\n                        console.log(err)\n                    })\n            }).catch(getResultError => {\n                console.log(\"getResult Error: \" + getResultError)\n            })\n    },\n\n    initalizeAdminCredentials: () => {\n        db.get('userId')\n            .then(doc => {\n                db.put({\n                    _id: 'userId',\n                    _rev: doc._rev,\n                    username: doc.username,\n                    password: doc.password\n                }).then(result => { console.log(result) })\n                    .catch(function (err) {\n                        console.log(err)\n                    })\n            }).catch(getResultError => {\n                if (getResultError)\n                    db.put({\n                        _id: 'userId',\n                        username: 'admin',\n                        password: 'admin'\n                    }).then(result => { console.log(result) })\n                        .catch(function (err) {\n                            console.log(err)\n                        })\n            })\n\n    },\n\n    authenticateAdmin: (profile) => {\n\n        db.get('userId').\n            then(result => {\n                console.log(result)\n                if (profile.username === result.username & profile.password === result.password) {\n                    window.location = '/allclassSection'\n                }\n                else {\n                    alert('Wrong username or Passsword')\n                }\n            }).catch(function (err) {\n                console.log(err)\n            });\n\n    },\n\n    //API POST REQUESTS\n    saveScoreSheet: (ClassName, currentSubject, scoreDisplayData, settextChange, textChange) => {\n        db.get(ClassName)\n            .then(doc => {\n                db.put({\n                    _id: doc._id,\n                    _rev: doc._rev,\n                    subjects: doc.subjects,\n                    students: doc.students,\n                    scores: {\n                        ...doc.scores,\n                        [currentSubject]: scoreDisplayData\n                    }\n                }).then(result => {\n                    if (result) {\n                        settextChange(!textChange) //this is use to only redisplay the screen for the update\n                        alert('Scores Saved Successfully')\n                    }\n                })\n                    .catch(function (err) {\n                        if (err)\n                            console.log('not updated')\n                    });\n            }).catch(err => {\n                if (err)\n                    db.put({\n                        _id: ClassName,\n                        scores: {\n                            [currentSubject]: scoreDisplayData,\n                        }\n                    }).then(result => {\n                        if (result) {\n                            settextChange(!textChange)\n                            alert('Scores Saved Successfully')\n                        }\n                    }).catch(function (err) {\n                        if (err)\n                            console.log('not posted');\n                    });\n            })\n    },\n\n    saveClasses: (sectionName, Classes) => {\n        db.get(sectionName)\n            .then(doc => {\n                db.put({\n                    _id: sectionName,\n                    _rev: doc._rev,\n                    Classes: Classes,\n                    no_of_classes: 0\n                }).then(result => {\n                    if (result)\n                        window.location = `/${sectionName}/classes`\n                }).catch(function (err) {\n                    if (err)\n                        console.log('not updated')\n                });\n            }).catch(err => {\n                if (err)\n                    db.put({\n                        _id: sectionName,\n                        Classes: Classes,\n                        no_of_classes: 0\n                    }).then(result => {\n                        if (result)\n                            window.location = `/${sectionName}/classes`\n                    }).catch(function (err) {\n                        if (err)\n                            console.log('not posted');\n                    });\n            })\n    },\n\n    saveAllSection: (ClassSection) => {\n        db.get('Section')\n            .then(doc => {\n                db.put({\n                    _id: 'Section',\n                    _rev: doc._rev,\n                    category: ClassSection,\n                    no_of_classes: 0\n                }).then(result => {\n                    if (result)\n                        window.location = '/allclassSection'\n                }).catch(function (err) {\n                    if (err)\n                        console.log('not updated')\n                });\n            }).catch(err => {\n                if (err)\n                    db.put({\n                        _id: 'Section',\n                        category: ClassSection,\n                        no_of_classes: 0\n                    }).then(result => {\n                        if (result)\n                            window.location = '/allclassSection'\n                    }).catch(function (err) {\n                        if (err)\n                            console.log('not posted');\n                    });\n            })\n    },\n\n    dbUpdateSubject: (className, AllmySubjects) => {\n        db.get(className)\n            .then(doc => {\n                db.put({\n                    _id: className,\n                    _rev: doc._rev,\n                    scores: doc.scores,\n                    students: doc.students,\n                    subjects: AllmySubjects,\n                }).then(result => {\n                    if (result)\n                        console.log(result)\n                    window.location = `/${className}/classroom`\n                }).catch(function (err) {\n                    if (err)\n                        console.log('not updated')\n                });\n            }).catch(err => {\n                if (err)\n                    db.put({\n                        _id: className,\n                        subjects: AllmySubjects,\n                    }).then(result => {\n                        if (result)\n                            console.log(result)\n                        window.location = `/${className}/classroom`\n                    }).catch(function (err) {\n                        if (err)\n                            console.log('not posted');\n                    });\n            })\n    },\n\n    saveStudents: (ClassName, AllmyStudent,) => {\n        db.get(ClassName)\n            .then(doc => {\n                db.put({\n                    _id: ClassName,\n                    _rev: doc._rev,\n                    subjects: doc.subjects,\n                    scores: doc.scores,\n                    students: AllmyStudent\n                }).then(result => {\n                    if (result)\n                        window.location = `/${ClassName}/classroom`\n                }).catch(function (err) {\n                    if (err)\n                        console.log('not updated')\n                });\n            }).catch(err => {\n                if (err)\n                    db.put({\n                        _id: ClassName,\n                        students: AllmyStudent,\n                    }).then(result => {\n                        if (result)\n                            window.location = `/${ClassName}/classroom`\n                    }).catch(function (err) {\n                        if (err)\n                            console.log('not posted');\n                    });\n\n            })\n\n    },\n\n    saveresultData: (Data) => {\n        db.get('resultData')\n            .then(doc => {\n                db.put({\n                    _id: doc._id,\n                    _rev: doc._rev,\n                    resultData: Data\n                }).then(function (response) {\n                    if (response)\n                        window.location = '/results'\n                }).catch(function (err) {\n                    console.log(err)\n                })\n            })\n            .catch(function (err) {\n                if (err) {\n                    db.put({\n                        _id: 'resultData',\n                        resultData: Data,\n                    }).then(result => {\n                        if (result) {\n                            alert('Saved Successfully')\n                            window.location = '/results'\n                        }\n\n                    }).catch(function (err) {\n                        if (err) console.log('not posted');\n                    });\n                }\n            })\n    },\n    //UPDATING DB\n    deleteStudentfromScore: (ClassName, Scores,) => {\n        db.get(ClassName)\n            .then(doc => {\n                db.put({\n                    _id: ClassName,\n                    _rev: doc._rev,\n                    subjects: doc.subjects,\n                    students: doc.students,\n                    scores: Scores\n                }).then(function (response) {\n                    if (response)\n                        console.log(\"Done\")\n                }).catch(function (err) {\n                    console.log(err);\n                })\n            })\n    }\n}\n\n\n\n","import React, { useEffect } from 'react';\nimport { Card, Form, FormGroup, Label, Input, Button } from 'reactstrap';\nimport { dbServices } from '../../services/services';\n\n\n\n\nexport default function App() {\n\n    const [profile, setProfile] = React.useState({\n        username: '',\n        password: '',\n    })\n\n\n    useEffect(() => {\n\n        //initial DB with Admin Credentials\n        dbServices.initalizeAdminCredentials()\n    }, [])\n\n    const handleChange = (e) => {\n        const value = e.target.value;\n        setProfile({\n            ...profile,\n            [e.target.name]: value\n        })\n\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if (profile.username === '' | profile.password === '') {\n            alert('username or password cannot be empty')\n        }\n\n\n        else {\n            //authenticate Admin\n            dbServices.authenticateAdmin(profile)\n        }\n    }\n    return (\n        <div className='d-flex justify-content-center align-items-center flex-column'>\n            <div style={{ marginTop: '-100px' }}></div>\n            <Card className='container w-50 shadow-lg p-3 d-flex flex-column align-items-center'>\n                <h4 className='text-success font-weight-bold'>Login</h4>\n                <Form >\n                    <FormGroup >\n                        <Label for=\"username\" className='text-success font-weight-bold'>Username</Label>\n                        <Input type=\"text\" name=\"username\" value={profile.username} onChange={handleChange} placeholder=\"username\" />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"password\" className='text-success font-weight-bold'>password</Label>\n                        <Input type=\"password\" name=\"password\" value={profile.password} onChange={handleChange} placeholder=\"xxxxxxx\" />\n                    </FormGroup>\n                </Form>\n                <div className='d-flex justify-content-lg-center '>\n                    <Button className='text-light font-weight-bold'\n                        color='success'\n                        onClick={onSubmit}>Submit</Button>\n                </div>\n\n            </Card >\n        </div>\n    )\n}\n\n\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { CardTitle, Button } from 'reactstrap';\n\nfunction AddingMoreCard({ sectionName, addtype }) {\n    const upperCaseProp = addtype.toLocaleUpperCase() //convert the upper case addtype props to Uppercase to be use in card \n    return (\n        <div className='d-flex flex-column align-items-center '>\n            {\n                sectionName ?\n                    <Link className=\"nav-link active text-light\" to={`/${sectionName}/add${addtype}`} >\n                        <Button color='light' className='m-3 d-flex flex-column align-items-center text-success border border-success shadow' style={{ width: '170px', height: '200px' }}>\n                            <CardTitle className='d-flex justify-content-center align-items-center  m-1' style={{ width: '100px', height: '100px' }}>\n                                <h6 className='text-success text-center mt-2 font-weight-bold'>\n                                    CLICK HERE TO ADD/DELETE MORE {upperCaseProp}</h6>\n                            </CardTitle>\n                            <h3 className='text-success font-weight-bold' style={{ fontSize: '60px' }}>+</h3>\n                        </Button >\n                    </Link >\n                    :\n                    <Link className=\"nav-link active text-light\" to={`/add${addtype}`} >\n                        <Button color='light' className='m-3 d-flex flex-column align-items-center text-success border border-success shadow' style={{ width: '170px', height: '200px' }}>\n                            <CardTitle className='d-flex justify-content-center align-items-center  m-1' style={{ width: '100px', height: '100px' }}>\n                                <h6 className='text-success mt-2 text-center font-weight-bold'>\n                                    CLICK HERE TO ADD/DELETE MORE {upperCaseProp}</h6>\n                            </CardTitle>\n                            <h3 className='text-success font-weight-bold' style={{ fontSize: '60px' }}>+</h3>\n                        </Button >\n                    </Link >\n            }\n        </div>\n    )\n}\n\nexport default AddingMoreCard\n","import React from 'react';\nimport { CardTitle, Button } from 'reactstrap';\nimport { Link } from 'react-router-dom'\n\n\n\n\nconst CardComp = ({ Class, ClassSection }) => {\n    let lowerCaseClassSection;\n    let lowerCaseClass;\n    if (Class) {\n        lowerCaseClass = Class.class_name.toLocaleLowerCase()\n        console.log({ FromCard: lowerCaseClass })\n        return (\n            < Link className=\"nav-link active text-light\" to={`/${lowerCaseClass}/classroom`} >\n                <Button color='light' className='m-3 d-flex flex-column align-items-center text-success border border-success shadow' style={{ width: '170px', height: '200px' }}>\n                    <CardTitle className='d-flex justify-content-center align-items-center  m-1' style={{ width: '100px', height: '100px' }}>\n                        <h4 className='text-center font-weight-bolder text-success' >\n                            {Class.class_name}\n                        </h4>\n                    </CardTitle>\n                    <div className='text-center'> <em>Class Teacher:</em> <h6 className='font-weight-bolder'>{Class.teacher_name}</h6> </div>\n                </Button >\n            </Link >\n        )\n    }\n    if (ClassSection) {\n        lowerCaseClassSection = ClassSection.cat_name.toLocaleLowerCase()\n        return (\n            < Link className=\"nav-link active text-light\" to={`/${lowerCaseClassSection}/Classes`} >\n                <Button color='light' className='m-3 d-flex flex-column align-items-center text-success border border-success shadow' style={{ width: '170px', height: '200px' }}>\n                    <CardTitle className='d-flex justify-content-center align-items-center  m-1' style={{ width: '100px', height: '100px' }}>\n\n                        <h5 className='text-center font-weight-bolder text-success' >\n                            {ClassSection.cat_name} SECTION\n                                </h5>\n\n                    </CardTitle>\n                    <div className='text-center'> <em>Head of Section:</em> <h6 className='font-weight-bolder'>{ClassSection.hod_name}</h6> </div>\n                </Button >\n            </Link >\n        )\n    }\n\n\n};\n\nexport default CardComp;\n","import React from 'react'\n\nfunction Loading() {\n    return (\n        <div>\n            <h1 className='text-success font-weight-bold' >Loading .... </h1>\n        </div>\n    )\n}\n\nexport default Loading\n","import React from 'react'\nimport Card from './Card'\nimport Loading from '../reusables/Loading'\n\nconst CardList = ({ Classes, ClassSection }) => {\n\n    if (Classes) {\n        return (\n            !Classes || Classes.length === 0 ?\n                <Loading />\n                :\n                Classes.length !== 0 && Classes.map((Class, index) => {\n                    return (\n                        <div key={index}>\n                            <Card Class={Class} />\n                        </div>\n                    )\n                })\n        )\n    }\n\n    if (ClassSection) {\n        return (\n            !ClassSection || ClassSection.length === 0 ?\n                <Loading />\n                :\n                ClassSection !== 0 && ClassSection.map((ClassSection, index) => {\n                    return (\n                        <div key={index}>\n                            <Card ClassSection={ClassSection} />\n                        </div>\n                    )\n                })\n        )\n    }\n\n\n\n}\n\nexport default CardList","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { CardTitle, Button } from 'reactstrap';\n\n\n\nfunction AddingCard({ sectionName, addtype }) {\n    console.log(sectionName)\n    console.log(addtype)\n    /**\n     * This component serves two purposes:\n     * 1. Display card showing 'Click here to add section\" or 'click here to add class' \n     * depending on prop passed to it from \"AllClassSection\" component or \"AllClasses\" component.\n     */\n    const upperCaseAddtype = addtype.toLocaleUpperCase() //convert the upper case addtype props to Uppercase to be use in card \n    return (\n        <div className='d-flex flex-column align-items-center '>\n            {\n                /**NB: sectionName is available only if there exist a section already and sectionName and addtype prop are the\n                 * props passed from \"AllClassSection\" component display the card here\n                 * the sectionName prop is used for the Link to the appropriate route (:sectionname/addclass) e.g(nursery/addclass) as in:\n                 *<Route path=\"/:sectionname/addclass\" exact component={addClassForm} />\n                */\n                sectionName ?\n                    <Link className=\"nav-link active text-light\" to={`/${sectionName}/add${addtype}`} >\n                        <Button color='light' className='m-3 d-flex flex-column align-items-center text-success border border-success shadow' style={{ width: '170px', height: '200px' }}>\n                            <CardTitle className='d-flex justify-content-center align-items-center  mt-2' style={{ width: '100px', height: '100px' }}>\n                                <h4 className='text-success mt-2 text-center font-weight-bold'>\n                                    CLICK HERE TO ADD {upperCaseAddtype}</h4>\n                            </CardTitle>\n                            <h3 className='text-success font-weight-bold' style={{ fontSize: '60px' }}>+</h3>\n                        </Button >\n                    </Link >\n                    :\n                    /**if no Section Availabe and addtype is the only prop passed from \"AllClassSection\" component display the card here as in:\n                     * <Route path=\"/addsection\" exact component={AddClassSectionForm} />\n                     */\n                    <Link className=\"nav-link active text-light\" to={`/add${addtype}`} >\n                        <Button color='light' className='m-3 d-flex flex-column align-items-center text-success border border-success shadow' style={{ width: '170px', height: '200px' }}>\n                            <CardTitle className='d-flex justify-content-center align-items-center  mt-2' style={{ width: '100px', height: '100px' }}>\n                                <h4 className='text-success mt-2 text-center font-weight-bold'>\n                                    CLICK HERE TO ADD {upperCaseAddtype}</h4>\n                            </CardTitle>\n                            <h3 className='text-success font-weight-bold' style={{ fontSize: '60px' }}>+</h3>\n                        </Button >\n                    </Link >\n            }\n        </div>\n    )\n}\n\nexport default AddingCard\n","import React, { useEffect, useState } from 'react'\n\nimport AddingMoreCard from '../cards/AddingMoreCard';\n\nimport CardList from '../cards/CardList'\nimport AddingCard from '../cards/AddingCard'\n\nimport { dbServices } from '../../services/services';\n\nfunction AllClassSection() {\n    /**\n     * 1.   useEffect = fetch all class category and keep in useState = ClassSection \n     * 2.   if ClassSection.length === 0 ? display addClassSection component\n     * 3.   if ClassSection.length !== 0 ? display ClassSectionList components\n     * 4.   if any card in ClassSectionList component is clicked? window.location = '/allClass' with props of ClassSectionId\n     *  */\n\n    const [ClassSection, setClassSection] = useState([])\n\n    useEffect(() => {\n        //* 1.   useEffect = fetch all class category\n        dbServices.fetchAllSections(setClassSection, ClassSection)\n\n    }, [])\n    return (\n        <div>\n\n\n            <div className='d-flex justify-content-center'>\n                {\n                    ClassSection.length === 0 ?\n                        <div>\n                            <h4 className='text-success text-center mb-3 font-weight-bold'>\n                                <em>\n                                    SORRY YOU HAVE NO SECTION AVAILABLE. <br />PLEASE CLICK THE BUTTON BELOW TO ADD SECTION\n                                </em>\n                            </h4>\n                            <AddingCard addtype='section' />\n                        </div>\n                        :\n                        // ClassSection.length === 0 ?\n                        //     <Loading /> :\n                        ClassSection.length !== 0 &&\n                        <div className='d-flex flex-column flex-wrap'>\n                            <h4 className='justify-self-center text-center text-danger mt-4 font-weight-bold' >AVAILABLE SECTIONS</h4>\n\n                            <div className='d-flex flex-row flex-wrap'>\n                                <CardList ClassSection={ClassSection} />\n                                <AddingMoreCard addtype='section' />\n                            </div>\n                        </div>\n\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default AllClassSection\n","import React, { useEffect, useState } from 'react'\n// import db from '../../db'\n\n\nimport CardList from '../cards/CardList'\nimport AddingCard from '../cards/AddingCard'\nimport AddingMoreCard from '../cards/AddingMoreCard';\n\nimport { dbServices } from '../../services/services'\n\n\nfunction AllClasses(props) {\n    /**\n     * 1.   useEffect = fetch all class category and keep in useState = Classes \n     * 2.   if Classes.length === 0 ? display addClasses component\n     * 3.   if Classes.length !== 0 ? display ClassesList components\n     * 4.   if any card in ClassesList component is clicked? window.location = '/allClass' with props of ClassesId\n     *  */\n\n    const [Classes, setClasses] = useState([])\n    let sectionName = props.match.params.sectionname\n\n\n    //* 1.   useEffect = fetch all class category\n    useEffect(() => {\n        //fetch All classes\n        dbServices.fetchAllClasses(sectionName, setClasses, Classes)\n    }, [])\n    return (\n        <div>\n\n            <div className='container d-flex justify-content-center align-items-center flex-column '>\n\n                <h4 className='justify-self-center text-center text-danger mt-4 font-weight-bold' >{sectionName.toLocaleUpperCase()} SECTION</h4>\n                {\n                    Classes.length === 0 ?\n                        <div>\n                            <h4 className='text-success text-center mb-3 font-weight-bold'>\n                                <em>\n                                    SORRY YOU HAVE NO CLASSES AVAILABLE IN THIS SECTION. <br />PLEASE CLICK THE BUTTON BELOW TO ADD CLASS TO THIS SECTION\n                                </em>\n                            </h4>\n                            <AddingCard sectionName={sectionName} addtype='class' />\n                        </div>\n                        :\n                        // Classes.length === 0 ?\n                        //     <Loading />\n                        //     :\n                        Classes.length !== 0 &&\n                        <div className='d-flex flex-row flex-wrap'>\n                            <CardList Classes={Classes} />\n                            <AddingMoreCard sectionName={sectionName} addtype='class' />\n                        </div>\n\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default AllClasses\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { CardTitle, Button } from 'reactstrap';\n\n\nfunction ManageCard({ currentClass, student, subject, NoOfSubjects, NoOfStudents }) {\n\n    if (student && subject) {\n        return (\n            <div className='d-flex'>\n                < Link className=\"nav-link active text-light\" to={`/${currentClass}/${student}`} >\n                    <Button color='light' className='m-3 d-flex flex-column align-items-center text-success border border-success shadow' style={{ width: '170px', height: '200px' }}>\n                        <CardTitle className='d-flex justify-content-center align-items-center  m-1' style={{ width: '100px', height: '100px' }}>\n                            <h3\n                                className='text-center font-weight-bolder text-success' >\n                                Manage Students</h3>\n                        </CardTitle>\n                        <div className='text-center'> <em>Total Number of Students: {NoOfStudents}</em>\n                            <h6 className='font-weight-bolder'>                            </h6>\n                        </div>\n\n                    </Button >\n                </Link >\n                < Link className=\"nav-link active text-light\" to={`/${currentClass}/${subject}`} >\n                    <Button color='light' className='m-3 d-flex flex-column align-items-center text-success border border-success shadow' style={{ width: '170px', height: '200px' }}>\n                        <CardTitle className='d-flex justify-content-center align-items-center  m-1' style={{ width: '100px', height: '100px' }}>\n                            <h3\n                                className='text-center font-weight-bolder text-success' >\n                                Manage Subjects</h3>\n                        </CardTitle>\n                        <div className='text-center'> <em>Total Number of Subjects:{NoOfSubjects}</em>\n                            <h6 className='font-weight-bolder'>                            </h6>\n                        </div>\n                    </Button >\n                </Link >\n            </div>\n\n        )\n    }\n}\nexport default ManageCard\n","import React, { useState, useEffect } from \"react\";\nimport Loading from '../reusables/Loading'\nimport { Table, Input, Button } from 'reactstrap';\nimport { dbServices } from \"../../services/services\";\n\nconst ScoreSheetTables = ({ currentSubject, ClassName }) => {\n\n    const [scoreDisplayData, setScore] = useState([])\n    const [textChange, settextChange] = useState(true)\n\n\n    useEffect(() => {\n        let tempData = [];\n        dbServices.fetchScoreData(ClassName, currentSubject, setScore, tempData)\n    }, [currentSubject])\n\n    const changeHandler = async (e) => {\n        let value = parseInt(e.target.value, 10) || 0;  //assign an integer to value OR 0 if NaN\n        let currentIndex = parseInt(e.target.id, 10) //assign an integer to value OR 0 if NaN\n        console.log(currentIndex)\n        console.log(scoreDisplayData)\n        let tempStateData = scoreDisplayData //Create a dummy array variable to hold scoreDisplayData \n\n        tempStateData[currentIndex][e.target.name] = value //NB: scoreDisplayData  === [{ fName: element.fName, sName: element.sName, Test1: 0, Test2: 0, Exam: 0 }]\n        setScore(tempStateData)\n\n        settextChange(!textChange) //this is use to update state(causes change to DOM) so a re-render occur\n    }\n\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        if (scoreDisplayData.length === 0) {\n            alert(`Atleast 1 'Student's Score' must be must added`)\n        }\n\n        //If score is not enter for any student\n        else if (scoreDisplayData.length !== 0) {\n            let checkifAllScoreFieldArray = scoreDisplayData.filter(\n                // To check a key is available in an object === obj.hasOwnProperty(\"key\")\n                (element) => !element.hasOwnProperty(\"Test1\") || !element.hasOwnProperty(\"Test2\") || !element.hasOwnProperty(\"Exam\") || !element.hasOwnProperty(\"BForward\")\n            )\n            console.log(checkifAllScoreFieldArray)\n\n            if (checkifAllScoreFieldArray.length > 0) {\n                alert(\"'Test 1', Test 2' or 'Exam' or 'Total B/Forward'\" + 'for ' + checkifAllScoreFieldArray[0].fName + \" \" + checkifAllScoreFieldArray[0].sName + ' cannot be empty')\n            }\n            else {\n                //save scoreSheet to DB\n                dbServices.saveScoreSheet(ClassName, currentSubject, scoreDisplayData, settextChange, textChange)\n            }\n\n        }\n\n\n    }\n    return (\n        <div className='d-flex justify-content-center align-items-center flex-column '>\n\n            {scoreDisplayData.length === 0 ?\n                <div></div>\n                :\n                scoreDisplayData === undefined ?\n                    <Loading /> :\n\n                    <div >\n\n                        <Table className='text-success' bordered hover striped>\n                            <thead>\n                                <tr>\n                                    <th>STUDENT NAME </th>\n                                    <th>TEST 1</th>\n                                    <th>TEST 2</th>\n                                    <th>EXAM</th>\n                                    <th>TOTAL B/FORWARD</th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {\n                                    scoreDisplayData.length !== 0 &&\n                                    scoreDisplayData.map((scoreToDisplay, index) => {\n\n                                        return (\n                                            < tr key={index}>\n                                                <td>{scoreToDisplay.fName} {scoreToDisplay.sName}</td>\n                                                <td>\n                                                    <Input type=\"number\" id={index} name=\"Test1\" value={scoreToDisplay.Test1} onChange={changeHandler} placeholder=\"TEST 1 SCORE\" />\n                                                </td>\n\n                                                <td>\n                                                    <Input type=\"number\" id={index} name=\"Test2\" value={scoreToDisplay.Test2} onChange={changeHandler} placeholder=\"TEST 2 SCORE\" />\n                                                </td>\n                                                <td>\n                                                    <Input type=\"number\" id={index} name=\"Exam\" value={scoreToDisplay.Exam} onChange={changeHandler} placeholder=\"EXAM SCORE\" />\n                                                </td>\n                                                <td>\n                                                    <Input type=\"number\" id={index} name=\"BForward\" value={scoreToDisplay.BForward} onChange={changeHandler} placeholder=\"TOTAL B/FORWARD\" />\n                                                </td>\n                                            </tr>\n                                        )\n                                    })}\n                            </tbody>\n                        </Table >\n                        <div className='d-flex align-self-center justify-content-lg-center '>\n                            <Button className='text-light font-weight-bold'\n                                color='success'\n                                onClick={onSubmit}>Save Score Data</Button>\n                        </div>\n                    </div>\n            }\n        </div >\n\n\n    );\n};\n\nexport default ScoreSheetTables;","import React, { useState, useEffect } from 'react'\nimport ManageCard from '../cards/ManageCard'\nimport { Label, Input } from 'reactstrap';\nimport ScoreSheetTable from './ScoreSheetTables';\nimport { dbServices } from '../../services/services';\n\nfunction ClassRoom(props) {\n    const subjectName = props.match.params.subjectName\n\n    let ClassName = props.match.params.myClassName.toLocaleLowerCase()\n    const [students, setstudents] = useState([])\n    const [allSubjects, setAllSubject] = useState({ subjects: [], })\n\n    const [scoreDisplayData, setScore] = useState({})\n\n    useEffect(() => {\n\n        //fetch All subjects and scores for subject\n        dbServices.fetchStudentsAndSubjectsAnsScores(ClassName, setstudents, setAllSubject, setScore, allSubjects)\n\n        if (subjectName) {\n            alert('ERROR OCCURED!\\n \\nPlease ensure to enter ' + subjectName + ' score for each student')\n        }\n    }, [])\n\n    const subjectChangeHandler = (e) => {\n        const value = e.target.value;\n        const upperCaseValue = value.toLocaleUpperCase()\n        setAllSubject({\n            ...allSubjects,\n            currentSubject: upperCaseValue\n        })\n    }\n    return (\n        <div className='d-flex'>\n\n\n            <div className='container d-flex justify-content-center align-items-center flex-column '>\n\n                <h4 className='text-danger font-weight-bold' >\n                    {ClassName.toLocaleUpperCase()}</h4>\n\n                {/* Display the Manage Cards for Students and Subjects */}\n\n                <ManageCard currentClass={ClassName} NoOfSubjects={allSubjects.subjects.length}\n                    NoOfStudents={students.length} student='managestudents' subject='managesubjects' />\n\n                <div>\n                    {/* Dropdown options for Subjects */}\n                    {\n                        // Display this message if no Subject and Student Availabe for the Class\n                        allSubjects.subjects.length === 0 || students.length === 0 ?\n                            <h6 className='text-danger font-weight-bold' >\n                                <em>You have either no 'Subject' or 'Student' registered for this class.\n                                    <br />Please use  the buttons above to add Subjects and Students\n                                </em></h6>\n                            :\n                            // the subjects Option drop\n                            < div >\n                                <h4 className='text-success text-center font-weight-bold' >Scoresheet for\n                                        <i className='text-danger'>{allSubjects.currentSubject}</i></h4>\n                                <div className='d-flex'>\n                                    < Label for=\"exampleSelect\">Change Subject:</Label>\n                                    <Input type=\"select\" name=\"currentSubject\" value={allSubjects.currentSubject}\n                                        onChange={subjectChangeHandler} >\n                                        {\n                                            allSubjects.subjects.map((state, index) => (\n                                                <option key={index} value={state.subjectName}>{state.subjectName}</option>\n                                            ))\n                                        }\n                                    </Input>\n                                </div>\n                            </div>\n                    }\n\n                </div>\n                {\n                    // students.length !== 0 &&\n                    < ScoreSheetTable ClassName={ClassName} students={students} scoreDisplayData={scoreDisplayData.score}\n                        currentSubject={allSubjects.currentSubject} />\n                }\n            </div>\n        </div >\n    )\n}\n\nexport default ClassRoom\n","import React, { useState, useEffect } from 'react';\nimport { Table, Card, Form, Label, Input, Button, FormGroup } from 'reactstrap';\n\nimport { dbServices } from '../../services/services';\n\n\n\n\n\nfunction AddclassCategoryForm() {\n\n    const [ClassSection, setClassSection] = useState([])\n    const [Section, setSection] = React.useState({ cat_name: '', hod_name: '', })\n\n    useEffect(() => {\n        //fetchAllSection\n        dbServices.fetchAllSections(setClassSection, ClassSection)\n\n    }, [])\n\n\n\n    const changeHandler = (e) => {\n        const value = e.target.value;\n        const upperCaseValue = value.toLocaleUpperCase()\n        setSection({\n            ...Section,\n            [e.target.name]: upperCaseValue\n        })\n\n    }\n    const AddSectionHandler = () => {\n        if (Section.cat_name === '' | Section.hod_name === '') {\n            alert(`\"Section Name\" or \"Head of Section\" cannot be empty `)\n        }\n\n        if (ClassSection.length === 0 & !(Section.cat_name === '' | !Section.hod_name === '')) {\n            console.log(Section)\n            setClassSection(ClassSection.concat(Section))\n        }\n        if (ClassSection.length !== 0) {\n            let checkConflictArray1 = ClassSection.filter(section => section.cat_name === Section.cat_name)\n            if (checkConflictArray1.length === 0) {\n                setClassSection(ClassSection.concat(Section))\n            }\n            else {\n                console.log({ checkConflictArray1 })\n                alert(`${Section.cat_name} section already added`)\n            }\n        }\n    }\n\n\n    const DeleteHandler = (e) => {\n        const currentIndex = e.target.id\n\n        let newAllSection = [...ClassSection];\n        newAllSection.splice(currentIndex, 1)\n        setClassSection(newAllSection)\n\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if (ClassSection.length === 0) {\n            alert(`Atleast one section must be must added`)\n        }\n\n        else {\n            //save all sections to DB\n            dbServices.saveAllSection(ClassSection)\n        }\n\n\n\n    }\n\n    return (\n        <div className='d-flex flex-row' >\n\n            <div className='container d-flex justify-content-center align-items-center flex-column '>\n                <h4 className='justify-self-center text-center text-danger mt-4 font-weight-bold' >Register Section(s) Below</h4>\n                <Card className='container shadow-lg p-3 mb-5 d-flex'>\n                    <Form className='d-flex   flex-column '>\n                        <FormGroup className='d-flex flex-row mr-0 justify-content-start'>\n                            <Label for=\"username\" className='font-weight-bold w-25 text-success'>Section Name:</Label>\n                            <Input type=\"text\" name=\"cat_name\" value={Section.cat_name} onChange={changeHandler} placeholder=\"e.g: Nursery, Basic, JSS, SSS\" />\n                        </FormGroup >\n                        <FormGroup className='d-flex flex-row ' >\n                            <Label for=\"username\" className='font-weight-bold w-25 text-success'>Head of Section:</Label>\n                            <Input type=\"text\" name=\"hod_name\" value={Section.hod_name} onChange={changeHandler} placeholder=\"e.g Ustaz Zulqarnain\" />\n                        </FormGroup>\n                    </Form>\n                    <div className='d-flex align-self-center justify-content-lg-center '>\n                        <Button className='text-light font-weight-bold'\n                            color='success'\n                            onClick={AddSectionHandler}>Add Section</Button>\n                    </div>\n                </Card>\n                <Table className='text-success' bordered hover striped>\n                    <thead>\n                        <tr>\n\n                            <th>Section Name</th>\n                            <th>HOD Name</th>\n                            <th>Number of Classes Registered</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            ClassSection.length !== 0 &&\n                            ClassSection.map((section, index) => {\n                                return (\n                                    < tr key={index}>\n                                        <td>{section.cat_name}</td>\n                                        <td>{section.hod_name}</td>\n                                        <td>0</td>\n                                        <td >\n                                            <Button\n                                                id={index}\n                                                onClick={DeleteHandler}\n                                                className='ml-2 text-light bg-success font-weight-bold'>Delete</Button>\n\n                                        </td>\n                                    </tr>\n                                )\n                            })\n\n\n\n\n                        }\n                    </tbody>\n                </Table>\n\n\n\n                <div className='d-flex align-self-center justify-content-lg-center '>\n                    <Button className='text-light font-weight-bold'\n                        color='success'\n                        onClick={onSubmit}>Submit</Button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AddclassCategoryForm\n","import React, { useState, useEffect } from 'react';\nimport { Table, Card, Form, Label, Input, Button, FormGroup } from 'reactstrap';\nimport { dbServices } from '../../services/services';\n\n\n\n\nfunction AddclassClassesForm(props) {\n    const sectionName = props.match.params.sectionname.toLocaleLowerCase()\n    console.log(sectionName)\n    const [Classes, setClasses] = useState([])\n    const [myClass, setmyClass] = useState({ class_name: '', teacher_name: '', })\n\n    useEffect(() => {\n        //fetchAllClassess\n        dbServices.fetchAllClasses(sectionName, setClasses, Classes)\n    }, [])\n\n    const changeHandler = (e) => {\n        const value = e.target.value;\n        const upperCaseValue = value.toLocaleUpperCase()\n        setmyClass({\n            ...myClass,\n            [e.target.name]: upperCaseValue\n        })\n\n    }\n    const AddmyClassHandler = () => {\n        if (myClass.class_name === '' | myClass.teacher_name === '') {\n            alert(`\"Class Name\" or \"Class Teacher's Name\" cannot be empty `)\n        }\n        else {\n\n            let checkConflictArray = Classes.filter(Class => Class.class_name === myClass.class_name)\n\n            if (checkConflictArray.length === 0) {\n                setClasses(Classes.concat(myClass))\n            }\n            else {\n                console.log({ checkConflictArray })\n                alert(`${myClass.class_name} class already added`)\n            }\n        }\n    }\n    // const EditHandler = (e) => {\n    //     const currentIndex = e.target.id\n\n    //     let tempStateData = [...Classes] //Create a dummy array variable to hold Classes \n    //     setmyClass(tempStateData[currentIndex])\n    //     db.get(sectionName)\n    //         .then(doc => {\n    //             db.put({\n    //                 _id: sectionName,\n    //                 _rev: doc._rev,\n    //                 Classes: Classes,\n    //                 no_of_classes: 0\n    //             }).then(result => {\n\n    //                 // setClasses(tempStateData)\n    //                 //settextChange(!textChange) //this is use to update state(causes change to DOM) so a re-render occur\n    //                 //setClasses(Classes.concat(myClass))\n    //             })\n    //         })\n    // }\n    const DeleteHandler = (e) => {\n        const currentIndex = e.target.id\n        let newClasses = [...Classes];\n        newClasses.splice(currentIndex, 1)\n        setClasses(newClasses)\n\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        if (Classes.length === 0) {\n            alert(`Atleast one myClass must be must added`)\n        }\n        else {\n            //saveClasses to DB\n            dbServices.saveClasses(sectionName, Classes)\n        }\n    }\n\n    return (\n        <div className='d-flex flex-row' >\n\n            <div className='container d-flex justify-content-center align-items-center flex-column '>\n\n                <h4 className='justify-self-center text-center text-success mt-4 font-weight-bold' > {sectionName.toLocaleUpperCase()} SECTION</h4>\n\n                <h4 className='justify-self-center text-center text-danger mt-4 font-weight-bold' >Register Class(es)</h4>\n                <Card className='container shadow-lg p-3 mb-5 d-flex'>\n                    <Form className='d-flex   flex-column '>\n                        <FormGroup className='d-flex flex-row mr-0 justify-content-start'>\n                            <Label for=\"username\" className='font-weight-bold w-25 text-success'>Class Name:</Label>\n                            <Input type=\"text\" name=\"class_name\" value={myClass.class_name} onChange={changeHandler} placeholder=\"e.g: Nursery 1, Basic 2, JSS 3, SSS 1 \" />\n                        </FormGroup >\n                        <FormGroup className='d-flex flex-row ' >\n                            <Label for=\"username\" className='font-weight-bold w-25 text-success'>Class Teacher Name:</Label>\n                            <Input type=\"text\" name=\"teacher_name\" value={myClass.teacher_name} onChange={changeHandler} placeholder=\"e.g Ustaz Zulqarnain\" />\n                        </FormGroup>\n                    </Form>\n                    <div className='d-flex align-self-center justify-content-lg-center '>\n                        <Button className='text-light font-weight-bold'\n                            color='success'\n                            onClick={AddmyClassHandler}>Add Class</Button>\n                    </div>\n                </Card>\n\n\n                <Table className='text-success' bordered hover striped>\n                    <thead>\n                        <tr>\n\n                            <th>Class Name</th>\n                            <th>Class Teacher Name</th>\n                            <th>Number of Subjects Registered</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {Classes.map((myClass, index) => {\n                            return (\n                                < tr key={index}>\n                                    <td>{myClass.class_name}</td>\n                                    <td>{myClass.teacher_name}</td>\n                                    <td>0</td>\n                                    <td >\n                                        {/* <Button className='ml-2 text-light bg-success font-weight-bold'\n                                            id={index}\n                                            onClick={EditHandler}\n                                        >\n                                            Edit\n                                        </Button> */}\n                                        <Button className='ml-2 text-light bg-success font-weight-bold'\n                                            id={index}\n                                            onClick={DeleteHandler}\n                                        >\n                                            Delete\n                                        </Button>\n\n\n                                    </td>\n                                </tr>\n                            )\n                        })\n\n                        }\n                    </tbody>\n                </Table>\n                <div className='d-flex align-self-center justify-content-lg-center '>\n                    <Button className='text-light font-weight-bold'\n                        color='success'\n                        onClick={onSubmit}>Submit</Button>\n                </div>\n            </div>\n\n        </div>\n\n\n\n    )\n}\n\nexport default AddclassClassesForm\n","import React, { useState, useEffect } from 'react';\nimport { Table, Card, Form, Label, Input, Button, FormGroup } from 'reactstrap';\n\nimport { dbServices } from '../../services/services';\n\n\nfunction ManageStudent(props) {\n    const ClassName = props.match.params.ClassRoomName.toLocaleLowerCase()\n\n    const gender = ['MALE', 'FEMALE']\n    const [AllmyStudent, setAllmyStudent] = useState([])\n    //const [studentInScores, setstudentInScores] = useState({})\n    const [myStudent, setmyStudent] = useState({ fName: '', sName: '', gender: gender[0] })\n\n    const [Scores, setScore] = useState(null)\n\n    useEffect(() => {\n        //fetch All Students\n        dbServices.getStudentsAndScore(ClassName, setAllmyStudent, AllmyStudent, setScore)\n\n    }, [])\n\n\n    const changeHandler = (e) => {\n        const value = e.target.value;\n        const upperCaseValue = value.toLocaleUpperCase()\n        setmyStudent({\n            ...myStudent,\n            [e.target.name]: upperCaseValue\n        })\n\n\n    }\n    const AddmyStudentHandler = () => {\n        if (myStudent.fName === '' || myStudent.sName === '') {\n            alert(`\"Student First Name\" or \"Student Surname\" cannot be empty `)\n        }\n        else {\n\n            let checkConflictArray = AllmyStudent.filter(students => students.fName === myStudent.fName && students.sName === myStudent.sName)\n            if (checkConflictArray.length === 0) {\n                setAllmyStudent(AllmyStudent.concat(myStudent))\n            }\n            else {\n                alert(`${myStudent.fName} ${myStudent.sName} already added`)\n            }\n        }\n    }\n\n    const DeleteHandler = (e) => {\n        const currentIndex = e.target.id\n        let newAllmyStudent = [...AllmyStudent];\n        newAllmyStudent.splice(currentIndex, 1)\n        setAllmyStudent(newAllmyStudent)\n\n        if (Scores) {\n            for (const key in Scores) {\n                if (Scores.hasOwnProperty.call(Scores, key)) {\n                    Scores[key].splice(currentIndex, 1);\n                }\n            }\n            setScore(Scores)\n            dbServices.deleteStudentfromScore(ClassName, Scores)\n        }\n\n\n\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        if (AllmyStudent.length === 0) {\n            alert(`No Student added`)\n\n        }\n\n        else {\n            //Save Students to DB\n            dbServices.saveStudents(ClassName, AllmyStudent)\n        }\n    }\n\n    return (\n        <div className='d-flex flex-row' >\n\n            <div className='container d-flex justify-content-center align-items-center flex-column '>\n\n                <h4 className='justify-self-center text-center text-danger mt-4 font-weight-bold' >{ClassName.toLocaleUpperCase()}</h4>\n                <h4 className='justify-self-center text-center text-danger mt-4 font-weight-bold' >Register Student(s) Below</h4>\n                <Card className='container shadow-lg p-3 mb-5 d-flex'>\n                    <Form className='d-flex   flex-column '>\n                        <FormGroup className='d-flex flex-row mr-0 justify-content-start'>\n                            <Label for=\"username\" className='font-weight-bold w-25 text-success'>Student First Name:</Label>\n                            <Input type=\"text\" name=\"fName\" value={myStudent.fName} onChange={changeHandler} placeholder=\"e.g: Student First Name\" />\n                        </FormGroup >\n                        <FormGroup className='d-flex flex-row mr-0 justify-content-start'>\n                            <Label for=\"username\" className='font-weight-bold w-25 text-success'>Student Surname Name:</Label>\n                            <Input type=\"text\" name=\"sName\" value={myStudent.sName} onChange={changeHandler} placeholder=\"e.g: Student Surname\" />\n                        </FormGroup >\n                        <FormGroup className='d-flex flex-row ' >\n                            <Label for=\"username\" className='font-weight-bold w-25 text-success'>Gender</Label>\n                            <Input type=\"select\" name='gender' value={myStudent.sGender} onChange={changeHandler} >\n                                {gender.map((state, index) => (\n                                    <option key={index}>{state}</option>\n                                ))\n                                }\n                            </Input>\n                        </FormGroup>\n                    </Form>\n                    <div className='d-flex align-self-center justify-content-lg-center '>\n                        <Button className='text-light font-weight-bold'\n                            color='success'\n                            onClick={AddmyStudentHandler}>Add Student</Button>\n                    </div>\n                </Card>\n                <Table className='text-success' bordered hover striped>\n                    <thead>\n                        <tr>\n\n                            <th>Student Name</th>\n                            <th>Gender</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n\n                            AllmyStudent.map((myStudent, index) => {\n                                return (\n                                    < tr key={index}>\n                                        <td>{myStudent.fName} {myStudent.sName}</td>\n\n                                        <td>{myStudent.gender}</td>\n                                        <td >\n                                            <Button\n                                                id={index}\n                                                onClick={DeleteHandler}\n                                                className='ml-2 text-light bg-success font-weight-bold'>Delete</Button>\n\n                                        </td>\n                                    </tr>\n                                )\n                            })\n\n                        }\n                    </tbody>\n                </Table>\n\n\n\n                <div className='d-flex align-self-center justify-content-lg-center '>\n                    <Button className='text-light font-weight-bold'\n                        color='success'\n                        onClick={onSubmit}>Submit</Button>\n                </div>\n\n            </div>\n        </div>\n\n    )\n}\n\nexport default ManageStudent\n","import React from 'react'\nimport { Table, Button } from 'reactstrap';\nimport { dbServices } from '../../services/services';\n\n\n\nfunction SubjectTable({ AllmySubjects, setAllmySubjects, className }) {\n\n    const DeleteHandler = (e) => {\n        const currentIndex = e.target.id\n\n        let newAllmySubjects = [...AllmySubjects];\n        newAllmySubjects.splice(currentIndex, 1)\n        setAllmySubjects(newAllmySubjects)\n    }\n    const onSubmit = (e) => {\n        e.preventDefault()\n        if (AllmySubjects.length === 0) {\n            alert(`Atleast one mySubjects must be must added`)\n        }\n        else {\n            dbServices.dbUpdateSubject(className, AllmySubjects)\n        }\n    }\n    return (\n        <div class='w-100'>\n            <Table className='text-success' bordered hover striped>\n                <thead>\n                    <tr>\n                        <th>Subject Name</th>\n                        <th>Teacher Name</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        AllmySubjects.length !== 0 &&\n                        AllmySubjects.map((mySubjects, index) => {\n                            return (\n                                < tr key={index}>\n                                    <td>{mySubjects.subjectName}</td>\n                                    <td>{mySubjects.teacherName}</td>\n\n                                    <td >\n                                        <Button\n                                            id={index}\n                                            onClick={DeleteHandler}\n                                            className='ml-2 text-light bg-success font-weight-bold'>Delete</Button>\n\n                                    </td>\n                                </tr>\n                            )\n                        })\n\n                    }\n                </tbody>\n            </Table>\n\n            <div className='d-flex align-self-center justify-content-lg-center '>\n                <Button className='text-light font-weight-bold'\n                    color='success'\n                    onClick={onSubmit}>Submit</Button>\n            </div>\n        </div>\n    )\n}\n\nexport default SubjectTable\n","import React, { useState, useEffect } from 'react';\nimport { Card, Form, Label, Input, Button, FormGroup } from 'reactstrap';\nimport { dbServices } from '../../services/services';\n\nimport SubjectTable from './SubjectTable';\n\n\n\nfunction ManageSubject(props) {\n    const className = props.match.params.ClassRoomName.toLocaleLowerCase()\n    console.log(className)\n    const [AllmySubjects, setAllmySubjects] = useState([])\n    const [mySubjects, setmySubjects] = useState({ subjectName: '', teacherName: '', })\n\n    useEffect(() => {\n        //fetch subjects and display in table\n        dbServices.getSubjects(className, setAllmySubjects, AllmySubjects);\n    }, [])\n\n\n\n    const changeHandler = (e) => {\n        const value = e.target.value;\n        const upperCaseValue = value.toLocaleUpperCase()\n        setmySubjects({\n            ...mySubjects,\n            [e.target.name]: upperCaseValue\n        })\n\n    }\n    const AddmySubjectsHandler = () => {\n        if (mySubjects.subjectName === '' | mySubjects.teacherName === '') {\n            alert(`\"Subject Name\" or \"Teacher's Name\" cannot be empty `)\n        }\n        else {\n\n            let checkConflictArray = AllmySubjects.filter(Class => Class.subjectName === mySubjects.subjectName)\n\n            if (checkConflictArray.length === 0) {\n                setAllmySubjects(AllmySubjects.concat(mySubjects))\n            }\n            else {\n                console.log({ checkConflictArray })\n                alert(`${mySubjects.subjectName} already added`)\n            }\n        }\n    }\n\n\n\n    return (\n        <div className='d-flex flex-row' >\n\n            <div className='container d-flex justify-content-center align-items-center flex-column '>\n\n                <h4 className='justify-self-center text-center text-danger mt-4 font-weight-bold' >{className.toLocaleUpperCase()}</h4>\n                <h4 className='justify-self-center text-center text-danger mt-4 font-weight-bold' >Register Subject(s) Below</h4>\n                <Card className='container shadow-lg p-3 mb-5 d-flex'>\n                    <Form className='d-flex   flex-column '>\n                        <FormGroup className='d-flex flex-row mr-0 justify-content-start'>\n                            <Label for=\"username\" className='font-weight-bold w-25 text-success'>Subject Name:</Label>\n                            <Input type=\"text\" name=\"subjectName\" value={mySubjects.subjectName} onChange={changeHandler} placeholder=\"e.g: Mathematics, English language \" />\n                        </FormGroup >\n                        <FormGroup className='d-flex flex-row ' >\n                            <Label for=\"username\" className='font-weight-bold w-25 text-success'>Teacher's Name:</Label>\n                            <Input type=\"text\" name=\"teacherName\" value={mySubjects.teacherName} onChange={changeHandler} placeholder=\"e.g Ustaz Zulqarnain\" />\n                        </FormGroup>\n                    </Form>\n                    <div className='d-flex align-self-center justify-content-lg-center '>\n                        <Button className='text-light font-weight-bold'\n                            color='success'\n                            onClick={AddmySubjectsHandler}>Add Subjects</Button>\n                    </div>\n                </Card>\n                <SubjectTable AllmySubjects={AllmySubjects} setAllmySubjects={setAllmySubjects} className={className} />\n            </div>\n\n        </div>\n    )\n}\n\nexport default ManageSubject\n","import React, { useEffect, useState } from 'react'\nimport { Card, Form, FormGroup, Label, Input, Button } from 'reactstrap';\n\n\n//DATEPICKER AND ITS CSS\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport { dbServices } from '../../services/services';\n\n\nfunction ResultsGenerator() {\n\n    const [ResultGenData, setResultGenData] = useState({\n        class: [],\n        noOfClasses: 0,\n        term: 'FIRST TERM',\n        selectedClass: '',\n        session: '',\n        nextTermBeing: new Date()\n    })\n\n    useEffect(() => {\n        let tempClassValue = []\n        dbServices.getResultGeneratorData(ResultGenData, setResultGenData, tempClassValue)\n    }, [])\n\n    const handleChange = (e) => {\n        const value = e.target.value;\n\n        setResultGenData({\n            ...ResultGenData,\n            [e.target.name]: value\n        })\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        const Data = {\n            term: ResultGenData.term,\n            selectedClass: ResultGenData.selectedClass,\n            session: ResultGenData.session,\n            nextTermBeing: ResultGenData.nextTermBeing.toDateString()\n        }\n        if (ResultGenData.session === '') {\n            alert(\"'Session' cannot be empty\")\n        }\n        else {\n            //save resultData\n            console.log(Data)\n            dbServices.saveresultData(Data)\n        }\n    }\n    return (\n        <div>\n\n            <div className='d-flex justify-content-center align-items-center flex-column'>\n\n                <Card className='container border w-50 shadow-lg p-3 d-flex align-items-center'>\n                    <h4 className='text-danger mb-5 text-center font-weight-bold' >                    RESULT GENERATOR</h4>                <Form >\n                        <FormGroup className='d-flex w-100' >\n                            <Label for=\"Class\" className='text-success font-weight-bold pr-3'>Class:</Label>\n                            <Input type=\"select\" name=\"selectedClass\" value={ResultGenData.selectedClass} onChange={handleChange} >\n                                {\n                                    ResultGenData.class.map((item, index) =>\n                                        < option key={index} > {item.class_name}</option>\n                                    )\n                                }\n                            </Input>\n                        </FormGroup>\n                        <FormGroup className='d-flex w-100'>\n                            <Label for=\"Class\" className='text-success font-weight-bold pr-3'>Term</Label>\n                            <Input type=\"select\" name=\"term\" value={ResultGenData.term} onChange={handleChange} >\n                                <option >FIRST TERM</option>\n                                <option >SECOND TERM</option>\n                                <option >THIRD TERM</option>\n                            </Input>\n                        </FormGroup>\n                        <FormGroup className='d-flex w-100' >\n                            <Label for=\"Session\" className='text-success font-weight-bold pr-3'>Session</Label>\n                            <Input type=\"text\" name=\"session\" value={ResultGenData.session} onChange={handleChange} placeholder=\"e.g 2021/2022\" />\n                        </FormGroup  >\n                        <div className='d-flex w-100 mb-3'>\n                            <Label for=\"Next Term Resumption Date\" className='text-success font-weight-bold pr-3'>Next Term Begin on</Label>\n                            <DatePicker selected={ResultGenData.nextTermBeing} calendarClassName=\"rasta-stripes\" onChange={date => { setResultGenData({ ...ResultGenData, nextTermBeing: date }); }} />\n                        </div>\n                    </Form >\n                    <div className='d-flex justify-content-lg-center '>\n                        {/* using this button to test CONTEXT API */}\n                        <Button className='text-light font-weight-bold pr-3'\n                            color='success'\n                            onClick={onSubmit}>Submit</Button>\n                    </div>\n                </Card >\n            </div>\n        </div >\n    )\n}\n\nexport default ResultsGenerator\n","import React from 'react'\n\nimport { Card, Form, FormGroup, Label, Input, Button } from 'reactstrap';\n\nimport { dbServices } from '../../services/services';\n\n/**DESCRIPTION: A FORM COMPONENT THAT CHANGES THE ADMIN PASSWORD. \n * ===========TASKS============\n * 1.   DISPLAY SIDEBAR AND THE FORM TO COLLECT \"NEW PASSWORD\" AND \"PASSWORD AGAIN\" \n * 2.   ONSUBMISSION:\n *      A.  THE COMPONENT CHECKS IF USER ENTER IF USER ENTERS VALUE OR NOT \n *      B.  THE COMPONENT CHECKS IF THE TWO PASSWORD FIELD ENTERED MATCHED\n *      C.  IF VALUE ENTERED AND MATCHED, THE COMPONENTS FETCHED CURRENT userId FROM DB AND RESET PASSWORD TO VALUE ENTERED\n * \n */\nfunction ChangePwd() {\n\n    console.log(window.location.pathname)\n    const [profile, setProfile] = React.useState({\n        password: '',\n        confirmPassword: '',\n    })\n\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        if (profile.confirmPassword === '' || profile.password === '') {\n            alert('\"New Password\" and \"Password Again\" fields can not be empty')\n        }\n        else if (profile.confirmPassword !== profile.password) {\n            alert('Passwrod not match! Ensure \"New confirm password\" and \"Confirm confirm password\" match')\n        }\n\n        //Change Password in DB\n        dbServices.changePasswordinDb(profile)\n\n    }\n\n    const handleChange = (e) => {\n        const value = e.target.value;\n        setProfile({\n            ...profile,\n            [e.target.name]: value\n        })\n\n    }\n\n\n    return (\n        <div>\n            {/* * 1.   DISPLAY SIDEBAR AND THE FORM TO COLLECT \"NEW PASSWORD\" AND \"PASSWORD AGAIN\"  */}\n\n\n            <div className='d-flex justify-content-center align-items-center flex-column'>\n\n\n\n                {/* FORM START HERE */}\n                <Card className='container w-50 shadow-lg p-3 d-flex flex-column align-items-center'>\n                    <h4 className='text-success font-weight-bold'>Change confirm password</h4>\n                    <Form >\n                        <FormGroup >\n                            <Label for=\"new password\" className='text-success font-weight-bold'>New Password</Label>\n                            <Input type=\"text\" name=\"password\" value={profile.Password} onChange={handleChange} placeholder=\"new password\" />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"confirm password\" className='text-success font-weight-bold'>Password Again</Label>\n                            <Input type=\"text\" name=\"confirmPassword\" value={profile.confirmPassword} onChange={handleChange} placeholder=\"confirm password\" />\n                        </FormGroup>\n                    </Form>\n                    <div className='d-flex justify-content-lg-center '>\n                        <Button className='text-light font-weight-bold'\n                            color='success'\n                            onClick={onSubmit}>Submit</Button>\n                    </div>\n\n                </Card >\n            </div>\n        </div >\n    )\n}\n\nexport default ChangePwd\n","import React, { useEffect, useState } from 'react'\nimport { Card, Form, FormGroup, Label, Input, Button } from 'reactstrap';\n\n\n//DATEPICKER AND ITS CSS\nimport { dbServices } from '../../services/services';\n\n\nfunction ResultsGenerator() {\n\n    const [ResultGenData, setResultGenData] = useState({\n        class: [],\n        selectedClass: ''\n    })\n\n    useEffect(() => {\n        let tempClassValue = []\n        dbServices.getResultGeneratorData(ResultGenData, setResultGenData, tempClassValue)\n    }, [])\n\n    const handleChange = (e) => {\n        const value = e.target.value\n        console.log(value)\n        setResultGenData({\n            ...ResultGenData,\n            [e.target.name]: value\n        })\n    }\n    console.log(ResultGenData)\n    const onSubmit = (e) => {\n        e.preventDefault()\n        // const Data = {\n        //     term: ResultGenData.term,\n        //     selectedClass: ResultGenData.selectedClass,\n        //     session: ResultGenData.session,\n        //     nextTermBeing: ResultGenData.nextTermBeing.toDateString()\n        // }\n\n        window.location = `${ResultGenData.selectedClass.toLocaleLowerCase()}/classroom`\n\n    }\n    return (\n        <div >\n\n            <div className='d-flex justify-content-center align-items-center flex-column'>\n\n\n                <Card className='container border w-50 shadow-lg p-3 d-flex align-items-center'>\n                    <h4 className='text-danger mb-5 text-center font-weight-bold' > SPECIFY A DESIRED CLASS</h4>\n                    <Form >\n                        <FormGroup className='d-flex w-100' >\n                            <Label for=\"Class\" className='text-success font-weight-bold pr-3'>Class:</Label>\n                            <Input type=\"select\" name=\"selectedClass\" value={ResultGenData.selectedClass} onChange={handleChange} >\n                                {\n                                    ResultGenData.class.map((item, index) =>\n                                        < option key={index} > {item.class_name}</option>\n                                    )\n                                }\n                            </Input>\n                        </FormGroup>\n\n                    </Form >\n                    <div className='d-flex justify-content-lg-center '>\n                        {/* using this button to test CONTEXT API */}\n                        <Button className='text-light font-weight-bold pr-3'\n                            color='success'\n                            onClick={onSubmit}>Submit</Button>\n                    </div>\n                </Card >\n            </div>\n        </div >\n    )\n}\n\nexport default ResultsGenerator\n","export default __webpack_public_path__ + \"static/media/logo.4ec21b3b.jpg\";","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom'\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, Button } from 'reactstrap';\n\n//Logo\nimport Logo from './logo.jpg'\n\nconst NavBar = () => {\n\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n    const [styles, setStyles] = useState({ display: 'flex', flexDirection: 'column', justifyContent: 'start' })\n\n    useEffect(() => {\n        if (window.location.pathname === '/' || window.location.pathname === '/result')\n            setStyles({ display: 'none' })\n        else {\n            setStyles({ display: 'flex', flexDirection: 'column', justifyContent: 'start' })\n        }\n    }, [])\n    return (\n        <div className='fixed-top rounded mb-4' style={styles}>\n\n\n            <Navbar color=\"success d-flex flex-column\" light expand=\"sm\">\n                <NavbarToggler onClick={toggle} />\n                <div className='d-flex justify-content-center '>\n                    <NavbarBrand to=\"/\" className='font-weight-bold'>\n                        <img style={{ width: '100px', height: '100px' }} src={Logo} alt='Logo' />\n                    </NavbarBrand>\n                    <div>\n                        <h2 className='text-light text-center' >AFMUC INTERNATIONAL MISSIONARY SCHOOL</h2>\n                        <h4 className='text-light text-center' >STUDENT RESULT MANAGEMENT SYSTEM</h4>\n                    </div>\n                </div>\n                <Collapse className='w-50 light justify-content-center' isOpen={isOpen} navbar>\n                    <Nav className=\"mr-auto d-flex flex-column w-100\" navbar>\n                        <ul className=\"nav d-flex justify-content-between alighn-items-between w-100\">\n\n                            <li className=\"nav-item\">\n                                <Link to='/allclassSection'>\n                                    <Button color='success' className='bg-success m-2 text-light' >\n                                        All Sections\n                                    </Button>\n                                </Link>\n\n                            </li>\n\n\n\n                            <li className=\"nav-item\">\n                                <Link to='/gotoClass'>\n                                    <Button color='success' className='bg-success m-2 text-light' >\n                                        Go to Class\n                                    </Button>\n                                </Link>\n\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link to='/resultsgenerator'>\n                                    <Button color='success' className='bg-success m-2 text-light' >\n                                        Result\n                                    </Button>\n                                </Link>\n                            </li>\n\n                            <li className=\"nav-item\">\n                                <Link to='/'>\n                                    <Button color='success ' className='bg-success m-2 text-light' onClick={() => setStyles({ display: 'none' })} >\n                                        LogOut\n                                    </Button>\n                                </Link>\n\n                            </li>\n                        </ul>\n                    </Nav>\n                </Collapse>\n\n\n            </Navbar>\n\n\n\n\n        </div >\n    );\n}\n\nexport default NavBar;","export const pysochomotorTableLabel = ['Handwring', 'Verbal Fluency', 'Games', 'Handing Tools', 'Attitude in Class']\n\nexport const affectiveDomainTableLabel = ['Punctuality', 'Neatness', 'Politeness', 'Honesty', 'Rel. with Peers', 'Mental Alertness']\n\nexport const attendanceTableLabel = ['No. of times School Open', 'No. of Times Present', 'No. of Times Absents']\n\n\nexport const performanceTableLabel = ['1st Test', '2nd Test', 'Term Exam', 'Term Total', 'Total B/Forward', 'Cummulative Total', 'Final %', 'Grade', 'Signature']\n\n\nexport const subjectSample = ['', '', 'Mathematics', 'Eng.Studies', 'P.H.E', 'Eng.Studies', 'P.H.E', 'Eng.Studies', 'P.H.E', 'Eng.Studies', 'P.H.E', 'Eng.Studies', 'P.H.E', 'Eng.Studies', 'P.H.E', 'Eng.Studies', 'P.H.E']\n\n\nexport const ratingData = ['5 - Maintains an excellent degree of observable trails', '4 -  Maintains high level of observable trails', '3 - Acceptable level of observable trails', '2 - Shows minimal regard for observale trails', '1 - Has no regard for observable trails']\n\nexport const gradingData = ['A - Distinction - 75% and above', 'B -  Credit - 60% - 74%', 'C - Pass - 50% - 59%', 'D - Fail - 49% and below']\n\n\n","import React from 'react'\n\n\nexport const Table = {\n    pysochomotorTale: (pysochomotor) => {\n        return (\n            <table id='doubleTable' className='text-success border' >\n                <thead>\n                    <tr>\n                        <th colSpan=\"6\" className='text-center'>1. PSYCHOMOTOR </th>\n                    </tr>\n                    <tr>\n                        <th className='text-center'></th>\n                        <th className='text-center'>5</th>\n                        <th className='text-center'>4</th>\n                        <th className='text-center'>3</th>\n                        <th className='text-center'>2</th>\n                        <th className='text-center'>1</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        pysochomotor.length !== 0 &&\n                        pysochomotor.map((item, index) => {\n                            return (\n                                < tr key={index}>\n                                    <td style={{ width: '250px' }}>{item}</td>\n                                    <td ></td>\n                                    <td ></td>\n                                    <td ></td>\n                                    <td ></td>\n                                    <td ></td>\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table >\n        )\n    },\n    affectiveDomainTable: (pysochomotor) => {\n        return (\n            <table id='doubleTable' className=' text-success border' >\n                < thead >\n                    <tr>\n                        <th colSpan=\"6\" className='text-center'> 2. AFFECTIVE DOMAIN </th>\n                    </tr>\n                    <tr>\n                        <th className='text-center'></th>\n                        <th className='text-center'>5</th>\n                        <th className='text-center'>4</th>\n                        <th className='text-center'>3</th>\n                        <th className='text-center'>2</th>\n                        <th className='text-center'>1</th>\n                    </tr>\n                </thead >\n                <tbody className='w-100'>\n                    {\n                        pysochomotor.length !== 0 &&\n                        pysochomotor.map((item, index) => {\n                            return (\n                                < tr key={index}>\n                                    <td style={{ width: '250px' }} >{item}</td>\n                                    <td ></td>\n                                    <td ></td>\n                                    <td ></td>\n                                    <td ></td>\n                                    <td ></td>\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table >\n        )\n    },\n    attendanceTable: (attendeance) => {\n        return (\n            <table id='doubleTableminus' className='text-success border ' >\n                <thead>\n                    <tr>\n                        <th colSpan=\"2\" className='text-center'> 3. ATTENDANCE </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        attendeance.length !== 0 &&\n                        attendeance.map((item, index) => {\n                            return (\n                                < tr key={index}>\n                                    <td id='doubleTD'>{item}</td>\n                                    <td id='doubleTD'></td>\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table >\n        )\n    },\n\n    physicalAndHealth: () => {\n        return (\n            <table id='doubleTablePlus' className='text-success border ' >\n                <thead>\n                    <tr>\n                        <th colSpan=\"4\" className='text-center'> 4. PHYSICAL DEVELOPMENT & HEALTH </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    < tr className='text-center'>\n                        <th colSpan=\"2\" id='doubleTD'>HEALTH</th>\n                        <th colSpan=\"2\" id='doubleTD'>WEIGHT</th>\n                    </tr>\n\n                    < tr className='text-center'>\n                        <td id='quarterTD'>Beginning of Term</td>\n                        <td id='quarterTD'>End of Term</td>\n\n                        <td id='quarterTD'>Beginning of Term</td>\n                        <td id='quarterTD'>End of Term</td>\n                    </tr>\n\n                    < tr className='text-right'>\n                        <td id='quarterTD'>m</td>\n                        <td id='quarterTD'>m</td>\n\n                        <td id='quarterTD'>kg</td>\n                        <td id='quarterTD'>kg</td>\n\n                    </tr>\n\n                </tbody>\n            </table >\n        )\n    },\n    keyToRating: (key) => {\n        return (\n            <table id='rating' className=' text-success border' >\n                < thead >\n                    <tr>\n                        <th colSpan=\"2\" className='text-center'> KEY TO RATING </th>\n                    </tr>\n                </thead >\n                <tbody className='w-100'>\n                    {\n                        key.length !== 0 &&\n                        key.map((item, index) => {\n                            return (\n                                < tr key={index}>\n                                    <td >{item}</td>\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table >\n        )\n    },\n\n    keyToGrading: (key) => {\n        return (\n            <table id='grading' className=' text-success border' >\n                < thead >\n                    <tr>\n                        <th colSpan=\"2\" className='text-center'> KEY TO GRADING</th>\n                    </tr>\n                </thead >\n                <tbody className='w-100'>\n                    {\n                        key.length !== 0 &&\n                        key.map((item, index) => {\n                            return (\n                                < tr key={index}>\n                                    <td >{item}</td>\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table >\n        )\n    },\n    performanceTable: (performanceTableLabel, subjects, id, scores, currentData) => {\n        var SumOfFinalPercentage = 0;\n        console.log(subjects.length)\n        return (\n\n            <div style={{ width: '99%' }} >\n                <table id='performanceTABLE' className='text-success text-center w-100 border' >\n                    <thead>\n                        <tr>\n                            <th colSpan={performanceTableLabel.length + 1} className='text-center'> 5. PERFORMANCE IN SUBJECTS (COGNITIVE) </th>\n                        </tr>\n                    </thead>\n\n                    <tbody >\n                        <tr>\n                            <td></td>\n                            {\n                                performanceTableLabel.map((label, labIndex) => {\n                                    return (\n                                        <td key={labIndex}>{label}</td>\n                                    )\n                                })\n                            }\n                        </tr>\n                        {\n                            subjects.length !== 0 &&\n                            subjects.map((subject, subIndex) => {\n                                if (!scores[subject.subjectName][id]) {\n                                    window.location = `/${currentData.selectedClass}/classroom/${subject.subjectName}`\n                                }\n                                else {\n                                    if (!(scores[subject.subjectName][id].hasOwnProperty(\"Test1\")) || !(scores[subject.subjectName][id].hasOwnProperty(\"Test2\")) || !(scores[subject.subjectName][id].hasOwnProperty(\"Exam\"))) {\n                                        alert(\"ERROR OCCURED! Please enter score for all students on every subject score sheet\")\n                                    }\n                                    else {\n                                        let IntparsedExam = parseInt(scores[subject.subjectName][id].Exam, 10) || 0\n                                        let IntparsedTest1 = parseInt(scores[subject.subjectName][id].Test1, 10) || 0\n                                        let IntparsedTest2 = parseInt(scores[subject.subjectName][id].Test2, 10) || 0\n                                        let termTotal = IntparsedTest1 + IntparsedTest2 + IntparsedExam\n                                        let IntparsedBForward = parseInt(scores[subject.subjectName][id].BForward, 10) || 0\n                                        let cumulativeTotal = termTotal + IntparsedBForward\n                                        let finalPercentage = cumulativeTotal / 2\n                                        SumOfFinalPercentage = SumOfFinalPercentage + finalPercentage\n                                        return (\n                                            <tr key={subIndex} >\n                                                <td className='text-left'>{subject.subjectName}</td>\n\n                                                {/* Test 1  */}\n                                                <td>{IntparsedTest1}</td>\n\n                                                {/* Test 2 */}\n                                                <td>{IntparsedTest2}</td>\n\n                                                {/* Exam  */}\n                                                <td>{IntparsedExam}</td>\n\n                                                {/* Term Total  */}\n                                                <td>{termTotal}\n                                                </td>\n\n                                                {/* Total B/Forward  */}\n                                                <td>{IntparsedBForward}\n\n                                                </td>\n                                                {/* Cummulative Total  */}\n                                                <td>{cumulativeTotal}\n                                                </td>\n\n                                                {/* Final %  */}\n                                                <td>{finalPercentage}\n                                                </td>\n\n                                                {/* Grade  */}\n                                                <td>{\n                                                    finalPercentage >= 75 ? (\"A\")\n                                                        :\n                                                        finalPercentage >= 60 & finalPercentage <= 74 ? \"B\"\n                                                            :\n                                                            finalPercentage >= 50 & finalPercentage <= 59 ? \"C\"\n                                                                :\n                                                                \"F\"}\n                                                </td>\n                                                <td></td>\n                                            </tr>\n\n                                        )\n                                    }//end of  else let ....\n\n                                }//End of else if (!(scores[subject.subjectName][id].hasOwnProperty(\"Test1\"))) .....\n                            })\n                        }\n\n\n\n\n\n                    </tbody>\n                </table >\n                <div className='d-flex justify-content-end w-100'>\n                    <div className='text-danger font-weight-bold border border-success text-center' style={{ width: '170px' }}>\n                        {/* NOTE: SumOfFinalPercentage/subjects.length(Number of Subject) gives average */}\n                        AVERAGE: {(SumOfFinalPercentage / subjects.length).toPrecision(4)}%\n                        </div>\n                </div>\n\n\n\n            </div >\n\n\n        )\n    }\n}\n\n    // < div className = 'mt-4 w-100 d-flex flex-row justify-content-between' >\n    //     {/* <Label className='font-weight-bold w-25 text-success'>No. of Distinction: {Distinction}</Label> */ }\n    //     < Label className = 'font-weight-bold w-25 text-success' > No.of Credits: {}</Label>\n    //                 <Label className='font-weight-bold w-25 text-success'>No. of Passes:{ }</Label>\n    //                 <Label className='font-weight-bold w-25 text-success'>No. of Failed:{ }</Label>\n    //             </div >","import React from 'react'\nimport { Card, Label } from 'reactstrap';\nimport './result.css'\n\n\nimport * as Data from './ResultData'\nimport { Table } from './ResultTables';\nimport { dbServices } from '../../services/services';\n\n\n\n\n//IMPORTING IPCRENDERER\n\n\nfunction Results() {\n\n    const [students, setStudent] = React.useState([])\n    const [scores, setScore] = React.useState({})\n    const [subjects, setSubjects] = React.useState([])\n    const [currentData, setCurrentData] = React.useState({})\n\n    React.useEffect(() => {\n        // fetch resultData from db and store in State\n        dbServices.getResultData(setCurrentData, setScore, setStudent, setSubjects)\n\n\n    }, [])\n\n\n    return (\n\n\n        <div  >\n            {\n                students.map((student, id) => {\n                    return (\n                        <Card key={id} id='result' className='h-90 d-flex justify-content-center align-items-center flex-column' >\n                            <div className='d-flex flex-column align-items-center mb-1'>\n\n                                <h2 className='text-success text-center font-weight-bold' >AFMUC INTERNATIONAL MISSIONARY SCHOOL</h2>\n                                <h5 className='mt-0 text-success text-center font-weight-bold' >Aker/Saipem Road, Aker Junction, Azumini, Rumuolumeni, Portharcourt, Rivers State<br />\n                                                                        Tel: 0810 324 2265, 0803 704 8190\n                                                                E-mail: afmuc1@yahoo.com\n                                                                                </h5>\n                                <h5 className='text-success text-center font-weight-bold' >NURSERY SECTION RESULT SHEET</h5>\n                            </div >\n                            <div className='mt-3 w-100 d-flex flex-row justify-content-between'>\n                                <Label className='font-weight-bold w-50 text-success'>Student's Name: {student.fName} {student.sName}</Label>\n                                <Label className='font-weight-bold w-25 text-success'>Term: {currentData.term}</Label>\n                                <Label className='font-weight-bold w-25 text-success'>Session: {currentData.session}</Label>\n                            </div>\n                            <div className=' w-100 d-flex flex-row justify-content-between'>\n                                <label className='font-weight-bold w-50 text-success'>Class: {currentData.selectedClass}</label>\n                                <Label className='font-weight-bold w-25 text-success'>Number in Class: {students.length}</Label>\n                                <Label className='font-weight-bold w-25 text-success'>{ } </Label>\n                            </div>\n                            <div className='mt-3 w-100 d-flex flex-row justify-content-between'>\n                                {Table.affectiveDomainTable(Data.affectiveDomainTableLabel)}\n                                {Table.pysochomotorTale(Data.pysochomotorTableLabel)}\n                            </div>\n                            <div className='mt-3 w-100 d-flex flex-row justify-content-between'>\n                                {Table.physicalAndHealth()}\n                                {Table.attendanceTable(Data.attendanceTableLabel)}\n                            </div>\n                            <div className='mt-4 w-100 d-flex flex-row justify-content-start'>\n                                {Table.performanceTable(Data.performanceTableLabel, subjects, id, scores, currentData)}\n                            </div>\n\n                            <div className='mt-3 w-100 d-flex flex-row justify-content-between'>\n                                {Table.keyToRating(Data.ratingData)}\n                                {Table.keyToGrading(Data.gradingData)}\n                            </div>\n                            <div className='mt-4 w-100 d-flex flex-row justify-content-between'>\n                                {\n                                    currentData.nextTermBeing &&\n                                    <Label className='font-weight-bold w-50 text-success'>Next Term Begins: {currentData.nextTermBeing}</Label>\n                                }\n                            </div >\n                            <div className='mt-3 w-100 d-flex flex-column justify-content-between'>\n                                <Label className='font-weight-bold w-100 text-success'>Class Teacher's Remark: _______________________________________________________________________________________________</Label>\n                                <Label className='font-weight-bold w-100 text-success'>_______________________________________________________________________________________ Signature: ____________________</Label>\n                                <Label className='font-weight-bold w-100 text-success'>Group Director's Remark: ______________________________________________________________________________________________</Label>\n                                <Label className='font-weight-bold w-100 text-success'>_______________________________________________________________________________________ Signature: ____________________</Label>\n                            </div>\n                        </Card >\n\n                    )\n                })\n            }\n        </div >\n\n\n    )\n}\n\nexport default Results;\n\n","import React from 'react'\nimport Results from \"./Results\";\n\nexport default class ResultClassBased extends React.PureComponent {\n    render() {\n        return (\n            <Results />\n        );\n    }\n}","import React, { useRef } from 'react'\n//import Results from './Results';\nimport ResultClassBased from './ResultClassBased'\nimport { useReactToPrint } from 'react-to-print';\nimport { Button } from 'reactstrap';\n\nfunction PrintResult() {\n    const [buttonDisplay, setbtnDisplay] = React.useState({ display: 'flex' })\n    const componentRef = useRef();\n    const handlePrint = useReactToPrint({\n        content: () => componentRef.current,\n    });\n\n    const backHandler = () => {\n\n        window.location = '/resultsgenerator'\n    }\n\n    return (\n        <div>\n            < div className='mb-5 mt-5 align-self-center justify-content-lg-center' style={buttonDisplay}>\n                <Button className='mr-4 text-light font-weight-bold'\n                    color='success'\n                    onClick={backHandler}>BACK</Button>\n                <Button className='text-light font-weight-bold'\n                    color='success'\n                    onClick={handlePrint}>PRINT</Button>\n            </div >\n            <ResultClassBased ref={componentRef} style={{ buttonDisplay }} />\n        </div>\n\n    );\n};\n\n\n\nexport default PrintResult","//DEPENDENCIES\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n//PAGES\nimport LogIn from './components/admin/LogIn';\nimport AllClassSection from './components/classes/AllClassSection'\nimport AllClasses from './components/classes/AllClasses'\nimport ClassRoom from './components/classes/ClassRoom';\nimport AddClassSectionForm from './components/classes/AddClassSectionForm'\nimport addClassForm from './components/classes/addClassForm'\nimport ManageStudent from './components/students/ManageStudent';\nimport ManageSubject from './components/subjects/ManageSubject';\nimport ResultsGenerator from './components/result/ResultsGenerator'\nimport ChangePwd from './components/admin/ChangePwd';\nimport GotoClass from './components/classes/GotoClass';\nimport NavBar from './components/NavBar';\nimport PrintResult from './components/result/PrintResult';\n\n\n\n\n/*=====\nAPP.JS\n=======*/\nexport default function App() {\n\n  return (\n\n    <Router TestId='App'>\n      <NavBar />\n      <div style={{ height: '200px' }}></div>\n      <Switch >\n        <Route path=\"/\" exact component={LogIn} />\n        <Route path=\"/allclassSection\" exact component={AllClassSection} />\n\n        <Route path=\"/:sectionname/classes\" exact component={AllClasses} />\n\n        <Route path=\"/addsection\" exact component={AddClassSectionForm} />\n\n        <Route path=\"/:sectionname/addclass\" exact component={addClassForm} />\n\n        <Route path=\"/:myClassName/classroom/:subjectName\" exact component={ClassRoom} />\n        <Route path=\"/:myClassName/classroom\" exact component={ClassRoom} />\n        <Route path=\"/:ClassRoomName/managesubjects\" exact component={ManageSubject} />\n        <Route path=\"/:ClassRoomName/managestudents\" exact component={ManageStudent} />\n        <Route path='/resultsgenerator' exact>\n          <ResultsGenerator />\n        </Route>\n        <Route path=\"/results\" exact component={PrintResult} />\n        <Route path=\"/admin\" exact component={ChangePwd} />\n        <Route path=\"/gotoClass\" exact component={GotoClass} />\n      </Switch>\n\n    </Router >\n\n  );\n}\n\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './App';\nimport './index.css';\n\n\n// Context resultProvider\n//import { ResultProvider } from './AppStore/contextAPI/ResultContext'\n\n\n//REDUX\n// import { Provider } from 'react-redux';\n// import Store from './AppStore/Redux/Store';\n\n\n//BOOTSTRAP\nimport 'bootstrap/dist/css/bootstrap.min.css'\n// \nvar destination = document.getElementById('root');\n// \nReactDOM.render(\n  // <PouchDB name=\"dbname\">\n  //   <Suspense fallback=\"loading...\">\n  // <Provider store={Store} >\n  <App />\n  // </Provider>\n  //   </Suspense>\n  // </PouchDB>\n  , destination);\n\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// //import App from './App';\n// import './index.css';\n\n// ReactDOM.render(<h1>THis is me</h1>, document.getElementById('root'))\n"],"sourceRoot":""}